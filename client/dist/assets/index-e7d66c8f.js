(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity)
      fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy)
      fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous")
      fetchOpts.credentials = "omit";
    else
      fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var jsxRuntimeExports = {};
var jsxRuntime = {
  get exports() {
    return jsxRuntimeExports;
  },
  set exports(v2) {
    jsxRuntimeExports = v2;
  }
};
var reactJsxRuntime_production_min = {};
var reactExports = {};
var react = {
  get exports() {
    return reactExports;
  },
  set exports(v2) {
    reactExports = v2;
  }
};
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var l$1 = Symbol.for("react.element"), n$1 = Symbol.for("react.portal"), p$2 = Symbol.for("react.fragment"), q$1 = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v$3 = Symbol.for("react.forward_ref"), w$2 = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z$1 = Symbol.iterator;
function A$1(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = z$1 && a[z$1] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var B$1 = { isMounted: function() {
  return false;
}, enqueueForceUpdate: function() {
}, enqueueReplaceState: function() {
}, enqueueSetState: function() {
} }, C$1 = Object.assign, D$1 = {};
function E$1(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
E$1.prototype.isReactComponent = {};
E$1.prototype.setState = function(a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a)
    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
  this.updater.enqueueSetState(this, a, b, "setState");
};
E$1.prototype.forceUpdate = function(a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function F() {
}
F.prototype = E$1.prototype;
function G$1(a, b, e) {
  this.props = a;
  this.context = b;
  this.refs = D$1;
  this.updater = e || B$1;
}
var H$1 = G$1.prototype = new F();
H$1.constructor = G$1;
C$1(H$1, E$1.prototype);
H$1.isPureReactComponent = true;
var I$1 = Array.isArray, J = Object.prototype.hasOwnProperty, K$1 = { current: null }, L$1 = { key: true, ref: true, __self: true, __source: true };
function M$1(a, b, e) {
  var d, c = {}, k2 = null, h2 = null;
  if (null != b)
    for (d in void 0 !== b.ref && (h2 = b.ref), void 0 !== b.key && (k2 = "" + b.key), b)
      J.call(b, d) && !L$1.hasOwnProperty(d) && (c[d] = b[d]);
  var g = arguments.length - 2;
  if (1 === g)
    c.children = e;
  else if (1 < g) {
    for (var f2 = Array(g), m2 = 0; m2 < g; m2++)
      f2[m2] = arguments[m2 + 2];
    c.children = f2;
  }
  if (a && a.defaultProps)
    for (d in g = a.defaultProps, g)
      void 0 === c[d] && (c[d] = g[d]);
  return { $$typeof: l$1, type: a, key: k2, ref: h2, props: c, _owner: K$1.current };
}
function N$1(a, b) {
  return { $$typeof: l$1, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
}
function O$1(a) {
  return "object" === typeof a && null !== a && a.$$typeof === l$1;
}
function escape(a) {
  var b = { "=": "=0", ":": "=2" };
  return "$" + a.replace(/[=:]/g, function(a2) {
    return b[a2];
  });
}
var P$1 = /\/+/g;
function Q$1(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}
function R$1(a, b, e, d, c) {
  var k2 = typeof a;
  if ("undefined" === k2 || "boolean" === k2)
    a = null;
  var h2 = false;
  if (null === a)
    h2 = true;
  else
    switch (k2) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a.$$typeof) {
          case l$1:
          case n$1:
            h2 = true;
        }
    }
  if (h2)
    return h2 = a, c = c(h2), a = "" === d ? "." + Q$1(h2, 0) : d, I$1(c) ? (e = "", null != a && (e = a.replace(P$1, "$&/") + "/"), R$1(c, b, e, "", function(a2) {
      return a2;
    })) : null != c && (O$1(c) && (c = N$1(c, e + (!c.key || h2 && h2.key === c.key ? "" : ("" + c.key).replace(P$1, "$&/") + "/") + a)), b.push(c)), 1;
  h2 = 0;
  d = "" === d ? "." : d + ":";
  if (I$1(a))
    for (var g = 0; g < a.length; g++) {
      k2 = a[g];
      var f2 = d + Q$1(k2, g);
      h2 += R$1(k2, b, e, f2, c);
    }
  else if (f2 = A$1(a), "function" === typeof f2)
    for (a = f2.call(a), g = 0; !(k2 = a.next()).done; )
      k2 = k2.value, f2 = d + Q$1(k2, g++), h2 += R$1(k2, b, e, f2, c);
  else if ("object" === k2)
    throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
  return h2;
}
function S$1(a, b, e) {
  if (null == a)
    return a;
  var d = [], c = 0;
  R$1(a, d, "", "", function(a2) {
    return b.call(e, a2, c++);
  });
  return d;
}
function T$1(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    b.then(function(b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 1, a._result = b2;
    }, function(b2) {
      if (0 === a._status || -1 === a._status)
        a._status = 2, a._result = b2;
    });
    -1 === a._status && (a._status = 0, a._result = b);
  }
  if (1 === a._status)
    return a._result.default;
  throw a._result;
}
var U$1 = { current: null }, V$1 = { transition: null }, W$1 = { ReactCurrentDispatcher: U$1, ReactCurrentBatchConfig: V$1, ReactCurrentOwner: K$1 };
react_production_min.Children = { map: S$1, forEach: function(a, b, e) {
  S$1(a, function() {
    b.apply(this, arguments);
  }, e);
}, count: function(a) {
  var b = 0;
  S$1(a, function() {
    b++;
  });
  return b;
}, toArray: function(a) {
  return S$1(a, function(a2) {
    return a2;
  }) || [];
}, only: function(a) {
  if (!O$1(a))
    throw Error("React.Children.only expected to receive a single React element child.");
  return a;
} };
react_production_min.Component = E$1;
react_production_min.Fragment = p$2;
react_production_min.Profiler = r;
react_production_min.PureComponent = G$1;
react_production_min.StrictMode = q$1;
react_production_min.Suspense = w$2;
react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W$1;
react_production_min.cloneElement = function(a, b, e) {
  if (null === a || void 0 === a)
    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
  var d = C$1({}, a.props), c = a.key, k2 = a.ref, h2 = a._owner;
  if (null != b) {
    void 0 !== b.ref && (k2 = b.ref, h2 = K$1.current);
    void 0 !== b.key && (c = "" + b.key);
    if (a.type && a.type.defaultProps)
      var g = a.type.defaultProps;
    for (f2 in b)
      J.call(b, f2) && !L$1.hasOwnProperty(f2) && (d[f2] = void 0 === b[f2] && void 0 !== g ? g[f2] : b[f2]);
  }
  var f2 = arguments.length - 2;
  if (1 === f2)
    d.children = e;
  else if (1 < f2) {
    g = Array(f2);
    for (var m2 = 0; m2 < f2; m2++)
      g[m2] = arguments[m2 + 2];
    d.children = g;
  }
  return { $$typeof: l$1, type: a.type, key: c, ref: k2, props: d, _owner: h2 };
};
react_production_min.createContext = function(a) {
  a = { $$typeof: u, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
  a.Provider = { $$typeof: t, _context: a };
  return a.Consumer = a;
};
react_production_min.createElement = M$1;
react_production_min.createFactory = function(a) {
  var b = M$1.bind(null, a);
  b.type = a;
  return b;
};
react_production_min.createRef = function() {
  return { current: null };
};
react_production_min.forwardRef = function(a) {
  return { $$typeof: v$3, render: a };
};
react_production_min.isValidElement = O$1;
react_production_min.lazy = function(a) {
  return { $$typeof: y, _payload: { _status: -1, _result: a }, _init: T$1 };
};
react_production_min.memo = function(a, b) {
  return { $$typeof: x, type: a, compare: void 0 === b ? null : b };
};
react_production_min.startTransition = function(a) {
  var b = V$1.transition;
  V$1.transition = {};
  try {
    a();
  } finally {
    V$1.transition = b;
  }
};
react_production_min.unstable_act = function() {
  throw Error("act(...) is not supported in production builds of React.");
};
react_production_min.useCallback = function(a, b) {
  return U$1.current.useCallback(a, b);
};
react_production_min.useContext = function(a) {
  return U$1.current.useContext(a);
};
react_production_min.useDebugValue = function() {
};
react_production_min.useDeferredValue = function(a) {
  return U$1.current.useDeferredValue(a);
};
react_production_min.useEffect = function(a, b) {
  return U$1.current.useEffect(a, b);
};
react_production_min.useId = function() {
  return U$1.current.useId();
};
react_production_min.useImperativeHandle = function(a, b, e) {
  return U$1.current.useImperativeHandle(a, b, e);
};
react_production_min.useInsertionEffect = function(a, b) {
  return U$1.current.useInsertionEffect(a, b);
};
react_production_min.useLayoutEffect = function(a, b) {
  return U$1.current.useLayoutEffect(a, b);
};
react_production_min.useMemo = function(a, b) {
  return U$1.current.useMemo(a, b);
};
react_production_min.useReducer = function(a, b, e) {
  return U$1.current.useReducer(a, b, e);
};
react_production_min.useRef = function(a) {
  return U$1.current.useRef(a);
};
react_production_min.useState = function(a) {
  return U$1.current.useState(a);
};
react_production_min.useSyncExternalStore = function(a, b, e) {
  return U$1.current.useSyncExternalStore(a, b, e);
};
react_production_min.useTransition = function() {
  return U$1.current.useTransition();
};
react_production_min.version = "18.2.0";
(function(module2) {
  {
    module2.exports = react_production_min;
  }
})(react);
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var f = reactExports, k = Symbol.for("react.element"), l = Symbol.for("react.fragment"), m$1 = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p$1 = { key: true, ref: true, __self: true, __source: true };
function q(c, a, g) {
  var b, d = {}, e = null, h2 = null;
  void 0 !== g && (e = "" + g);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (h2 = a.ref);
  for (b in a)
    m$1.call(a, b) && !p$1.hasOwnProperty(b) && (d[b] = a[b]);
  if (c && c.defaultProps)
    for (b in a = c.defaultProps, a)
      void 0 === d[b] && (d[b] = a[b]);
  return { $$typeof: k, type: c, key: e, ref: h2, props: d, _owner: n.current };
}
reactJsxRuntime_production_min.Fragment = l;
reactJsxRuntime_production_min.jsx = q;
reactJsxRuntime_production_min.jsxs = q;
(function(module2) {
  {
    module2.exports = reactJsxRuntime_production_min;
  }
})(jsxRuntime);
const Fragment = jsxRuntimeExports.Fragment;
const jsx = jsxRuntimeExports.jsx;
const jsxs = jsxRuntimeExports.jsxs;
var client = {};
var reactDomExports = {};
var reactDom = {
  get exports() {
    return reactDomExports;
  },
  set exports(v2) {
    reactDomExports = v2;
  }
};
var reactDom_production_min = {};
var schedulerExports = {};
var scheduler = {
  get exports() {
    return schedulerExports;
  },
  set exports(v2) {
    schedulerExports = v2;
  }
};
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(exports2) {
  function f2(a, b) {
    var c = a.length;
    a.push(b);
    a:
      for (; 0 < c; ) {
        var d = c - 1 >>> 1, e = a[d];
        if (0 < g(e, b))
          a[d] = b, a[c] = e, c = d;
        else
          break a;
      }
  }
  function h2(a) {
    return 0 === a.length ? null : a[0];
  }
  function k2(a) {
    if (0 === a.length)
      return null;
    var b = a[0], c = a.pop();
    if (c !== b) {
      a[0] = c;
      a:
        for (var d = 0, e = a.length, w2 = e >>> 1; d < w2; ) {
          var m2 = 2 * (d + 1) - 1, C2 = a[m2], n2 = m2 + 1, x2 = a[n2];
          if (0 > g(C2, c))
            n2 < e && 0 > g(x2, C2) ? (a[d] = x2, a[n2] = c, d = n2) : (a[d] = C2, a[m2] = c, d = m2);
          else if (n2 < e && 0 > g(x2, c))
            a[d] = x2, a[n2] = c, d = n2;
          else
            break a;
        }
    }
    return b;
  }
  function g(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
  }
  if ("object" === typeof performance && "function" === typeof performance.now) {
    var l2 = performance;
    exports2.unstable_now = function() {
      return l2.now();
    };
  } else {
    var p2 = Date, q2 = p2.now();
    exports2.unstable_now = function() {
      return p2.now() - q2;
    };
  }
  var r2 = [], t2 = [], u2 = 1, v2 = null, y2 = 3, z2 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
  "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function G2(a) {
    for (var b = h2(t2); null !== b; ) {
      if (null === b.callback)
        k2(t2);
      else if (b.startTime <= a)
        k2(t2), b.sortIndex = b.expirationTime, f2(r2, b);
      else
        break;
      b = h2(t2);
    }
  }
  function H2(a) {
    B2 = false;
    G2(a);
    if (!A2)
      if (null !== h2(r2))
        A2 = true, I2(J2);
      else {
        var b = h2(t2);
        null !== b && K2(H2, b.startTime - a);
      }
  }
  function J2(a, b) {
    A2 = false;
    B2 && (B2 = false, E2(L2), L2 = -1);
    z2 = true;
    var c = y2;
    try {
      G2(b);
      for (v2 = h2(r2); null !== v2 && (!(v2.expirationTime > b) || a && !M2()); ) {
        var d = v2.callback;
        if ("function" === typeof d) {
          v2.callback = null;
          y2 = v2.priorityLevel;
          var e = d(v2.expirationTime <= b);
          b = exports2.unstable_now();
          "function" === typeof e ? v2.callback = e : v2 === h2(r2) && k2(r2);
          G2(b);
        } else
          k2(r2);
        v2 = h2(r2);
      }
      if (null !== v2)
        var w2 = true;
      else {
        var m2 = h2(t2);
        null !== m2 && K2(H2, m2.startTime - b);
        w2 = false;
      }
      return w2;
    } finally {
      v2 = null, y2 = c, z2 = false;
    }
  }
  var N2 = false, O2 = null, L2 = -1, P2 = 5, Q2 = -1;
  function M2() {
    return exports2.unstable_now() - Q2 < P2 ? false : true;
  }
  function R2() {
    if (null !== O2) {
      var a = exports2.unstable_now();
      Q2 = a;
      var b = true;
      try {
        b = O2(true, a);
      } finally {
        b ? S2() : (N2 = false, O2 = null);
      }
    } else
      N2 = false;
  }
  var S2;
  if ("function" === typeof F2)
    S2 = function() {
      F2(R2);
    };
  else if ("undefined" !== typeof MessageChannel) {
    var T2 = new MessageChannel(), U2 = T2.port2;
    T2.port1.onmessage = R2;
    S2 = function() {
      U2.postMessage(null);
    };
  } else
    S2 = function() {
      D2(R2, 0);
    };
  function I2(a) {
    O2 = a;
    N2 || (N2 = true, S2());
  }
  function K2(a, b) {
    L2 = D2(function() {
      a(exports2.unstable_now());
    }, b);
  }
  exports2.unstable_IdlePriority = 5;
  exports2.unstable_ImmediatePriority = 1;
  exports2.unstable_LowPriority = 4;
  exports2.unstable_NormalPriority = 3;
  exports2.unstable_Profiling = null;
  exports2.unstable_UserBlockingPriority = 2;
  exports2.unstable_cancelCallback = function(a) {
    a.callback = null;
  };
  exports2.unstable_continueExecution = function() {
    A2 || z2 || (A2 = true, I2(J2));
  };
  exports2.unstable_forceFrameRate = function(a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a ? Math.floor(1e3 / a) : 5;
  };
  exports2.unstable_getCurrentPriorityLevel = function() {
    return y2;
  };
  exports2.unstable_getFirstCallbackNode = function() {
    return h2(r2);
  };
  exports2.unstable_next = function(a) {
    switch (y2) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;
      default:
        b = y2;
    }
    var c = y2;
    y2 = b;
    try {
      return a();
    } finally {
      y2 = c;
    }
  };
  exports2.unstable_pauseExecution = function() {
  };
  exports2.unstable_requestPaint = function() {
  };
  exports2.unstable_runWithPriority = function(a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
      default:
        a = 3;
    }
    var c = y2;
    y2 = a;
    try {
      return b();
    } finally {
      y2 = c;
    }
  };
  exports2.unstable_scheduleCallback = function(a, b, c) {
    var d = exports2.unstable_now();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch (a) {
      case 1:
        var e = -1;
        break;
      case 2:
        e = 250;
        break;
      case 5:
        e = 1073741823;
        break;
      case 4:
        e = 1e4;
        break;
      default:
        e = 5e3;
    }
    e = c + e;
    a = { id: u2++, callback: b, priorityLevel: a, startTime: c, expirationTime: e, sortIndex: -1 };
    c > d ? (a.sortIndex = c, f2(t2, a), null === h2(r2) && a === h2(t2) && (B2 ? (E2(L2), L2 = -1) : B2 = true, K2(H2, c - d))) : (a.sortIndex = e, f2(r2, a), A2 || z2 || (A2 = true, I2(J2)));
    return a;
  };
  exports2.unstable_shouldYield = M2;
  exports2.unstable_wrapCallback = function(a) {
    var b = y2;
    return function() {
      var c = y2;
      y2 = b;
      try {
        return a.apply(this, arguments);
      } finally {
        y2 = c;
      }
    };
  };
})(scheduler_production_min);
(function(module2) {
  {
    module2.exports = scheduler_production_min;
  }
})(scheduler);
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var aa = reactExports, ca = schedulerExports;
function p(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var da = /* @__PURE__ */ new Set(), ea = {};
function fa(a, b) {
  ha(a, b);
  ha(a + "Capture", b);
}
function ha(a, b) {
  ea[a] = b;
  for (a = 0; a < b.length; a++)
    da.add(b[a]);
}
var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
function oa(a) {
  if (ja.call(ma, a))
    return true;
  if (ja.call(la, a))
    return false;
  if (ka.test(a))
    return ma[a] = true;
  la[a] = true;
  return false;
}
function pa(a, b, c, d) {
  if (null !== c && 0 === c.type)
    return false;
  switch (typeof b) {
    case "function":
    case "symbol":
      return true;
    case "boolean":
      if (d)
        return false;
      if (null !== c)
        return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;
    default:
      return false;
  }
}
function qa(a, b, c, d) {
  if (null === b || "undefined" === typeof b || pa(a, b, c, d))
    return true;
  if (d)
    return false;
  if (null !== c)
    switch (c.type) {
      case 3:
        return !b;
      case 4:
        return false === b;
      case 5:
        return isNaN(b);
      case 6:
        return isNaN(b) || 1 > b;
    }
  return false;
}
function v$2(a, b, c, d, e, f2, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f2;
  this.removeEmptyString = g;
}
var z = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
  z[a] = new v$2(a, 0, false, a, null, false, false);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a) {
  var b = a[0];
  z[b] = new v$2(b, 1, false, a[1], null, false, false);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a) {
  z[a] = new v$2(a, 2, false, a.toLowerCase(), null, false, false);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a) {
  z[a] = new v$2(a, 2, false, a, null, false, false);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
  z[a] = new v$2(a, 3, false, a.toLowerCase(), null, false, false);
});
["checked", "multiple", "muted", "selected"].forEach(function(a) {
  z[a] = new v$2(a, 3, true, a, null, false, false);
});
["capture", "download"].forEach(function(a) {
  z[a] = new v$2(a, 4, false, a, null, false, false);
});
["cols", "rows", "size", "span"].forEach(function(a) {
  z[a] = new v$2(a, 6, false, a, null, false, false);
});
["rowSpan", "start"].forEach(function(a) {
  z[a] = new v$2(a, 5, false, a.toLowerCase(), null, false, false);
});
var ra = /[\-:]([a-z])/g;
function sa(a) {
  return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
  var b = a.replace(
    ra,
    sa
  );
  z[b] = new v$2(b, 1, false, a, null, false, false);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
  var b = a.replace(ra, sa);
  z[b] = new v$2(b, 1, false, a, "http://www.w3.org/1999/xlink", false, false);
});
["xml:base", "xml:lang", "xml:space"].forEach(function(a) {
  var b = a.replace(ra, sa);
  z[b] = new v$2(b, 1, false, a, "http://www.w3.org/XML/1998/namespace", false, false);
});
["tabIndex", "crossOrigin"].forEach(function(a) {
  z[a] = new v$2(a, 1, false, a.toLowerCase(), null, false, false);
});
z.xlinkHref = new v$2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
["src", "href", "action", "formAction"].forEach(function(a) {
  z[a] = new v$2(a, 1, false, a.toLowerCase(), null, true, true);
});
function ta(a, b, c, d) {
  var e = z.hasOwnProperty(b) ? z[b] : null;
  if (null !== e ? 0 !== e.type : d || !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1])
    qa(b, c, e, d) && (c = null), d || null === e ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? false : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && true === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)));
}
var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
var Ia = Symbol.for("react.offscreen");
var Ja = Symbol.iterator;
function Ka(a) {
  if (null === a || "object" !== typeof a)
    return null;
  a = Ja && a[Ja] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}
var A = Object.assign, La;
function Ma(a) {
  if (void 0 === La)
    try {
      throw Error();
    } catch (c) {
      var b = c.stack.trim().match(/\n( *(at )?)/);
      La = b && b[1] || "";
    }
  return "\n" + La + a;
}
var Na = false;
function Oa(a, b) {
  if (!a || Na)
    return "";
  Na = true;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (b)
      if (b = function() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (l2) {
          var d = l2;
        }
        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (l2) {
          d = l2;
        }
        a.call(b.prototype);
      }
    else {
      try {
        throw Error();
      } catch (l2) {
        d = l2;
      }
      a();
    }
  } catch (l2) {
    if (l2 && d && "string" === typeof l2.stack) {
      for (var e = l2.stack.split("\n"), f2 = d.stack.split("\n"), g = e.length - 1, h2 = f2.length - 1; 1 <= g && 0 <= h2 && e[g] !== f2[h2]; )
        h2--;
      for (; 1 <= g && 0 <= h2; g--, h2--)
        if (e[g] !== f2[h2]) {
          if (1 !== g || 1 !== h2) {
            do
              if (g--, h2--, 0 > h2 || e[g] !== f2[h2]) {
                var k2 = "\n" + e[g].replace(" at new ", " at ");
                a.displayName && k2.includes("<anonymous>") && (k2 = k2.replace("<anonymous>", a.displayName));
                return k2;
              }
            while (1 <= g && 0 <= h2);
          }
          break;
        }
    }
  } finally {
    Na = false, Error.prepareStackTrace = c;
  }
  return (a = a ? a.displayName || a.name : "") ? Ma(a) : "";
}
function Pa(a) {
  switch (a.tag) {
    case 5:
      return Ma(a.type);
    case 16:
      return Ma("Lazy");
    case 13:
      return Ma("Suspense");
    case 19:
      return Ma("SuspenseList");
    case 0:
    case 2:
    case 15:
      return a = Oa(a.type, false), a;
    case 11:
      return a = Oa(a.type.render, false), a;
    case 1:
      return a = Oa(a.type, true), a;
    default:
      return "";
  }
}
function Qa(a) {
  if (null == a)
    return null;
  if ("function" === typeof a)
    return a.displayName || a.name || null;
  if ("string" === typeof a)
    return a;
  switch (a) {
    case ya:
      return "Fragment";
    case wa:
      return "Portal";
    case Aa:
      return "Profiler";
    case za:
      return "StrictMode";
    case Ea:
      return "Suspense";
    case Fa:
      return "SuspenseList";
  }
  if ("object" === typeof a)
    switch (a.$$typeof) {
      case Ca:
        return (a.displayName || "Context") + ".Consumer";
      case Ba:
        return (a._context.displayName || "Context") + ".Provider";
      case Da:
        var b = a.render;
        a = a.displayName;
        a || (a = b.displayName || b.name || "", a = "" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
        return a;
      case Ga:
        return b = a.displayName || null, null !== b ? b : Qa(a.type) || "Memo";
      case Ha:
        b = a._payload;
        a = a._init;
        try {
          return Qa(a(b));
        } catch (c) {
        }
    }
  return null;
}
function Ra(a) {
  var b = a.type;
  switch (a.tag) {
    case 24:
      return "Cache";
    case 9:
      return (b.displayName || "Context") + ".Consumer";
    case 10:
      return (b._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return a = b.render, a = a.displayName || a.name || "", b.displayName || ("" !== a ? "ForwardRef(" + a + ")" : "ForwardRef");
    case 7:
      return "Fragment";
    case 5:
      return b;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Qa(b);
    case 8:
      return b === za ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if ("function" === typeof b)
        return b.displayName || b.name || null;
      if ("string" === typeof b)
        return b;
  }
  return null;
}
function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return a;
    case "object":
      return a;
    default:
      return "";
  }
}
function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function Ua(a) {
  var b = Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get, f2 = c.set;
    Object.defineProperty(a, b, { configurable: true, get: function() {
      return e.call(this);
    }, set: function(a2) {
      d = "" + a2;
      f2.call(this, a2);
    } });
    Object.defineProperty(a, b, { enumerable: c.enumerable });
    return { getValue: function() {
      return d;
    }, setValue: function(a2) {
      d = "" + a2;
    }, stopTracking: function() {
      a._valueTracker = null;
      delete a[b];
    } };
  }
}
function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}
function Wa(a) {
  if (!a)
    return false;
  var b = a._valueTracker;
  if (!b)
    return true;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), true) : false;
}
function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a)
    return null;
  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}
function Ya(a, b) {
  var c = b.checked;
  return A({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked });
}
function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = { initialChecked: d, initialValue: c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
}
function ab(a, b) {
  b = b.checked;
  null != b && ta(a, "checked", b, false);
}
function bb(a, b) {
  ab(a, b);
  var c = Sa(b.value), d = b.type;
  if (null != c)
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c)
        a.value = "" + c;
    } else
      a.value !== "" + c && (a.value = "" + c);
  else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? cb(a, b.type, c) : b.hasOwnProperty("defaultValue") && cb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function db(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value))
      return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }
  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}
function cb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a)
    null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
var eb = Array.isArray;
function fb(a, b, c, d) {
  a = a.options;
  if (b) {
    b = {};
    for (var e = 0; e < c.length; e++)
      b["$" + c[e]] = true;
    for (c = 0; c < a.length; c++)
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = true);
  } else {
    c = "" + Sa(c);
    b = null;
    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = true;
        d && (a[e].defaultSelected = true);
        return;
      }
      null !== b || a[e].disabled || (b = a[e]);
    }
    null !== b && (b.selected = true);
  }
}
function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML)
    throw Error(p(91));
  return A({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
}
function hb(a, b) {
  var c = b.value;
  if (null == c) {
    c = b.children;
    b = b.defaultValue;
    if (null != c) {
      if (null != b)
        throw Error(p(92));
      if (eb(c)) {
        if (1 < c.length)
          throw Error(p(93));
        c = c[0];
      }
      b = c;
    }
    null == b && (b = "");
    c = b;
  }
  a._wrapperState = { initialValue: Sa(c) };
}
function ib(a, b) {
  var c = Sa(b.value), d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}
function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
function kb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function lb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? kb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var mb, nb = function(a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function() {
      return a(b, c, d, e);
    });
  } : a;
}(function(a, b) {
  if ("http://www.w3.org/2000/svg" !== a.namespaceURI || "innerHTML" in a)
    a.innerHTML = b;
  else {
    mb = mb || document.createElement("div");
    mb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
    for (b = mb.firstChild; a.firstChild; )
      a.removeChild(a.firstChild);
    for (; b.firstChild; )
      a.appendChild(b.firstChild);
  }
});
function ob(a, b) {
  if (b) {
    var c = a.firstChild;
    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }
  a.textContent = b;
}
var pb = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
}, qb = ["Webkit", "ms", "Moz", "O"];
Object.keys(pb).forEach(function(a) {
  qb.forEach(function(b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    pb[b] = pb[a];
  });
});
function rb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || pb.hasOwnProperty(a) && pb[a] ? ("" + b).trim() : b + "px";
}
function sb(a, b) {
  a = a.style;
  for (var c in b)
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"), e = rb(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
}
var tb = A({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
function ub(a, b) {
  if (b) {
    if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML))
      throw Error(p(137, a));
    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children)
        throw Error(p(60));
      if ("object" !== typeof b.dangerouslySetInnerHTML || !("__html" in b.dangerouslySetInnerHTML))
        throw Error(p(61));
    }
    if (null != b.style && "object" !== typeof b.style)
      throw Error(p(62));
  }
}
function vb(a, b) {
  if (-1 === a.indexOf("-"))
    return "string" === typeof b.is;
  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return false;
    default:
      return true;
  }
}
var wb = null;
function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}
var yb = null, zb = null, Ab = null;
function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb)
      throw Error(p(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}
function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}
function Fb() {
  if (zb) {
    var a = zb, b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b)
      for (a = 0; a < b.length; a++)
        Bb(b[a]);
  }
}
function Gb(a, b) {
  return a(b);
}
function Hb() {
}
var Ib = false;
function Jb(a, b, c) {
  if (Ib)
    return a(b, c);
  Ib = true;
  try {
    return Gb(a, b, c);
  } finally {
    if (Ib = false, null !== zb || null !== Ab)
      Hb(), Fb();
  }
}
function Kb(a, b) {
  var c = a.stateNode;
  if (null === c)
    return null;
  var d = Db(c);
  if (null === d)
    return null;
  c = d[b];
  a:
    switch (b) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
        a = !d;
        break a;
      default:
        a = false;
    }
  if (a)
    return null;
  if (c && "function" !== typeof c)
    throw Error(p(231, b, typeof c));
  return c;
}
var Lb = false;
if (ia)
  try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", { get: function() {
      Lb = true;
    } });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a) {
    Lb = false;
  }
function Nb(a, b, c, d, e, f2, g, h2, k2) {
  var l2 = Array.prototype.slice.call(arguments, 3);
  try {
    b.apply(c, l2);
  } catch (m2) {
    this.onError(m2);
  }
}
var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a) {
  Ob = true;
  Pb = a;
} };
function Tb(a, b, c, d, e, f2, g, h2, k2) {
  Ob = false;
  Pb = null;
  Nb.apply(Sb, arguments);
}
function Ub(a, b, c, d, e, f2, g, h2, k2) {
  Tb.apply(this, arguments);
  if (Ob) {
    if (Ob) {
      var l2 = Pb;
      Ob = false;
      Pb = null;
    } else
      throw Error(p(198));
    Qb || (Qb = true, Rb = l2);
  }
}
function Vb(a) {
  var b = a, c = a;
  if (a.alternate)
    for (; b.return; )
      b = b.return;
  else {
    a = b;
    do
      b = a, 0 !== (b.flags & 4098) && (c = b.return), a = b.return;
    while (a);
  }
  return 3 === b.tag ? c : null;
}
function Wb(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b)
      return b.dehydrated;
  }
  return null;
}
function Xb(a) {
  if (Vb(a) !== a)
    throw Error(p(188));
}
function Yb(a) {
  var b = a.alternate;
  if (!b) {
    b = Vb(a);
    if (null === b)
      throw Error(p(188));
    return b !== a ? null : a;
  }
  for (var c = a, d = b; ; ) {
    var e = c.return;
    if (null === e)
      break;
    var f2 = e.alternate;
    if (null === f2) {
      d = e.return;
      if (null !== d) {
        c = d;
        continue;
      }
      break;
    }
    if (e.child === f2.child) {
      for (f2 = e.child; f2; ) {
        if (f2 === c)
          return Xb(e), a;
        if (f2 === d)
          return Xb(e), b;
        f2 = f2.sibling;
      }
      throw Error(p(188));
    }
    if (c.return !== d.return)
      c = e, d = f2;
    else {
      for (var g = false, h2 = e.child; h2; ) {
        if (h2 === c) {
          g = true;
          c = e;
          d = f2;
          break;
        }
        if (h2 === d) {
          g = true;
          d = e;
          c = f2;
          break;
        }
        h2 = h2.sibling;
      }
      if (!g) {
        for (h2 = f2.child; h2; ) {
          if (h2 === c) {
            g = true;
            c = f2;
            d = e;
            break;
          }
          if (h2 === d) {
            g = true;
            d = f2;
            c = e;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g)
          throw Error(p(189));
      }
    }
    if (c.alternate !== d)
      throw Error(p(190));
  }
  if (3 !== c.tag)
    throw Error(p(188));
  return c.stateNode.current === c ? a : b;
}
function Zb(a) {
  a = Yb(a);
  return null !== a ? $b(a) : null;
}
function $b(a) {
  if (5 === a.tag || 6 === a.tag)
    return a;
  for (a = a.child; null !== a; ) {
    var b = $b(a);
    if (null !== b)
      return b;
    a = a.sibling;
  }
  return null;
}
var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
function mc(a) {
  if (lc && "function" === typeof lc.onCommitFiberRoot)
    try {
      lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128));
    } catch (b) {
    }
}
var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
function nc(a) {
  a >>>= 0;
  return 0 === a ? 32 : 31 - (pc(a) / qc | 0) | 0;
}
var rc = 64, sc = 4194304;
function tc(a) {
  switch (a & -a) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return a & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return a & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return a;
  }
}
function uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c)
    return 0;
  var d = 0, e = a.suspendedLanes, f2 = a.pingedLanes, g = c & 268435455;
  if (0 !== g) {
    var h2 = g & ~e;
    0 !== h2 ? d = tc(h2) : (f2 &= g, 0 !== f2 && (d = tc(f2)));
  } else
    g = c & ~e, 0 !== g ? d = tc(g) : 0 !== f2 && (d = tc(f2));
  if (0 === d)
    return 0;
  if (0 !== b && b !== d && 0 === (b & e) && (e = d & -d, f2 = b & -b, e >= f2 || 16 === e && 0 !== (f2 & 4194240)))
    return b;
  0 !== (d & 4) && (d |= c & 16);
  b = a.entangledLanes;
  if (0 !== b)
    for (a = a.entanglements, b &= d; 0 < b; )
      c = 31 - oc(b), e = 1 << c, d |= a[c], b &= ~e;
  return d;
}
function vc(a, b) {
  switch (a) {
    case 1:
    case 2:
    case 4:
      return b + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return b + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function wc(a, b) {
  for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f2 = a.pendingLanes; 0 < f2; ) {
    var g = 31 - oc(f2), h2 = 1 << g, k2 = e[g];
    if (-1 === k2) {
      if (0 === (h2 & c) || 0 !== (h2 & d))
        e[g] = vc(h2, b);
    } else
      k2 <= b && (a.expiredLanes |= h2);
    f2 &= ~h2;
  }
}
function xc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function yc() {
  var a = rc;
  rc <<= 1;
  0 === (rc & 4194240) && (rc = 64);
  return a;
}
function zc(a) {
  for (var b = [], c = 0; 31 > c; c++)
    b.push(a);
  return b;
}
function Ac(a, b, c) {
  a.pendingLanes |= b;
  536870912 !== b && (a.suspendedLanes = 0, a.pingedLanes = 0);
  a = a.eventTimes;
  b = 31 - oc(b);
  a[b] = c;
}
function Bc(a, b) {
  var c = a.pendingLanes & ~b;
  a.pendingLanes = b;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= b;
  a.mutableReadLanes &= b;
  a.entangledLanes &= b;
  b = a.entanglements;
  var d = a.eventTimes;
  for (a = a.expirationTimes; 0 < c; ) {
    var e = 31 - oc(c), f2 = 1 << e;
    b[e] = 0;
    d[e] = -1;
    a[e] = -1;
    c &= ~f2;
  }
}
function Cc(a, b) {
  var c = a.entangledLanes |= b;
  for (a = a.entanglements; c; ) {
    var d = 31 - oc(c), e = 1 << d;
    e & b | a[d] & b && (a[d] |= b);
    c &= ~e;
  }
}
var C = 0;
function Dc(a) {
  a &= -a;
  return 1 < a ? 4 < a ? 0 !== (a & 268435455) ? 16 : 536870912 : 4 : 1;
}
var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function Sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      Lc = null;
      break;
    case "dragenter":
    case "dragleave":
      Mc = null;
      break;
    case "mouseover":
    case "mouseout":
      Nc = null;
      break;
    case "pointerover":
    case "pointerout":
      Oc.delete(b.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Pc.delete(b.pointerId);
  }
}
function Tc(a, b, c, d, e, f2) {
  if (null === a || a.nativeEvent !== f2)
    return a = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f2, targetContainers: [e] }, null !== b && (b = Cb(b), null !== b && Fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}
function Uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return Lc = Tc(Lc, a, b, c, d, e), true;
    case "dragenter":
      return Mc = Tc(Mc, a, b, c, d, e), true;
    case "mouseover":
      return Nc = Tc(Nc, a, b, c, d, e), true;
    case "pointerover":
      var f2 = e.pointerId;
      Oc.set(f2, Tc(Oc.get(f2) || null, a, b, c, d, e));
      return true;
    case "gotpointercapture":
      return f2 = e.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a, b, c, d, e)), true;
  }
  return false;
}
function Vc(a) {
  var b = Wc(a.target);
  if (null !== b) {
    var c = Vb(b);
    if (null !== c) {
      if (b = c.tag, 13 === b) {
        if (b = Wb(c), null !== b) {
          a.blockedOn = b;
          Ic(a.priority, function() {
            Gc(c);
          });
          return;
        }
      } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
        a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
        return;
      }
    }
  }
  a.blockedOn = null;
}
function Xc(a) {
  if (null !== a.blockedOn)
    return false;
  for (var b = a.targetContainers; 0 < b.length; ) {
    var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null === c) {
      c = a.nativeEvent;
      var d = new c.constructor(c.type, c);
      wb = d;
      c.target.dispatchEvent(d);
      wb = null;
    } else
      return b = Cb(c), null !== b && Fc(b), a.blockedOn = c, false;
    b.shift();
  }
  return true;
}
function Zc(a, b, c) {
  Xc(a) && c.delete(b);
}
function $c() {
  Jc = false;
  null !== Lc && Xc(Lc) && (Lc = null);
  null !== Mc && Xc(Mc) && (Mc = null);
  null !== Nc && Xc(Nc) && (Nc = null);
  Oc.forEach(Zc);
  Pc.forEach(Zc);
}
function ad(a, b) {
  a.blockedOn === b && (a.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
}
function bd(a) {
  function b(b2) {
    return ad(b2, a);
  }
  if (0 < Kc.length) {
    ad(Kc[0], a);
    for (var c = 1; c < Kc.length; c++) {
      var d = Kc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }
  null !== Lc && ad(Lc, a);
  null !== Mc && ad(Mc, a);
  null !== Nc && ad(Nc, a);
  Oc.forEach(b);
  Pc.forEach(b);
  for (c = 0; c < Qc.length; c++)
    d = Qc[c], d.blockedOn === a && (d.blockedOn = null);
  for (; 0 < Qc.length && (c = Qc[0], null === c.blockedOn); )
    Vc(c), null === c.blockedOn && Qc.shift();
}
var cd = ua.ReactCurrentBatchConfig, dd = true;
function ed(a, b, c, d) {
  var e = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 1, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f2;
  }
}
function gd(a, b, c, d) {
  var e = C, f2 = cd.transition;
  cd.transition = null;
  try {
    C = 4, fd(a, b, c, d);
  } finally {
    C = e, cd.transition = f2;
  }
}
function fd(a, b, c, d) {
  if (dd) {
    var e = Yc(a, b, c, d);
    if (null === e)
      hd(a, b, d, id, c), Sc(a, d);
    else if (Uc(e, a, b, c, d))
      d.stopPropagation();
    else if (Sc(a, d), b & 4 && -1 < Rc.indexOf(a)) {
      for (; null !== e; ) {
        var f2 = Cb(e);
        null !== f2 && Ec(f2);
        f2 = Yc(a, b, c, d);
        null === f2 && hd(a, b, d, id, c);
        if (f2 === e)
          break;
        e = f2;
      }
      null !== e && d.stopPropagation();
    } else
      hd(a, b, d, null, c);
  }
}
var id = null;
function Yc(a, b, c, d) {
  id = null;
  a = xb(d);
  a = Wc(a);
  if (null !== a)
    if (b = Vb(a), null === b)
      a = null;
    else if (c = b.tag, 13 === c) {
      a = Wb(b);
      if (null !== a)
        return a;
      a = null;
    } else if (3 === c) {
      if (b.stateNode.current.memoizedState.isDehydrated)
        return 3 === b.tag ? b.stateNode.containerInfo : null;
      a = null;
    } else
      b !== a && (a = null);
  id = a;
  return null;
}
function jd(a) {
  switch (a) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (ec()) {
        case fc:
          return 1;
        case gc:
          return 4;
        case hc:
        case ic:
          return 16;
        case jc:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var kd = null, ld = null, md = null;
function nd() {
  if (md)
    return md;
  var a, b = ld, c = b.length, d, e = "value" in kd ? kd.value : kd.textContent, f2 = e.length;
  for (a = 0; a < c && b[a] === e[a]; a++)
    ;
  var g = c - a;
  for (d = 1; d <= g && b[c - d] === e[f2 - d]; d++)
    ;
  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}
function pd() {
  return true;
}
function qd() {
  return false;
}
function rd(a) {
  function b(b2, d, e, f2, g) {
    this._reactName = b2;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f2;
    this.target = g;
    this.currentTarget = null;
    for (var c in a)
      a.hasOwnProperty(c) && (b2 = a[c], this[c] = b2 ? b2(f2) : f2[c]);
    this.isDefaultPrevented = (null != f2.defaultPrevented ? f2.defaultPrevented : false === f2.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }
  A(b.prototype, { preventDefault: function() {
    this.defaultPrevented = true;
    var a2 = this.nativeEvent;
    a2 && (a2.preventDefault ? a2.preventDefault() : "unknown" !== typeof a2.returnValue && (a2.returnValue = false), this.isDefaultPrevented = pd);
  }, stopPropagation: function() {
    var a2 = this.nativeEvent;
    a2 && (a2.stopPropagation ? a2.stopPropagation() : "unknown" !== typeof a2.cancelBubble && (a2.cancelBubble = true), this.isPropagationStopped = pd);
  }, persist: function() {
  }, isPersistent: pd });
  return b;
}
var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a) {
  return a.timeStamp || Date.now();
}, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a) {
  return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
}, movementX: function(a) {
  if ("movementX" in a)
    return a.movementX;
  a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
  return wd;
}, movementY: function(a) {
  return "movementY" in a ? a.movementY : xd;
} }), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, { clipboardData: function(a) {
  return "clipboardData" in a ? a.clipboardData : window.clipboardData;
} }), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
}, Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
}, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : false;
}
function zd() {
  return Pd;
}
var Qd = A({}, ud, { key: function(a) {
  if (a.key) {
    var b = Md[a.key] || a.key;
    if ("Unidentified" !== b)
      return b;
  }
  return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
}, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a) {
  return "keypress" === a.type ? od(a) : 0;
}, keyCode: function(a) {
  return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
}, which: function(a) {
  return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
} }), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
  deltaX: function(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
ia && "documentMode" in document && (be = document.documentMode);
var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);
    case "keydown":
      return 229 !== b.keyCode;
    case "keypress":
    case "mousedown":
    case "focusout":
      return true;
    default:
      return false;
  }
}
function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}
var ie = false;
function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);
    case "keypress":
      if (32 !== b.which)
        return null;
      fe = true;
      return ee;
    case "textInput":
      return a = b.data, a === ee && fe ? null : a;
    default:
      return null;
  }
}
function ke(a, b) {
  if (ie)
    return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = false, a) : null;
  switch (a) {
    case "paste":
      return null;
    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length)
          return b.char;
        if (b.which)
          return String.fromCharCode(b.which);
      }
      return null;
    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;
    default:
      return null;
  }
}
var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? true : false;
}
function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({ event: c, listeners: b }));
}
var pe = null, qe = null;
function re(a) {
  se(a, 0);
}
function te(a) {
  var b = ue(a);
  if (Wa(b))
    return a;
}
function ve(a, b) {
  if ("change" === a)
    return b;
}
var we = false;
if (ia) {
  var xe;
  if (ia) {
    var ye = "oninput" in document;
    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }
    xe = ye;
  } else
    xe = false;
  we = xe && (!document.documentMode || 9 < document.documentMode);
}
function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}
function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    Jb(re, b);
  }
}
function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}
function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a)
    return te(qe);
}
function Ee(a, b) {
  if ("click" === a)
    return te(b);
}
function Fe(a, b) {
  if ("input" === a || "change" === a)
    return te(b);
}
function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var He = "function" === typeof Object.is ? Object.is : Ge;
function Ie(a, b) {
  if (He(a, b))
    return true;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)
    return false;
  var c = Object.keys(a), d = Object.keys(b);
  if (c.length !== d.length)
    return false;
  for (d = 0; d < c.length; d++) {
    var e = c[d];
    if (!ja.call(b, e) || !He(a[e], b[e]))
      return false;
  }
  return true;
}
function Je(a) {
  for (; a && a.firstChild; )
    a = a.firstChild;
  return a;
}
function Ke(a, b) {
  var c = Je(a);
  a = 0;
  for (var d; c; ) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b)
        return { node: c, offset: b - a };
      a = d;
    }
    a: {
      for (; c; ) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }
        c = c.parentNode;
      }
      c = void 0;
    }
    c = Je(c);
  }
}
function Le(a, b) {
  return a && b ? a === b ? true : a && 3 === a.nodeType ? false : b && 3 === b.nodeType ? Le(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : false : false;
}
function Me() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement; ) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = false;
    }
    if (c)
      a = b.contentWindow;
    else
      break;
    b = Xa(a.document);
  }
  return b;
}
function Ne(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
function Oe(a) {
  var b = Me(), c = a.focusedElem, d = a.selectionRange;
  if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
    if (null !== d && Ne(c)) {
      if (b = d.start, a = d.end, void 0 === a && (a = b), "selectionStart" in c)
        c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);
      else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {
        a = a.getSelection();
        var e = c.textContent.length, f2 = Math.min(d.start, e);
        d = void 0 === d.end ? f2 : Math.min(d.end, e);
        !a.extend && f2 > d && (e = d, d = f2, f2 = e);
        e = Ke(c, f2);
        var g = Ke(
          c,
          d
        );
        e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f2 > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));
      }
    }
    b = [];
    for (a = c; a = a.parentNode; )
      1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
    "function" === typeof c.focus && c.focus();
    for (c = 0; c < b.length; c++)
      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
  }
}
var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Ne(d) ? d = { start: d.selectionStart, end: d.selectionEnd } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset }), Se && Ie(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({ event: b, listeners: d }), b.target = Qe)));
}
function Ve(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}
var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
function Ze(a) {
  if (Xe[a])
    return Xe[a];
  if (!We[a])
    return a;
  var b = We[a], c;
  for (c in b)
    if (b.hasOwnProperty(c) && c in Ye)
      return Xe[a] = b[c];
  return a;
}
var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
function ff(a, b) {
  df.set(a, b);
  fa(b, [a]);
}
for (var gf = 0; gf < ef.length; gf++) {
  var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
  ff(jf, "on" + kf);
}
ff($e, "onAnimationEnd");
ff(af, "onAnimationIteration");
ff(bf, "onAnimationStart");
ff("dblclick", "onDoubleClick");
ff("focusin", "onFocus");
ff("focusout", "onBlur");
ff(cf, "onTransitionEnd");
ha("onMouseEnter", ["mouseout", "mouseover"]);
ha("onMouseLeave", ["mouseout", "mouseover"]);
ha("onPointerEnter", ["pointerout", "pointerover"]);
ha("onPointerLeave", ["pointerout", "pointerover"]);
fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
function nf(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Ub(d, b, void 0, a);
  a.currentTarget = null;
}
function se(a, b) {
  b = 0 !== (b & 4);
  for (var c = 0; c < a.length; c++) {
    var d = a[c], e = d.event;
    d = d.listeners;
    a: {
      var f2 = void 0;
      if (b)
        for (var g = d.length - 1; 0 <= g; g--) {
          var h2 = d[g], k2 = h2.instance, l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e.isPropagationStopped())
            break a;
          nf(e, h2, l2);
          f2 = k2;
        }
      else
        for (g = 0; g < d.length; g++) {
          h2 = d[g];
          k2 = h2.instance;
          l2 = h2.currentTarget;
          h2 = h2.listener;
          if (k2 !== f2 && e.isPropagationStopped())
            break a;
          nf(e, h2, l2);
          f2 = k2;
        }
    }
  }
  if (Qb)
    throw a = Rb, Qb = false, Rb = null, a;
}
function D(a, b) {
  var c = b[of];
  void 0 === c && (c = b[of] = /* @__PURE__ */ new Set());
  var d = a + "__bubble";
  c.has(d) || (pf(b, a, 2, false), c.add(d));
}
function qf(a, b, c) {
  var d = 0;
  b && (d |= 4);
  pf(c, a, d, b);
}
var rf = "_reactListening" + Math.random().toString(36).slice(2);
function sf(a) {
  if (!a[rf]) {
    a[rf] = true;
    da.forEach(function(b2) {
      "selectionchange" !== b2 && (mf.has(b2) || qf(b2, false, a), qf(b2, true, a));
    });
    var b = 9 === a.nodeType ? a : a.ownerDocument;
    null === b || b[rf] || (b[rf] = true, qf("selectionchange", false, b));
  }
}
function pf(a, b, c, d) {
  switch (jd(b)) {
    case 1:
      var e = ed;
      break;
    case 4:
      e = gd;
      break;
    default:
      e = fd;
  }
  c = e.bind(null, b, c, a);
  e = void 0;
  !Lb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = true);
  d ? void 0 !== e ? a.addEventListener(b, c, { capture: true, passive: e }) : a.addEventListener(b, c, true) : void 0 !== e ? a.addEventListener(b, c, { passive: e }) : a.addEventListener(b, c, false);
}
function hd(a, b, c, d, e) {
  var f2 = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d)
    a:
      for (; ; ) {
        if (null === d)
          return;
        var g = d.tag;
        if (3 === g || 4 === g) {
          var h2 = d.stateNode.containerInfo;
          if (h2 === e || 8 === h2.nodeType && h2.parentNode === e)
            break;
          if (4 === g)
            for (g = d.return; null !== g; ) {
              var k2 = g.tag;
              if (3 === k2 || 4 === k2) {
                if (k2 = g.stateNode.containerInfo, k2 === e || 8 === k2.nodeType && k2.parentNode === e)
                  return;
              }
              g = g.return;
            }
          for (; null !== h2; ) {
            g = Wc(h2);
            if (null === g)
              return;
            k2 = g.tag;
            if (5 === k2 || 6 === k2) {
              d = f2 = g;
              continue a;
            }
            h2 = h2.parentNode;
          }
        }
        d = d.return;
      }
  Jb(function() {
    var d2 = f2, e2 = xb(c), g2 = [];
    a: {
      var h3 = df.get(a);
      if (void 0 !== h3) {
        var k3 = td, n2 = a;
        switch (a) {
          case "keypress":
            if (0 === od(c))
              break a;
          case "keydown":
          case "keyup":
            k3 = Rd;
            break;
          case "focusin":
            n2 = "focus";
            k3 = Fd;
            break;
          case "focusout":
            n2 = "blur";
            k3 = Fd;
            break;
          case "beforeblur":
          case "afterblur":
            k3 = Fd;
            break;
          case "click":
            if (2 === c.button)
              break a;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k3 = Bd;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k3 = Dd;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k3 = Vd;
            break;
          case $e:
          case af:
          case bf:
            k3 = Hd;
            break;
          case cf:
            k3 = Xd;
            break;
          case "scroll":
            k3 = vd;
            break;
          case "wheel":
            k3 = Zd;
            break;
          case "copy":
          case "cut":
          case "paste":
            k3 = Jd;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k3 = Td;
        }
        var t2 = 0 !== (b & 4), J2 = !t2 && "scroll" === a, x2 = t2 ? null !== h3 ? h3 + "Capture" : null : h3;
        t2 = [];
        for (var w2 = d2, u2; null !== w2; ) {
          u2 = w2;
          var F2 = u2.stateNode;
          5 === u2.tag && null !== F2 && (u2 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t2.push(tf(w2, F2, u2))));
          if (J2)
            break;
          w2 = w2.return;
        }
        0 < t2.length && (h3 = new k3(h3, n2, null, c, e2), g2.push({ event: h3, listeners: t2 }));
      }
    }
    if (0 === (b & 7)) {
      a: {
        h3 = "mouseover" === a || "pointerover" === a;
        k3 = "mouseout" === a || "pointerout" === a;
        if (h3 && c !== wb && (n2 = c.relatedTarget || c.fromElement) && (Wc(n2) || n2[uf]))
          break a;
        if (k3 || h3) {
          h3 = e2.window === e2 ? e2 : (h3 = e2.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
          if (k3) {
            if (n2 = c.relatedTarget || c.toElement, k3 = d2, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag))
              n2 = null;
          } else
            k3 = null, n2 = d2;
          if (k3 !== n2) {
            t2 = Bd;
            F2 = "onMouseLeave";
            x2 = "onMouseEnter";
            w2 = "mouse";
            if ("pointerout" === a || "pointerover" === a)
              t2 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
            J2 = null == k3 ? h3 : ue(k3);
            u2 = null == n2 ? h3 : ue(n2);
            h3 = new t2(F2, w2 + "leave", k3, c, e2);
            h3.target = J2;
            h3.relatedTarget = u2;
            F2 = null;
            Wc(e2) === d2 && (t2 = new t2(x2, w2 + "enter", n2, c, e2), t2.target = u2, t2.relatedTarget = J2, F2 = t2);
            J2 = F2;
            if (k3 && n2)
              b: {
                t2 = k3;
                x2 = n2;
                w2 = 0;
                for (u2 = t2; u2; u2 = vf(u2))
                  w2++;
                u2 = 0;
                for (F2 = x2; F2; F2 = vf(F2))
                  u2++;
                for (; 0 < w2 - u2; )
                  t2 = vf(t2), w2--;
                for (; 0 < u2 - w2; )
                  x2 = vf(x2), u2--;
                for (; w2--; ) {
                  if (t2 === x2 || null !== x2 && t2 === x2.alternate)
                    break b;
                  t2 = vf(t2);
                  x2 = vf(x2);
                }
                t2 = null;
              }
            else
              t2 = null;
            null !== k3 && wf(g2, h3, k3, t2, false);
            null !== n2 && null !== J2 && wf(g2, J2, n2, t2, true);
          }
        }
      }
      a: {
        h3 = d2 ? ue(d2) : window;
        k3 = h3.nodeName && h3.nodeName.toLowerCase();
        if ("select" === k3 || "input" === k3 && "file" === h3.type)
          var na = ve;
        else if (me(h3))
          if (we)
            na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
        else
          (k3 = h3.nodeName) && "input" === k3.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
        if (na && (na = na(a, d2))) {
          ne(g2, na, c, e2);
          break a;
        }
        xa && xa(a, h3, d2);
        "focusout" === a && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
      }
      xa = d2 ? ue(d2) : window;
      switch (a) {
        case "focusin":
          if (me(xa) || "true" === xa.contentEditable)
            Qe = xa, Re = d2, Se = null;
          break;
        case "focusout":
          Se = Re = Qe = null;
          break;
        case "mousedown":
          Te = true;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = false;
          Ue(g2, c, e2);
          break;
        case "selectionchange":
          if (Pe)
            break;
        case "keydown":
        case "keyup":
          Ue(g2, c, e2);
      }
      var $a;
      if (ae)
        b: {
          switch (a) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
      else
        ie ? ge(a, c) && (ba = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (ba = "onCompositionStart");
      ba && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e2, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d2, ba), 0 < xa.length && (ba = new Ld(ba, a, null, c, e2), g2.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c), null !== $a && (ba.data = $a))));
      if ($a = ce ? je(a, c) : ke(a, c))
        d2 = oe(d2, "onBeforeInput"), 0 < d2.length && (e2 = new Ld("onBeforeInput", "beforeinput", null, c, e2), g2.push({ event: e2, listeners: d2 }), e2.data = $a);
    }
    se(g2, b);
  });
}
function tf(a, b, c) {
  return { instance: a, listener: b, currentTarget: c };
}
function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a; ) {
    var e = a, f2 = e.stateNode;
    5 === e.tag && null !== f2 && (e = f2, f2 = Kb(a, c), null != f2 && d.unshift(tf(a, f2, e)), f2 = Kb(a, b), null != f2 && d.push(tf(a, f2, e)));
    a = a.return;
  }
  return d;
}
function vf(a) {
  if (null === a)
    return null;
  do
    a = a.return;
  while (a && 5 !== a.tag);
  return a ? a : null;
}
function wf(a, b, c, d, e) {
  for (var f2 = b._reactName, g = []; null !== c && c !== d; ) {
    var h2 = c, k2 = h2.alternate, l2 = h2.stateNode;
    if (null !== k2 && k2 === d)
      break;
    5 === h2.tag && null !== l2 && (h2 = l2, e ? (k2 = Kb(c, f2), null != k2 && g.unshift(tf(c, k2, h2))) : e || (k2 = Kb(c, f2), null != k2 && g.push(tf(c, k2, h2))));
    c = c.return;
  }
  0 !== g.length && a.push({ event: b, listeners: g });
}
var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
function zf(a) {
  return ("string" === typeof a ? a : "" + a).replace(xf, "\n").replace(yf, "");
}
function Af(a, b, c) {
  b = zf(b);
  if (zf(a) !== b && c)
    throw Error(p(425));
}
function Bf() {
}
var Cf = null, Df = null;
function Ef(a, b) {
  return "textarea" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a) {
  return Hf.resolve(null).then(a).catch(If);
} : Ff;
function If(a) {
  setTimeout(function() {
    throw a;
  });
}
function Kf(a, b) {
  var c = b, d = 0;
  do {
    var e = c.nextSibling;
    a.removeChild(c);
    if (e && 8 === e.nodeType)
      if (c = e.data, "/$" === c) {
        if (0 === d) {
          a.removeChild(e);
          bd(b);
          return;
        }
        d--;
      } else
        "$" !== c && "$?" !== c && "$!" !== c || d++;
    c = e;
  } while (c);
  bd(b);
}
function Lf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b)
      break;
    if (8 === b) {
      b = a.data;
      if ("$" === b || "$!" === b || "$?" === b)
        break;
      if ("/$" === b)
        return null;
    }
  }
  return a;
}
function Mf(a) {
  a = a.previousSibling;
  for (var b = 0; a; ) {
    if (8 === a.nodeType) {
      var c = a.data;
      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b)
          return a;
        b--;
      } else
        "/$" === c && b++;
    }
    a = a.previousSibling;
  }
  return null;
}
var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
function Wc(a) {
  var b = a[Of];
  if (b)
    return b;
  for (var c = a.parentNode; c; ) {
    if (b = c[uf] || c[Of]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child)
        for (a = Mf(a); null !== a; ) {
          if (c = a[Of])
            return c;
          a = Mf(a);
        }
      return b;
    }
    a = c;
    c = a.parentNode;
  }
  return null;
}
function Cb(a) {
  a = a[Of] || a[uf];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function ue(a) {
  if (5 === a.tag || 6 === a.tag)
    return a.stateNode;
  throw Error(p(33));
}
function Db(a) {
  return a[Pf] || null;
}
var Sf = [], Tf = -1;
function Uf(a) {
  return { current: a };
}
function E(a) {
  0 > Tf || (a.current = Sf[Tf], Sf[Tf] = null, Tf--);
}
function G(a, b) {
  Tf++;
  Sf[Tf] = a.current;
  a.current = b;
}
var Vf = {}, H = Uf(Vf), Wf = Uf(false), Xf = Vf;
function Yf(a, b) {
  var c = a.type.contextTypes;
  if (!c)
    return Vf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
    return d.__reactInternalMemoizedMaskedChildContext;
  var e = {}, f2;
  for (f2 in c)
    e[f2] = b[f2];
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}
function Zf(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}
function $f() {
  E(Wf);
  E(H);
}
function ag(a, b, c) {
  if (H.current !== Vf)
    throw Error(p(168));
  G(H, b);
  G(Wf, c);
}
function bg(a, b, c) {
  var d = a.stateNode;
  b = b.childContextTypes;
  if ("function" !== typeof d.getChildContext)
    return c;
  d = d.getChildContext();
  for (var e in d)
    if (!(e in b))
      throw Error(p(108, Ra(a) || "Unknown", e));
  return A({}, c, d);
}
function cg(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Vf;
  Xf = H.current;
  G(H, a);
  G(Wf, Wf.current);
  return true;
}
function dg(a, b, c) {
  var d = a.stateNode;
  if (!d)
    throw Error(p(169));
  c ? (a = bg(a, b, Xf), d.__reactInternalMemoizedMergedChildContext = a, E(Wf), E(H), G(H, a)) : E(Wf);
  G(Wf, c);
}
var eg = null, fg = false, gg = false;
function hg(a) {
  null === eg ? eg = [a] : eg.push(a);
}
function ig(a) {
  fg = true;
  hg(a);
}
function jg() {
  if (!gg && null !== eg) {
    gg = true;
    var a = 0, b = C;
    try {
      var c = eg;
      for (C = 1; a < c.length; a++) {
        var d = c[a];
        do
          d = d(true);
        while (null !== d);
      }
      eg = null;
      fg = false;
    } catch (e) {
      throw null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e;
    } finally {
      C = b, gg = false;
    }
  }
  return null;
}
var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
function tg(a, b) {
  kg[lg++] = ng;
  kg[lg++] = mg;
  mg = a;
  ng = b;
}
function ug(a, b, c) {
  og[pg++] = rg;
  og[pg++] = sg;
  og[pg++] = qg;
  qg = a;
  var d = rg;
  a = sg;
  var e = 32 - oc(d) - 1;
  d &= ~(1 << e);
  c += 1;
  var f2 = 32 - oc(b) + e;
  if (30 < f2) {
    var g = e - e % 5;
    f2 = (d & (1 << g) - 1).toString(32);
    d >>= g;
    e -= g;
    rg = 1 << 32 - oc(b) + e | c << e | d;
    sg = f2 + a;
  } else
    rg = 1 << f2 | c << e | d, sg = a;
}
function vg(a) {
  null !== a.return && (tg(a, 1), ug(a, 1, 0));
}
function wg(a) {
  for (; a === mg; )
    mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
  for (; a === qg; )
    qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
}
var xg = null, yg = null, I = false, zg = null;
function Ag(a, b) {
  var c = Bg(5, null, null, 0);
  c.elementType = "DELETED";
  c.stateNode = b;
  c.return = a;
  b = a.deletions;
  null === b ? (a.deletions = [c], a.flags |= 16) : b.push(c);
}
function Cg(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, xg = a, yg = Lf(b.firstChild), true) : false;
    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, xg = a, yg = null, true) : false;
    case 13:
      return b = 8 !== b.nodeType ? null : b, null !== b ? (c = null !== qg ? { id: rg, overflow: sg } : null, a.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }, c = Bg(18, null, null, 0), c.stateNode = b, c.return = a, a.child = c, xg = a, yg = null, true) : false;
    default:
      return false;
  }
}
function Dg(a) {
  return 0 !== (a.mode & 1) && 0 === (a.flags & 128);
}
function Eg(a) {
  if (I) {
    var b = yg;
    if (b) {
      var c = b;
      if (!Cg(a, b)) {
        if (Dg(a))
          throw Error(p(418));
        b = Lf(c.nextSibling);
        var d = xg;
        b && Cg(a, b) ? Ag(d, c) : (a.flags = a.flags & -4097 | 2, I = false, xg = a);
      }
    } else {
      if (Dg(a))
        throw Error(p(418));
      a.flags = a.flags & -4097 | 2;
      I = false;
      xg = a;
    }
  }
}
function Fg(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; )
    a = a.return;
  xg = a;
}
function Gg(a) {
  if (a !== xg)
    return false;
  if (!I)
    return Fg(a), I = true, false;
  var b;
  (b = 3 !== a.tag) && !(b = 5 !== a.tag) && (b = a.type, b = "head" !== b && "body" !== b && !Ef(a.type, a.memoizedProps));
  if (b && (b = yg)) {
    if (Dg(a))
      throw Hg(), Error(p(418));
    for (; b; )
      Ag(a, b), b = Lf(b.nextSibling);
  }
  Fg(a);
  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a)
      throw Error(p(317));
    a: {
      a = a.nextSibling;
      for (b = 0; a; ) {
        if (8 === a.nodeType) {
          var c = a.data;
          if ("/$" === c) {
            if (0 === b) {
              yg = Lf(a.nextSibling);
              break a;
            }
            b--;
          } else
            "$" !== c && "$!" !== c && "$?" !== c || b++;
        }
        a = a.nextSibling;
      }
      yg = null;
    }
  } else
    yg = xg ? Lf(a.stateNode.nextSibling) : null;
  return true;
}
function Hg() {
  for (var a = yg; a; )
    a = Lf(a.nextSibling);
}
function Ig() {
  yg = xg = null;
  I = false;
}
function Jg(a) {
  null === zg ? zg = [a] : zg.push(a);
}
var Kg = ua.ReactCurrentBatchConfig;
function Lg(a, b) {
  if (a && a.defaultProps) {
    b = A({}, b);
    a = a.defaultProps;
    for (var c in a)
      void 0 === b[c] && (b[c] = a[c]);
    return b;
  }
  return b;
}
var Mg = Uf(null), Ng = null, Og = null, Pg = null;
function Qg() {
  Pg = Og = Ng = null;
}
function Rg(a) {
  var b = Mg.current;
  E(Mg);
  a._currentValue = b;
}
function Sg(a, b, c) {
  for (; null !== a; ) {
    var d = a.alternate;
    (a.childLanes & b) !== b ? (a.childLanes |= b, null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b);
    if (a === c)
      break;
    a = a.return;
  }
}
function Tg(a, b) {
  Ng = a;
  Pg = Og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = true), a.firstContext = null);
}
function Vg(a) {
  var b = a._currentValue;
  if (Pg !== a)
    if (a = { context: a, memoizedValue: b, next: null }, null === Og) {
      if (null === Ng)
        throw Error(p(308));
      Og = a;
      Ng.dependencies = { lanes: 0, firstContext: a };
    } else
      Og = Og.next = a;
  return b;
}
var Wg = null;
function Xg(a) {
  null === Wg ? Wg = [a] : Wg.push(a);
}
function Yg(a, b, c, d) {
  var e = b.interleaved;
  null === e ? (c.next = c, Xg(b)) : (c.next = e.next, e.next = c);
  b.interleaved = c;
  return Zg(a, d);
}
function Zg(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;
  for (a = a.return; null !== a; )
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  return 3 === c.tag ? c.stateNode : null;
}
var $g = false;
function ah(a) {
  a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
}
function bh(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects });
}
function ch(a, b) {
  return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null };
}
function dh(a, b, c) {
  var d = a.updateQueue;
  if (null === d)
    return null;
  d = d.shared;
  if (0 !== (K & 2)) {
    var e = d.pending;
    null === e ? b.next = b : (b.next = e.next, e.next = b);
    d.pending = b;
    return Zg(a, c);
  }
  e = d.interleaved;
  null === e ? (b.next = b, Xg(d)) : (b.next = e.next, e.next = b);
  d.interleaved = b;
  return Zg(a, c);
}
function eh(a, b, c) {
  b = b.updateQueue;
  if (null !== b && (b = b.shared, 0 !== (c & 4194240))) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
function fh(a, b) {
  var c = a.updateQueue, d = a.alternate;
  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null, f2 = null;
    c = c.firstBaseUpdate;
    if (null !== c) {
      do {
        var g = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null };
        null === f2 ? e = f2 = g : f2 = f2.next = g;
        c = c.next;
      } while (null !== c);
      null === f2 ? e = f2 = b : f2 = f2.next = b;
    } else
      e = f2 = b;
    c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f2, shared: d.shared, effects: d.effects };
    a.updateQueue = c;
    return;
  }
  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}
function gh(a, b, c, d) {
  var e = a.updateQueue;
  $g = false;
  var f2 = e.firstBaseUpdate, g = e.lastBaseUpdate, h2 = e.shared.pending;
  if (null !== h2) {
    e.shared.pending = null;
    var k2 = h2, l2 = k2.next;
    k2.next = null;
    null === g ? f2 = l2 : g.next = l2;
    g = k2;
    var m2 = a.alternate;
    null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g && (null === h2 ? m2.firstBaseUpdate = l2 : h2.next = l2, m2.lastBaseUpdate = k2));
  }
  if (null !== f2) {
    var q2 = e.baseState;
    g = 0;
    m2 = l2 = k2 = null;
    h2 = f2;
    do {
      var r2 = h2.lane, y2 = h2.eventTime;
      if ((d & r2) === r2) {
        null !== m2 && (m2 = m2.next = {
          eventTime: y2,
          lane: 0,
          tag: h2.tag,
          payload: h2.payload,
          callback: h2.callback,
          next: null
        });
        a: {
          var n2 = a, t2 = h2;
          r2 = b;
          y2 = c;
          switch (t2.tag) {
            case 1:
              n2 = t2.payload;
              if ("function" === typeof n2) {
                q2 = n2.call(y2, q2, r2);
                break a;
              }
              q2 = n2;
              break a;
            case 3:
              n2.flags = n2.flags & -65537 | 128;
            case 0:
              n2 = t2.payload;
              r2 = "function" === typeof n2 ? n2.call(y2, q2, r2) : n2;
              if (null === r2 || void 0 === r2)
                break a;
              q2 = A({}, q2, r2);
              break a;
            case 2:
              $g = true;
          }
        }
        null !== h2.callback && 0 !== h2.lane && (a.flags |= 64, r2 = e.effects, null === r2 ? e.effects = [h2] : r2.push(h2));
      } else
        y2 = { eventTime: y2, lane: r2, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l2 = m2 = y2, k2 = q2) : m2 = m2.next = y2, g |= r2;
      h2 = h2.next;
      if (null === h2)
        if (h2 = e.shared.pending, null === h2)
          break;
        else
          r2 = h2, h2 = r2.next, r2.next = null, e.lastBaseUpdate = r2, e.shared.pending = null;
    } while (1);
    null === m2 && (k2 = q2);
    e.baseState = k2;
    e.firstBaseUpdate = l2;
    e.lastBaseUpdate = m2;
    b = e.shared.interleaved;
    if (null !== b) {
      e = b;
      do
        g |= e.lane, e = e.next;
      while (e !== b);
    } else
      null === f2 && (e.shared.lanes = 0);
    hh |= g;
    a.lanes = g;
    a.memoizedState = q2;
  }
}
function ih(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a)
    for (b = 0; b < a.length; b++) {
      var d = a[b], e = d.callback;
      if (null !== e) {
        d.callback = null;
        d = c;
        if ("function" !== typeof e)
          throw Error(p(191, e));
        e.call(d);
      }
    }
}
var jh = new aa.Component().refs;
function kh(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : A({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}
var nh = { isMounted: function(a) {
  return (a = a._reactInternals) ? Vb(a) === a : false;
}, enqueueSetState: function(a, b, c) {
  a = a._reactInternals;
  var d = L(), e = lh(a), f2 = ch(d, e);
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = dh(a, f2, e);
  null !== b && (mh(b, a, e, d), eh(b, a, e));
}, enqueueReplaceState: function(a, b, c) {
  a = a._reactInternals;
  var d = L(), e = lh(a), f2 = ch(d, e);
  f2.tag = 1;
  f2.payload = b;
  void 0 !== c && null !== c && (f2.callback = c);
  b = dh(a, f2, e);
  null !== b && (mh(b, a, e, d), eh(b, a, e));
}, enqueueForceUpdate: function(a, b) {
  a = a._reactInternals;
  var c = L(), d = lh(a), e = ch(c, d);
  e.tag = 2;
  void 0 !== b && null !== b && (e.callback = b);
  b = dh(a, e, d);
  null !== b && (mh(b, a, d, c), eh(b, a, d));
} };
function oh(a, b, c, d, e, f2, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f2, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f2) : true;
}
function ph(a, b, c) {
  var d = false, e = Vf;
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? f2 = Vg(f2) : (e = Zf(b) ? Xf : H.current, d = b.contextTypes, f2 = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf);
  b = new b(c, f2);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = nh;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f2);
  return b;
}
function qh(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && nh.enqueueReplaceState(b, b.state, null);
}
function rh(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = jh;
  ah(a);
  var f2 = b.contextType;
  "object" === typeof f2 && null !== f2 ? e.context = Vg(f2) : (f2 = Zf(b) ? Xf : H.current, e.context = Yf(a, f2));
  e.state = a.memoizedState;
  f2 = b.getDerivedStateFromProps;
  "function" === typeof f2 && (kh(a, b, f2, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && nh.enqueueReplaceState(e, e.state, null), gh(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4194308);
}
function sh(a, b, c) {
  a = c.ref;
  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;
      if (c) {
        if (1 !== c.tag)
          throw Error(p(309));
        var d = c.stateNode;
      }
      if (!d)
        throw Error(p(147, a));
      var e = d, f2 = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === f2)
        return b.ref;
      b = function(a2) {
        var b2 = e.refs;
        b2 === jh && (b2 = e.refs = {});
        null === a2 ? delete b2[f2] : b2[f2] = a2;
      };
      b._stringRef = f2;
      return b;
    }
    if ("string" !== typeof a)
      throw Error(p(284));
    if (!c._owner)
      throw Error(p(290, a));
  }
  return a;
}
function th(a, b) {
  a = Object.prototype.toString.call(b);
  throw Error(p(31, "[object Object]" === a ? "object with keys {" + Object.keys(b).join(", ") + "}" : a));
}
function uh(a) {
  var b = a._init;
  return b(a._payload);
}
function vh(a) {
  function b(b2, c2) {
    if (a) {
      var d2 = b2.deletions;
      null === d2 ? (b2.deletions = [c2], b2.flags |= 16) : d2.push(c2);
    }
  }
  function c(c2, d2) {
    if (!a)
      return null;
    for (; null !== d2; )
      b(c2, d2), d2 = d2.sibling;
    return null;
  }
  function d(a2, b2) {
    for (a2 = /* @__PURE__ */ new Map(); null !== b2; )
      null !== b2.key ? a2.set(b2.key, b2) : a2.set(b2.index, b2), b2 = b2.sibling;
    return a2;
  }
  function e(a2, b2) {
    a2 = wh(a2, b2);
    a2.index = 0;
    a2.sibling = null;
    return a2;
  }
  function f2(b2, c2, d2) {
    b2.index = d2;
    if (!a)
      return b2.flags |= 1048576, c2;
    d2 = b2.alternate;
    if (null !== d2)
      return d2 = d2.index, d2 < c2 ? (b2.flags |= 2, c2) : d2;
    b2.flags |= 2;
    return c2;
  }
  function g(b2) {
    a && null === b2.alternate && (b2.flags |= 2);
    return b2;
  }
  function h2(a2, b2, c2, d2) {
    if (null === b2 || 6 !== b2.tag)
      return b2 = xh(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function k2(a2, b2, c2, d2) {
    var f3 = c2.type;
    if (f3 === ya)
      return m2(a2, b2, c2.props.children, d2, c2.key);
    if (null !== b2 && (b2.elementType === f3 || "object" === typeof f3 && null !== f3 && f3.$$typeof === Ha && uh(f3) === b2.type))
      return d2 = e(b2, c2.props), d2.ref = sh(a2, b2, c2), d2.return = a2, d2;
    d2 = yh(c2.type, c2.key, c2.props, null, a2.mode, d2);
    d2.ref = sh(a2, b2, c2);
    d2.return = a2;
    return d2;
  }
  function l2(a2, b2, c2, d2) {
    if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation)
      return b2 = zh(c2, a2.mode, d2), b2.return = a2, b2;
    b2 = e(b2, c2.children || []);
    b2.return = a2;
    return b2;
  }
  function m2(a2, b2, c2, d2, f3) {
    if (null === b2 || 7 !== b2.tag)
      return b2 = Ah(c2, a2.mode, d2, f3), b2.return = a2, b2;
    b2 = e(b2, c2);
    b2.return = a2;
    return b2;
  }
  function q2(a2, b2, c2) {
    if ("string" === typeof b2 && "" !== b2 || "number" === typeof b2)
      return b2 = xh("" + b2, a2.mode, c2), b2.return = a2, b2;
    if ("object" === typeof b2 && null !== b2) {
      switch (b2.$$typeof) {
        case va:
          return c2 = yh(b2.type, b2.key, b2.props, null, a2.mode, c2), c2.ref = sh(a2, null, b2), c2.return = a2, c2;
        case wa:
          return b2 = zh(b2, a2.mode, c2), b2.return = a2, b2;
        case Ha:
          var d2 = b2._init;
          return q2(a2, d2(b2._payload), c2);
      }
      if (eb(b2) || Ka(b2))
        return b2 = Ah(b2, a2.mode, c2, null), b2.return = a2, b2;
      th(a2, b2);
    }
    return null;
  }
  function r2(a2, b2, c2, d2) {
    var e2 = null !== b2 ? b2.key : null;
    if ("string" === typeof c2 && "" !== c2 || "number" === typeof c2)
      return null !== e2 ? null : h2(a2, b2, "" + c2, d2);
    if ("object" === typeof c2 && null !== c2) {
      switch (c2.$$typeof) {
        case va:
          return c2.key === e2 ? k2(a2, b2, c2, d2) : null;
        case wa:
          return c2.key === e2 ? l2(a2, b2, c2, d2) : null;
        case Ha:
          return e2 = c2._init, r2(
            a2,
            b2,
            e2(c2._payload),
            d2
          );
      }
      if (eb(c2) || Ka(c2))
        return null !== e2 ? null : m2(a2, b2, c2, d2, null);
      th(a2, c2);
    }
    return null;
  }
  function y2(a2, b2, c2, d2, e2) {
    if ("string" === typeof d2 && "" !== d2 || "number" === typeof d2)
      return a2 = a2.get(c2) || null, h2(b2, a2, "" + d2, e2);
    if ("object" === typeof d2 && null !== d2) {
      switch (d2.$$typeof) {
        case va:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, k2(b2, a2, d2, e2);
        case wa:
          return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, l2(b2, a2, d2, e2);
        case Ha:
          var f3 = d2._init;
          return y2(a2, b2, c2, f3(d2._payload), e2);
      }
      if (eb(d2) || Ka(d2))
        return a2 = a2.get(c2) || null, m2(b2, a2, d2, e2, null);
      th(b2, d2);
    }
    return null;
  }
  function n2(e2, g2, h3, k3) {
    for (var l3 = null, m3 = null, u2 = g2, w2 = g2 = 0, x2 = null; null !== u2 && w2 < h3.length; w2++) {
      u2.index > w2 ? (x2 = u2, u2 = null) : x2 = u2.sibling;
      var n3 = r2(e2, u2, h3[w2], k3);
      if (null === n3) {
        null === u2 && (u2 = x2);
        break;
      }
      a && u2 && null === n3.alternate && b(e2, u2);
      g2 = f2(n3, g2, w2);
      null === m3 ? l3 = n3 : m3.sibling = n3;
      m3 = n3;
      u2 = x2;
    }
    if (w2 === h3.length)
      return c(e2, u2), I && tg(e2, w2), l3;
    if (null === u2) {
      for (; w2 < h3.length; w2++)
        u2 = q2(e2, h3[w2], k3), null !== u2 && (g2 = f2(u2, g2, w2), null === m3 ? l3 = u2 : m3.sibling = u2, m3 = u2);
      I && tg(e2, w2);
      return l3;
    }
    for (u2 = d(e2, u2); w2 < h3.length; w2++)
      x2 = y2(u2, e2, w2, h3[w2], k3), null !== x2 && (a && null !== x2.alternate && u2.delete(null === x2.key ? w2 : x2.key), g2 = f2(x2, g2, w2), null === m3 ? l3 = x2 : m3.sibling = x2, m3 = x2);
    a && u2.forEach(function(a2) {
      return b(e2, a2);
    });
    I && tg(e2, w2);
    return l3;
  }
  function t2(e2, g2, h3, k3) {
    var l3 = Ka(h3);
    if ("function" !== typeof l3)
      throw Error(p(150));
    h3 = l3.call(h3);
    if (null == h3)
      throw Error(p(151));
    for (var u2 = l3 = null, m3 = g2, w2 = g2 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
      m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
      var t3 = r2(e2, m3, n3.value, k3);
      if (null === t3) {
        null === m3 && (m3 = x2);
        break;
      }
      a && m3 && null === t3.alternate && b(e2, m3);
      g2 = f2(t3, g2, w2);
      null === u2 ? l3 = t3 : u2.sibling = t3;
      u2 = t3;
      m3 = x2;
    }
    if (n3.done)
      return c(
        e2,
        m3
      ), I && tg(e2, w2), l3;
    if (null === m3) {
      for (; !n3.done; w2++, n3 = h3.next())
        n3 = q2(e2, n3.value, k3), null !== n3 && (g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
      I && tg(e2, w2);
      return l3;
    }
    for (m3 = d(e2, m3); !n3.done; w2++, n3 = h3.next())
      n3 = y2(m3, e2, w2, n3.value, k3), null !== n3 && (a && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g2 = f2(n3, g2, w2), null === u2 ? l3 = n3 : u2.sibling = n3, u2 = n3);
    a && m3.forEach(function(a2) {
      return b(e2, a2);
    });
    I && tg(e2, w2);
    return l3;
  }
  function J2(a2, d2, f3, h3) {
    "object" === typeof f3 && null !== f3 && f3.type === ya && null === f3.key && (f3 = f3.props.children);
    if ("object" === typeof f3 && null !== f3) {
      switch (f3.$$typeof) {
        case va:
          a: {
            for (var k3 = f3.key, l3 = d2; null !== l3; ) {
              if (l3.key === k3) {
                k3 = f3.type;
                if (k3 === ya) {
                  if (7 === l3.tag) {
                    c(a2, l3.sibling);
                    d2 = e(l3, f3.props.children);
                    d2.return = a2;
                    a2 = d2;
                    break a;
                  }
                } else if (l3.elementType === k3 || "object" === typeof k3 && null !== k3 && k3.$$typeof === Ha && uh(k3) === l3.type) {
                  c(a2, l3.sibling);
                  d2 = e(l3, f3.props);
                  d2.ref = sh(a2, l3, f3);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                }
                c(a2, l3);
                break;
              } else
                b(a2, l3);
              l3 = l3.sibling;
            }
            f3.type === ya ? (d2 = Ah(f3.props.children, a2.mode, h3, f3.key), d2.return = a2, a2 = d2) : (h3 = yh(f3.type, f3.key, f3.props, null, a2.mode, h3), h3.ref = sh(a2, d2, f3), h3.return = a2, a2 = h3);
          }
          return g(a2);
        case wa:
          a: {
            for (l3 = f3.key; null !== d2; ) {
              if (d2.key === l3)
                if (4 === d2.tag && d2.stateNode.containerInfo === f3.containerInfo && d2.stateNode.implementation === f3.implementation) {
                  c(a2, d2.sibling);
                  d2 = e(d2, f3.children || []);
                  d2.return = a2;
                  a2 = d2;
                  break a;
                } else {
                  c(a2, d2);
                  break;
                }
              else
                b(a2, d2);
              d2 = d2.sibling;
            }
            d2 = zh(f3, a2.mode, h3);
            d2.return = a2;
            a2 = d2;
          }
          return g(a2);
        case Ha:
          return l3 = f3._init, J2(a2, d2, l3(f3._payload), h3);
      }
      if (eb(f3))
        return n2(a2, d2, f3, h3);
      if (Ka(f3))
        return t2(a2, d2, f3, h3);
      th(a2, f3);
    }
    return "string" === typeof f3 && "" !== f3 || "number" === typeof f3 ? (f3 = "" + f3, null !== d2 && 6 === d2.tag ? (c(a2, d2.sibling), d2 = e(d2, f3), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = xh(f3, a2.mode, h3), d2.return = a2, a2 = d2), g(a2)) : c(a2, d2);
  }
  return J2;
}
var Bh = vh(true), Ch = vh(false), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
function Hh(a) {
  if (a === Dh)
    throw Error(p(174));
  return a;
}
function Ih(a, b) {
  G(Gh, b);
  G(Fh, a);
  G(Eh, Dh);
  a = b.nodeType;
  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : lb(null, "");
      break;
    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = lb(b, a);
  }
  E(Eh);
  G(Eh, b);
}
function Jh() {
  E(Eh);
  E(Fh);
  E(Gh);
}
function Kh(a) {
  Hh(Gh.current);
  var b = Hh(Eh.current);
  var c = lb(b, a.type);
  b !== c && (G(Fh, a), G(Eh, c));
}
function Lh(a) {
  Fh.current === a && (E(Eh), E(Fh));
}
var M = Uf(0);
function Mh(a) {
  for (var b = a; null !== b; ) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data))
        return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 128))
        return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }
    if (b === a)
      break;
    for (; null === b.sibling; ) {
      if (null === b.return || b.return === a)
        return null;
      b = b.return;
    }
    b.sibling.return = b.return;
    b = b.sibling;
  }
  return null;
}
var Nh = [];
function Oh() {
  for (var a = 0; a < Nh.length; a++)
    Nh[a]._workInProgressVersionPrimary = null;
  Nh.length = 0;
}
var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N = null, O = null, P = null, Sh = false, Th = false, Uh = 0, Vh = 0;
function Q() {
  throw Error(p(321));
}
function Wh(a, b) {
  if (null === b)
    return false;
  for (var c = 0; c < b.length && c < a.length; c++)
    if (!He(a[c], b[c]))
      return false;
  return true;
}
function Xh(a, b, c, d, e, f2) {
  Rh = f2;
  N = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  Ph.current = null === a || null === a.memoizedState ? Yh : Zh;
  a = c(d, e);
  if (Th) {
    f2 = 0;
    do {
      Th = false;
      Uh = 0;
      if (25 <= f2)
        throw Error(p(301));
      f2 += 1;
      P = O = null;
      b.updateQueue = null;
      Ph.current = $h;
      a = c(d, e);
    } while (Th);
  }
  Ph.current = ai;
  b = null !== O && null !== O.next;
  Rh = 0;
  P = O = N = null;
  Sh = false;
  if (b)
    throw Error(p(300));
  return a;
}
function bi() {
  var a = 0 !== Uh;
  Uh = 0;
  return a;
}
function ci() {
  var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
  null === P ? N.memoizedState = P = a : P = P.next = a;
  return P;
}
function di() {
  if (null === O) {
    var a = N.alternate;
    a = null !== a ? a.memoizedState : null;
  } else
    a = O.next;
  var b = null === P ? N.memoizedState : P.next;
  if (null !== b)
    P = b, O = a;
  else {
    if (null === a)
      throw Error(p(310));
    O = a;
    a = { memoizedState: O.memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null };
    null === P ? N.memoizedState = P = a : P = P.next = a;
  }
  return P;
}
function ei(a, b) {
  return "function" === typeof b ? b(a) : b;
}
function fi(a) {
  var b = di(), c = b.queue;
  if (null === c)
    throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = O, e = d.baseQueue, f2 = c.pending;
  if (null !== f2) {
    if (null !== e) {
      var g = e.next;
      e.next = f2.next;
      f2.next = g;
    }
    d.baseQueue = e = f2;
    c.pending = null;
  }
  if (null !== e) {
    f2 = e.next;
    d = d.baseState;
    var h2 = g = null, k2 = null, l2 = f2;
    do {
      var m2 = l2.lane;
      if ((Rh & m2) === m2)
        null !== k2 && (k2 = k2.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d = l2.hasEagerState ? l2.eagerState : a(d, l2.action);
      else {
        var q2 = {
          lane: m2,
          action: l2.action,
          hasEagerState: l2.hasEagerState,
          eagerState: l2.eagerState,
          next: null
        };
        null === k2 ? (h2 = k2 = q2, g = d) : k2 = k2.next = q2;
        N.lanes |= m2;
        hh |= m2;
      }
      l2 = l2.next;
    } while (null !== l2 && l2 !== f2);
    null === k2 ? g = d : k2.next = h2;
    He(d, b.memoizedState) || (Ug = true);
    b.memoizedState = d;
    b.baseState = g;
    b.baseQueue = k2;
    c.lastRenderedState = d;
  }
  a = c.interleaved;
  if (null !== a) {
    e = a;
    do
      f2 = e.lane, N.lanes |= f2, hh |= f2, e = e.next;
    while (e !== a);
  } else
    null === e && (c.lanes = 0);
  return [b.memoizedState, c.dispatch];
}
function gi(a) {
  var b = di(), c = b.queue;
  if (null === c)
    throw Error(p(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch, e = c.pending, f2 = b.memoizedState;
  if (null !== e) {
    c.pending = null;
    var g = e = e.next;
    do
      f2 = a(f2, g.action), g = g.next;
    while (g !== e);
    He(f2, b.memoizedState) || (Ug = true);
    b.memoizedState = f2;
    null === b.baseQueue && (b.baseState = f2);
    c.lastRenderedState = f2;
  }
  return [f2, d];
}
function hi() {
}
function ii(a, b) {
  var c = N, d = di(), e = b(), f2 = !He(d.memoizedState, e);
  f2 && (d.memoizedState = e, Ug = true);
  d = d.queue;
  ji(ki.bind(null, c, d, a), [a]);
  if (d.getSnapshot !== b || f2 || null !== P && P.memoizedState.tag & 1) {
    c.flags |= 2048;
    li(9, mi.bind(null, c, d, e, b), void 0, null);
    if (null === R)
      throw Error(p(349));
    0 !== (Rh & 30) || ni(c, b, e);
  }
  return e;
}
function ni(a, b, c) {
  a.flags |= 16384;
  a = { getSnapshot: b, value: c };
  b = N.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, N.updateQueue = b, b.stores = [a]) : (c = b.stores, null === c ? b.stores = [a] : c.push(a));
}
function mi(a, b, c, d) {
  b.value = c;
  b.getSnapshot = d;
  oi(b) && pi(a);
}
function ki(a, b, c) {
  return c(function() {
    oi(b) && pi(a);
  });
}
function oi(a) {
  var b = a.getSnapshot;
  a = a.value;
  try {
    var c = b();
    return !He(a, c);
  } catch (d) {
    return true;
  }
}
function pi(a) {
  var b = Zg(a, 1);
  null !== b && mh(b, a, 1, -1);
}
function qi(a) {
  var b = ci();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a };
  b.queue = a;
  a = a.dispatch = ri.bind(null, N, a);
  return [b.memoizedState, a];
}
function li(a, b, c, d) {
  a = { tag: a, create: b, destroy: c, deps: d, next: null };
  b = N.updateQueue;
  null === b ? (b = { lastEffect: null, stores: null }, N.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}
function si() {
  return di().memoizedState;
}
function ti(a, b, c, d) {
  var e = ci();
  N.flags |= a;
  e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d);
}
function ui(a, b, c, d) {
  var e = di();
  d = void 0 === d ? null : d;
  var f2 = void 0;
  if (null !== O) {
    var g = O.memoizedState;
    f2 = g.destroy;
    if (null !== d && Wh(d, g.deps)) {
      e.memoizedState = li(b, c, f2, d);
      return;
    }
  }
  N.flags |= a;
  e.memoizedState = li(1 | b, c, f2, d);
}
function vi(a, b) {
  return ti(8390656, 8, a, b);
}
function ji(a, b) {
  return ui(2048, 8, a, b);
}
function wi(a, b) {
  return ui(4, 2, a, b);
}
function xi(a, b) {
  return ui(4, 4, a, b);
}
function yi(a, b) {
  if ("function" === typeof b)
    return a = a(), b(a), function() {
      b(null);
    };
  if (null !== b && void 0 !== b)
    return a = a(), b.current = a, function() {
      b.current = null;
    };
}
function zi(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ui(4, 4, yi.bind(null, b, a), c);
}
function Ai() {
}
function Bi(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1]))
    return d[0];
  c.memoizedState = [a, b];
  return a;
}
function Ci(a, b) {
  var c = di();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Wh(b, d[1]))
    return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}
function Di(a, b, c) {
  if (0 === (Rh & 21))
    return a.baseState && (a.baseState = false, Ug = true), a.memoizedState = c;
  He(c, b) || (c = yc(), N.lanes |= c, hh |= c, a.baseState = true);
  return b;
}
function Ei(a, b) {
  var c = C;
  C = 0 !== c && 4 > c ? c : 4;
  a(true);
  var d = Qh.transition;
  Qh.transition = {};
  try {
    a(false), b();
  } finally {
    C = c, Qh.transition = d;
  }
}
function Fi() {
  return di().memoizedState;
}
function Gi(a, b, c) {
  var d = lh(a);
  c = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b, c);
  else if (c = Yg(a, b, c, d), null !== c) {
    var e = L();
    mh(c, a, d, e);
    Ji(c, b, d);
  }
}
function ri(a, b, c) {
  var d = lh(a), e = { lane: d, action: c, hasEagerState: false, eagerState: null, next: null };
  if (Hi(a))
    Ii(b, e);
  else {
    var f2 = a.alternate;
    if (0 === a.lanes && (null === f2 || 0 === f2.lanes) && (f2 = b.lastRenderedReducer, null !== f2))
      try {
        var g = b.lastRenderedState, h2 = f2(g, c);
        e.hasEagerState = true;
        e.eagerState = h2;
        if (He(h2, g)) {
          var k2 = b.interleaved;
          null === k2 ? (e.next = e, Xg(b)) : (e.next = k2.next, k2.next = e);
          b.interleaved = e;
          return;
        }
      } catch (l2) {
      } finally {
      }
    c = Yg(a, b, e, d);
    null !== c && (e = L(), mh(c, a, d, e), Ji(c, b, d));
  }
}
function Hi(a) {
  var b = a.alternate;
  return a === N || null !== b && b === N;
}
function Ii(a, b) {
  Th = Sh = true;
  var c = a.pending;
  null === c ? b.next = b : (b.next = c.next, c.next = b);
  a.pending = b;
}
function Ji(a, b, c) {
  if (0 !== (c & 4194240)) {
    var d = b.lanes;
    d &= a.pendingLanes;
    c |= d;
    b.lanes = c;
    Cc(a, c);
  }
}
var ai = { readContext: Vg, useCallback: Q, useContext: Q, useEffect: Q, useImperativeHandle: Q, useInsertionEffect: Q, useLayoutEffect: Q, useMemo: Q, useReducer: Q, useRef: Q, useState: Q, useDebugValue: Q, useDeferredValue: Q, useTransition: Q, useMutableSource: Q, useSyncExternalStore: Q, useId: Q, unstable_isNewReconciler: false }, Yh = { readContext: Vg, useCallback: function(a, b) {
  ci().memoizedState = [a, void 0 === b ? null : b];
  return a;
}, useContext: Vg, useEffect: vi, useImperativeHandle: function(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return ti(
    4194308,
    4,
    yi.bind(null, b, a),
    c
  );
}, useLayoutEffect: function(a, b) {
  return ti(4194308, 4, a, b);
}, useInsertionEffect: function(a, b) {
  return ti(4, 2, a, b);
}, useMemo: function(a, b) {
  var c = ci();
  b = void 0 === b ? null : b;
  a = a();
  c.memoizedState = [a, b];
  return a;
}, useReducer: function(a, b, c) {
  var d = ci();
  b = void 0 !== c ? c(b) : b;
  d.memoizedState = d.baseState = b;
  a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
  d.queue = a;
  a = a.dispatch = Gi.bind(null, N, a);
  return [d.memoizedState, a];
}, useRef: function(a) {
  var b = ci();
  a = { current: a };
  return b.memoizedState = a;
}, useState: qi, useDebugValue: Ai, useDeferredValue: function(a) {
  return ci().memoizedState = a;
}, useTransition: function() {
  var a = qi(false), b = a[0];
  a = Ei.bind(null, a[1]);
  ci().memoizedState = a;
  return [b, a];
}, useMutableSource: function() {
}, useSyncExternalStore: function(a, b, c) {
  var d = N, e = ci();
  if (I) {
    if (void 0 === c)
      throw Error(p(407));
    c = c();
  } else {
    c = b();
    if (null === R)
      throw Error(p(349));
    0 !== (Rh & 30) || ni(d, b, c);
  }
  e.memoizedState = c;
  var f2 = { value: c, getSnapshot: b };
  e.queue = f2;
  vi(ki.bind(
    null,
    d,
    f2,
    a
  ), [a]);
  d.flags |= 2048;
  li(9, mi.bind(null, d, f2, c, b), void 0, null);
  return c;
}, useId: function() {
  var a = ci(), b = R.identifierPrefix;
  if (I) {
    var c = sg;
    var d = rg;
    c = (d & ~(1 << 32 - oc(d) - 1)).toString(32) + c;
    b = ":" + b + "R" + c;
    c = Uh++;
    0 < c && (b += "H" + c.toString(32));
    b += ":";
  } else
    c = Vh++, b = ":" + b + "r" + c.toString(32) + ":";
  return a.memoizedState = b;
}, unstable_isNewReconciler: false }, Zh = {
  readContext: Vg,
  useCallback: Bi,
  useContext: Vg,
  useEffect: ji,
  useImperativeHandle: zi,
  useInsertionEffect: wi,
  useLayoutEffect: xi,
  useMemo: Ci,
  useReducer: fi,
  useRef: si,
  useState: function() {
    return fi(ei);
  },
  useDebugValue: Ai,
  useDeferredValue: function(a) {
    var b = di();
    return Di(b, O.memoizedState, a);
  },
  useTransition: function() {
    var a = fi(ei)[0], b = di().memoizedState;
    return [a, b];
  },
  useMutableSource: hi,
  useSyncExternalStore: ii,
  useId: Fi,
  unstable_isNewReconciler: false
}, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
  return gi(ei);
}, useDebugValue: Ai, useDeferredValue: function(a) {
  var b = di();
  return null === O ? b.memoizedState = a : Di(b, O.memoizedState, a);
}, useTransition: function() {
  var a = gi(ei)[0], b = di().memoizedState;
  return [a, b];
}, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: false };
function Ki(a, b) {
  try {
    var c = "", d = b;
    do
      c += Pa(d), d = d.return;
    while (d);
    var e = c;
  } catch (f2) {
    e = "\nError generating stack: " + f2.message + "\n" + f2.stack;
  }
  return { value: a, source: b, stack: e, digest: null };
}
function Li(a, b, c) {
  return { value: a, source: null, stack: null != c ? c : null, digest: null != b ? b : null };
}
function Mi(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function() {
      throw c;
    });
  }
}
var Ni = "function" === typeof WeakMap ? WeakMap : Map;
function Oi(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  c.payload = { element: null };
  var d = b.value;
  c.callback = function() {
    Pi || (Pi = true, Qi = d);
    Mi(a, b);
  };
  return c;
}
function Ri(a, b, c) {
  c = ch(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;
  if ("function" === typeof d) {
    var e = b.value;
    c.payload = function() {
      return d(e);
    };
    c.callback = function() {
      Mi(a, b);
    };
  }
  var f2 = a.stateNode;
  null !== f2 && "function" === typeof f2.componentDidCatch && (c.callback = function() {
    Mi(a, b);
    "function" !== typeof d && (null === Si ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
    var c2 = b.stack;
    this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
  });
  return c;
}
function Ti(a, b, c) {
  var d = a.pingCache;
  if (null === d) {
    d = a.pingCache = new Ni();
    var e = /* @__PURE__ */ new Set();
    d.set(b, e);
  } else
    e = d.get(b), void 0 === e && (e = /* @__PURE__ */ new Set(), d.set(b, e));
  e.has(c) || (e.add(c), a = Ui.bind(null, a, b, c), b.then(a, a));
}
function Vi(a) {
  do {
    var b;
    if (b = 13 === a.tag)
      b = a.memoizedState, b = null !== b ? null !== b.dehydrated ? true : false : true;
    if (b)
      return a;
    a = a.return;
  } while (null !== a);
  return null;
}
function Wi(a, b, c, d, e) {
  if (0 === (a.mode & 1))
    return a === b ? a.flags |= 65536 : (a.flags |= 128, c.flags |= 131072, c.flags &= -52805, 1 === c.tag && (null === c.alternate ? c.tag = 17 : (b = ch(-1, 1), b.tag = 2, dh(c, b, 1))), c.lanes |= 1), a;
  a.flags |= 65536;
  a.lanes = e;
  return a;
}
var Xi = ua.ReactCurrentOwner, Ug = false;
function Yi(a, b, c, d) {
  b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d);
}
function Zi(a, b, c, d, e) {
  c = c.render;
  var f2 = b.ref;
  Tg(b, e);
  d = Xh(a, b, c, d, f2, e);
  c = bi();
  if (null !== a && !Ug)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && c && vg(b);
  b.flags |= 1;
  Yi(a, b, d, e);
  return b.child;
}
function aj(a, b, c, d, e) {
  if (null === a) {
    var f2 = c.type;
    if ("function" === typeof f2 && !bj(f2) && void 0 === f2.defaultProps && null === c.compare && void 0 === c.defaultProps)
      return b.tag = 15, b.type = f2, cj(a, b, f2, d, e);
    a = yh(c.type, null, d, b, b.mode, e);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }
  f2 = a.child;
  if (0 === (a.lanes & e)) {
    var g = f2.memoizedProps;
    c = c.compare;
    c = null !== c ? c : Ie;
    if (c(g, d) && a.ref === b.ref)
      return $i(a, b, e);
  }
  b.flags |= 1;
  a = wh(f2, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}
function cj(a, b, c, d, e) {
  if (null !== a) {
    var f2 = a.memoizedProps;
    if (Ie(f2, d) && a.ref === b.ref)
      if (Ug = false, b.pendingProps = d = f2, 0 !== (a.lanes & e))
        0 !== (a.flags & 131072) && (Ug = true);
      else
        return b.lanes = a.lanes, $i(a, b, e);
  }
  return dj(a, b, c, d, e);
}
function ej(a, b, c) {
  var d = b.pendingProps, e = d.children, f2 = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode)
    if (0 === (b.mode & 1))
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G(fj, gj), gj |= c;
    else {
      if (0 === (c & 1073741824))
        return a = null !== f2 ? f2.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = { baseLanes: a, cachePool: null, transitions: null }, b.updateQueue = null, G(fj, gj), gj |= a, null;
      b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d = null !== f2 ? f2.baseLanes : c;
      G(fj, gj);
      gj |= d;
    }
  else
    null !== f2 ? (d = f2.baseLanes | c, b.memoizedState = null) : d = c, G(fj, gj), gj |= d;
  Yi(a, b, e, c);
  return b.child;
}
function hj(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c)
    b.flags |= 512, b.flags |= 2097152;
}
function dj(a, b, c, d, e) {
  var f2 = Zf(c) ? Xf : H.current;
  f2 = Yf(b, f2);
  Tg(b, e);
  c = Xh(a, b, c, d, f2, e);
  d = bi();
  if (null !== a && !Ug)
    return b.updateQueue = a.updateQueue, b.flags &= -2053, a.lanes &= ~e, $i(a, b, e);
  I && d && vg(b);
  b.flags |= 1;
  Yi(a, b, c, e);
  return b.child;
}
function ij(a, b, c, d, e) {
  if (Zf(c)) {
    var f2 = true;
    cg(b);
  } else
    f2 = false;
  Tg(b, e);
  if (null === b.stateNode)
    jj(a, b), ph(b, c, d), rh(b, c, d, e), d = true;
  else if (null === a) {
    var g = b.stateNode, h2 = b.memoizedProps;
    g.props = h2;
    var k2 = g.context, l2 = c.contextType;
    "object" === typeof l2 && null !== l2 ? l2 = Vg(l2) : (l2 = Zf(c) ? Xf : H.current, l2 = Yf(b, l2));
    var m2 = c.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g.getSnapshotBeforeUpdate;
    q2 || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== d || k2 !== l2) && qh(b, g, d, l2);
    $g = false;
    var r2 = b.memoizedState;
    g.state = r2;
    gh(b, d, g, e);
    k2 = b.memoizedState;
    h2 !== d || r2 !== k2 || Wf.current || $g ? ("function" === typeof m2 && (kh(b, c, m2, d), k2 = b.memoizedState), (h2 = $g || oh(b, c, h2, d, r2, k2, l2)) ? (q2 || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4194308)) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), b.memoizedProps = d, b.memoizedState = k2), g.props = d, g.state = k2, g.context = l2, d = h2) : ("function" === typeof g.componentDidMount && (b.flags |= 4194308), d = false);
  } else {
    g = b.stateNode;
    bh(a, b);
    h2 = b.memoizedProps;
    l2 = b.type === b.elementType ? h2 : Lg(b.type, h2);
    g.props = l2;
    q2 = b.pendingProps;
    r2 = g.context;
    k2 = c.contextType;
    "object" === typeof k2 && null !== k2 ? k2 = Vg(k2) : (k2 = Zf(c) ? Xf : H.current, k2 = Yf(b, k2));
    var y2 = c.getDerivedStateFromProps;
    (m2 = "function" === typeof y2 || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h2 !== q2 || r2 !== k2) && qh(b, g, d, k2);
    $g = false;
    r2 = b.memoizedState;
    g.state = r2;
    gh(b, d, g, e);
    var n2 = b.memoizedState;
    h2 !== q2 || r2 !== n2 || Wf.current || $g ? ("function" === typeof y2 && (kh(b, c, y2, d), n2 = b.memoizedState), (l2 = $g || oh(b, c, l2, d, r2, n2, k2) || false) ? (m2 || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, n2, k2), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n2, k2)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024)) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), b.memoizedProps = d, b.memoizedState = n2), g.props = d, g.state = n2, g.context = k2, d = l2) : ("function" !== typeof g.componentDidUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h2 === a.memoizedProps && r2 === a.memoizedState || (b.flags |= 1024), d = false);
  }
  return kj(a, b, c, d, f2, e);
}
function kj(a, b, c, d, e, f2) {
  hj(a, b);
  var g = 0 !== (b.flags & 128);
  if (!d && !g)
    return e && dg(b, c, false), $i(a, b, f2);
  d = b.stateNode;
  Xi.current = b;
  var h2 = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Bh(b, a.child, null, f2), b.child = Bh(b, null, h2, f2)) : Yi(a, b, h2, f2);
  b.memoizedState = d.state;
  e && dg(b, c, true);
  return b.child;
}
function lj(a) {
  var b = a.stateNode;
  b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, false);
  Ih(a, b.containerInfo);
}
function mj(a, b, c, d, e) {
  Ig();
  Jg(e);
  b.flags |= 256;
  Yi(a, b, c, d);
  return b.child;
}
var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
function oj(a) {
  return { baseLanes: a, cachePool: null, transitions: null };
}
function pj(a, b, c) {
  var d = b.pendingProps, e = M.current, f2 = false, g = 0 !== (b.flags & 128), h2;
  (h2 = g) || (h2 = null !== a && null === a.memoizedState ? false : 0 !== (e & 2));
  if (h2)
    f2 = true, b.flags &= -129;
  else if (null === a || null !== a.memoizedState)
    e |= 1;
  G(M, e & 1);
  if (null === a) {
    Eg(b);
    a = b.memoizedState;
    if (null !== a && (a = a.dehydrated, null !== a))
      return 0 === (b.mode & 1) ? b.lanes = 1 : "$!" === a.data ? b.lanes = 8 : b.lanes = 1073741824, null;
    g = d.children;
    a = d.fallback;
    return f2 ? (d = b.mode, f2 = b.child, g = { mode: "hidden", children: g }, 0 === (d & 1) && null !== f2 ? (f2.childLanes = 0, f2.pendingProps = g) : f2 = qj(g, d, 0, null), a = Ah(a, d, c, null), f2.return = b, a.return = b, f2.sibling = a, b.child = f2, b.child.memoizedState = oj(c), b.memoizedState = nj, a) : rj(b, g);
  }
  e = a.memoizedState;
  if (null !== e && (h2 = e.dehydrated, null !== h2))
    return sj(a, b, g, d, h2, e, c);
  if (f2) {
    f2 = d.fallback;
    g = b.mode;
    e = a.child;
    h2 = e.sibling;
    var k2 = { mode: "hidden", children: d.children };
    0 === (g & 1) && b.child !== e ? (d = b.child, d.childLanes = 0, d.pendingProps = k2, b.deletions = null) : (d = wh(e, k2), d.subtreeFlags = e.subtreeFlags & 14680064);
    null !== h2 ? f2 = wh(h2, f2) : (f2 = Ah(f2, g, c, null), f2.flags |= 2);
    f2.return = b;
    d.return = b;
    d.sibling = f2;
    b.child = d;
    d = f2;
    f2 = b.child;
    g = a.child.memoizedState;
    g = null === g ? oj(c) : { baseLanes: g.baseLanes | c, cachePool: null, transitions: g.transitions };
    f2.memoizedState = g;
    f2.childLanes = a.childLanes & ~c;
    b.memoizedState = nj;
    return d;
  }
  f2 = a.child;
  a = f2.sibling;
  d = wh(f2, { mode: "visible", children: d.children });
  0 === (b.mode & 1) && (d.lanes = c);
  d.return = b;
  d.sibling = null;
  null !== a && (c = b.deletions, null === c ? (b.deletions = [a], b.flags |= 16) : c.push(a));
  b.child = d;
  b.memoizedState = null;
  return d;
}
function rj(a, b) {
  b = qj({ mode: "visible", children: b }, a.mode, 0, null);
  b.return = a;
  return a.child = b;
}
function tj(a, b, c, d) {
  null !== d && Jg(d);
  Bh(b, a.child, null, c);
  a = rj(b, b.pendingProps.children);
  a.flags |= 2;
  b.memoizedState = null;
  return a;
}
function sj(a, b, c, d, e, f2, g) {
  if (c) {
    if (b.flags & 256)
      return b.flags &= -257, d = Li(Error(p(422))), tj(a, b, g, d);
    if (null !== b.memoizedState)
      return b.child = a.child, b.flags |= 128, null;
    f2 = d.fallback;
    e = b.mode;
    d = qj({ mode: "visible", children: d.children }, e, 0, null);
    f2 = Ah(f2, e, g, null);
    f2.flags |= 2;
    d.return = b;
    f2.return = b;
    d.sibling = f2;
    b.child = d;
    0 !== (b.mode & 1) && Bh(b, a.child, null, g);
    b.child.memoizedState = oj(g);
    b.memoizedState = nj;
    return f2;
  }
  if (0 === (b.mode & 1))
    return tj(a, b, g, null);
  if ("$!" === e.data) {
    d = e.nextSibling && e.nextSibling.dataset;
    if (d)
      var h2 = d.dgst;
    d = h2;
    f2 = Error(p(419));
    d = Li(f2, d, void 0);
    return tj(a, b, g, d);
  }
  h2 = 0 !== (g & a.childLanes);
  if (Ug || h2) {
    d = R;
    if (null !== d) {
      switch (g & -g) {
        case 4:
          e = 2;
          break;
        case 16:
          e = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          e = 32;
          break;
        case 536870912:
          e = 268435456;
          break;
        default:
          e = 0;
      }
      e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e;
      0 !== e && e !== f2.retryLane && (f2.retryLane = e, Zg(a, e), mh(d, a, e, -1));
    }
    uj();
    d = Li(Error(p(421)));
    return tj(a, b, g, d);
  }
  if ("$?" === e.data)
    return b.flags |= 128, b.child = a.child, b = vj.bind(null, a), e._reactRetry = b, null;
  a = f2.treeContext;
  yg = Lf(e.nextSibling);
  xg = b;
  I = true;
  zg = null;
  null !== a && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a.id, sg = a.overflow, qg = b);
  b = rj(b, d.children);
  b.flags |= 4096;
  return b;
}
function wj(a, b, c) {
  a.lanes |= b;
  var d = a.alternate;
  null !== d && (d.lanes |= b);
  Sg(a.return, b, c);
}
function xj(a, b, c, d, e) {
  var f2 = a.memoizedState;
  null === f2 ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e } : (f2.isBackwards = b, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d, f2.tail = c, f2.tailMode = e);
}
function yj(a, b, c) {
  var d = b.pendingProps, e = d.revealOrder, f2 = d.tail;
  Yi(a, b, d.children, c);
  d = M.current;
  if (0 !== (d & 2))
    d = d & 1 | 2, b.flags |= 128;
  else {
    if (null !== a && 0 !== (a.flags & 128))
      a:
        for (a = b.child; null !== a; ) {
          if (13 === a.tag)
            null !== a.memoizedState && wj(a, c, b);
          else if (19 === a.tag)
            wj(a, c, b);
          else if (null !== a.child) {
            a.child.return = a;
            a = a.child;
            continue;
          }
          if (a === b)
            break a;
          for (; null === a.sibling; ) {
            if (null === a.return || a.return === b)
              break a;
            a = a.return;
          }
          a.sibling.return = a.return;
          a = a.sibling;
        }
    d &= 1;
  }
  G(M, d);
  if (0 === (b.mode & 1))
    b.memoizedState = null;
  else
    switch (e) {
      case "forwards":
        c = b.child;
        for (e = null; null !== c; )
          a = c.alternate, null !== a && null === Mh(a) && (e = c), c = c.sibling;
        c = e;
        null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
        xj(b, false, e, c, f2);
        break;
      case "backwards":
        c = null;
        e = b.child;
        for (b.child = null; null !== e; ) {
          a = e.alternate;
          if (null !== a && null === Mh(a)) {
            b.child = e;
            break;
          }
          a = e.sibling;
          e.sibling = c;
          c = e;
          e = a;
        }
        xj(b, true, c, null, f2);
        break;
      case "together":
        xj(b, false, null, null, void 0);
        break;
      default:
        b.memoizedState = null;
    }
  return b.child;
}
function jj(a, b) {
  0 === (b.mode & 1) && null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
}
function $i(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  hh |= b.lanes;
  if (0 === (c & b.childLanes))
    return null;
  if (null !== a && b.child !== a.child)
    throw Error(p(153));
  if (null !== b.child) {
    a = b.child;
    c = wh(a, a.pendingProps);
    b.child = c;
    for (c.return = b; null !== a.sibling; )
      a = a.sibling, c = c.sibling = wh(a, a.pendingProps), c.return = b;
    c.sibling = null;
  }
  return b.child;
}
function zj(a, b, c) {
  switch (b.tag) {
    case 3:
      lj(b);
      Ig();
      break;
    case 5:
      Kh(b);
      break;
    case 1:
      Zf(b.type) && cg(b);
      break;
    case 4:
      Ih(b, b.stateNode.containerInfo);
      break;
    case 10:
      var d = b.type._context, e = b.memoizedProps.value;
      G(Mg, d._currentValue);
      d._currentValue = e;
      break;
    case 13:
      d = b.memoizedState;
      if (null !== d) {
        if (null !== d.dehydrated)
          return G(M, M.current & 1), b.flags |= 128, null;
        if (0 !== (c & b.child.childLanes))
          return pj(a, b, c);
        G(M, M.current & 1);
        a = $i(a, b, c);
        return null !== a ? a.sibling : null;
      }
      G(M, M.current & 1);
      break;
    case 19:
      d = 0 !== (c & b.childLanes);
      if (0 !== (a.flags & 128)) {
        if (d)
          return yj(a, b, c);
        b.flags |= 128;
      }
      e = b.memoizedState;
      null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
      G(M, M.current);
      if (d)
        break;
      else
        return null;
    case 22:
    case 23:
      return b.lanes = 0, ej(a, b, c);
  }
  return $i(a, b, c);
}
var Aj, Bj, Cj, Dj;
Aj = function(a, b) {
  for (var c = b.child; null !== c; ) {
    if (5 === c.tag || 6 === c.tag)
      a.appendChild(c.stateNode);
    else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b)
      break;
    for (; null === c.sibling; ) {
      if (null === c.return || c.return === b)
        return;
      c = c.return;
    }
    c.sibling.return = c.return;
    c = c.sibling;
  }
};
Bj = function() {
};
Cj = function(a, b, c, d) {
  var e = a.memoizedProps;
  if (e !== d) {
    a = b.stateNode;
    Hh(Eh.current);
    var f2 = null;
    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f2 = [];
        break;
      case "select":
        e = A({}, e, { value: void 0 });
        d = A({}, d, { value: void 0 });
        f2 = [];
        break;
      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f2 = [];
        break;
      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = Bf);
    }
    ub(c, d);
    var g;
    c = null;
    for (l2 in e)
      if (!d.hasOwnProperty(l2) && e.hasOwnProperty(l2) && null != e[l2])
        if ("style" === l2) {
          var h2 = e[l2];
          for (g in h2)
            h2.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
        } else
          "dangerouslySetInnerHTML" !== l2 && "children" !== l2 && "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && "autoFocus" !== l2 && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
    for (l2 in d) {
      var k2 = d[l2];
      h2 = null != e ? e[l2] : void 0;
      if (d.hasOwnProperty(l2) && k2 !== h2 && (null != k2 || null != h2))
        if ("style" === l2)
          if (h2) {
            for (g in h2)
              !h2.hasOwnProperty(g) || k2 && k2.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
            for (g in k2)
              k2.hasOwnProperty(g) && h2[g] !== k2[g] && (c || (c = {}), c[g] = k2[g]);
          } else
            c || (f2 || (f2 = []), f2.push(
              l2,
              c
            )), c = k2;
        else
          "dangerouslySetInnerHTML" === l2 ? (k2 = k2 ? k2.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k2 && h2 !== k2 && (f2 = f2 || []).push(l2, k2)) : "children" === l2 ? "string" !== typeof k2 && "number" !== typeof k2 || (f2 = f2 || []).push(l2, "" + k2) : "suppressContentEditableWarning" !== l2 && "suppressHydrationWarning" !== l2 && (ea.hasOwnProperty(l2) ? (null != k2 && "onScroll" === l2 && D("scroll", a), f2 || h2 === k2 || (f2 = [])) : (f2 = f2 || []).push(l2, k2));
    }
    c && (f2 = f2 || []).push("style", c);
    var l2 = f2;
    if (b.updateQueue = l2)
      b.flags |= 4;
  }
};
Dj = function(a, b, c, d) {
  c !== d && (b.flags |= 4);
};
function Ej(a, b) {
  if (!I)
    switch (a.tailMode) {
      case "hidden":
        b = a.tail;
        for (var c = null; null !== b; )
          null !== b.alternate && (c = b), b = b.sibling;
        null === c ? a.tail = null : c.sibling = null;
        break;
      case "collapsed":
        c = a.tail;
        for (var d = null; null !== c; )
          null !== c.alternate && (d = c), c = c.sibling;
        null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
    }
}
function S(a) {
  var b = null !== a.alternate && a.alternate.child === a.child, c = 0, d = 0;
  if (b)
    for (var e = a.child; null !== e; )
      c |= e.lanes | e.childLanes, d |= e.subtreeFlags & 14680064, d |= e.flags & 14680064, e.return = a, e = e.sibling;
  else
    for (e = a.child; null !== e; )
      c |= e.lanes | e.childLanes, d |= e.subtreeFlags, d |= e.flags, e.return = a, e = e.sibling;
  a.subtreeFlags |= d;
  a.childLanes = c;
  return b;
}
function Fj(a, b, c) {
  var d = b.pendingProps;
  wg(b);
  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return S(b), null;
    case 1:
      return Zf(b.type) && $f(), S(b), null;
    case 3:
      d = b.stateNode;
      Jh();
      E(Wf);
      E(H);
      Oh();
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child)
        Gg(b) ? b.flags |= 4 : null === a || a.memoizedState.isDehydrated && 0 === (b.flags & 256) || (b.flags |= 1024, null !== zg && (Gj(zg), zg = null));
      Bj(a, b);
      S(b);
      return null;
    case 5:
      Lh(b);
      var e = Hh(Gh.current);
      c = b.type;
      if (null !== a && null != b.stateNode)
        Cj(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      else {
        if (!d) {
          if (null === b.stateNode)
            throw Error(p(166));
          S(b);
          return null;
        }
        a = Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.type;
          var f2 = b.memoizedProps;
          d[Of] = b;
          d[Pf] = f2;
          a = 0 !== (b.mode & 1);
          switch (c) {
            case "dialog":
              D("cancel", d);
              D("close", d);
              break;
            case "iframe":
            case "object":
            case "embed":
              D("load", d);
              break;
            case "video":
            case "audio":
              for (e = 0; e < lf.length; e++)
                D(lf[e], d);
              break;
            case "source":
              D("error", d);
              break;
            case "img":
            case "image":
            case "link":
              D(
                "error",
                d
              );
              D("load", d);
              break;
            case "details":
              D("toggle", d);
              break;
            case "input":
              Za(d, f2);
              D("invalid", d);
              break;
            case "select":
              d._wrapperState = { wasMultiple: !!f2.multiple };
              D("invalid", d);
              break;
            case "textarea":
              hb(d, f2), D("invalid", d);
          }
          ub(c, f2);
          e = null;
          for (var g in f2)
            if (f2.hasOwnProperty(g)) {
              var h2 = f2[g];
              "children" === g ? "string" === typeof h2 ? d.textContent !== h2 && (true !== f2.suppressHydrationWarning && Af(d.textContent, h2, a), e = ["children", h2]) : "number" === typeof h2 && d.textContent !== "" + h2 && (true !== f2.suppressHydrationWarning && Af(
                d.textContent,
                h2,
                a
              ), e = ["children", "" + h2]) : ea.hasOwnProperty(g) && null != h2 && "onScroll" === g && D("scroll", d);
            }
          switch (c) {
            case "input":
              Va(d);
              db(d, f2, true);
              break;
            case "textarea":
              Va(d);
              jb(d);
              break;
            case "select":
            case "option":
              break;
            default:
              "function" === typeof f2.onClick && (d.onclick = Bf);
          }
          d = e;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          "http://www.w3.org/1999/xhtml" === a && (a = kb(c));
          "http://www.w3.org/1999/xhtml" === a ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script><\/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, { is: d.is }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = true : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[Of] = b;
          a[Pf] = d;
          Aj(a, b, false, false);
          b.stateNode = a;
          a: {
            g = vb(c, d);
            switch (c) {
              case "dialog":
                D("cancel", a);
                D("close", a);
                e = d;
                break;
              case "iframe":
              case "object":
              case "embed":
                D("load", a);
                e = d;
                break;
              case "video":
              case "audio":
                for (e = 0; e < lf.length; e++)
                  D(lf[e], a);
                e = d;
                break;
              case "source":
                D("error", a);
                e = d;
                break;
              case "img":
              case "image":
              case "link":
                D(
                  "error",
                  a
                );
                D("load", a);
                e = d;
                break;
              case "details":
                D("toggle", a);
                e = d;
                break;
              case "input":
                Za(a, d);
                e = Ya(a, d);
                D("invalid", a);
                break;
              case "option":
                e = d;
                break;
              case "select":
                a._wrapperState = { wasMultiple: !!d.multiple };
                e = A({}, d, { value: void 0 });
                D("invalid", a);
                break;
              case "textarea":
                hb(a, d);
                e = gb(a, d);
                D("invalid", a);
                break;
              default:
                e = d;
            }
            ub(c, e);
            h2 = e;
            for (f2 in h2)
              if (h2.hasOwnProperty(f2)) {
                var k2 = h2[f2];
                "style" === f2 ? sb(a, k2) : "dangerouslySetInnerHTML" === f2 ? (k2 = k2 ? k2.__html : void 0, null != k2 && nb(a, k2)) : "children" === f2 ? "string" === typeof k2 ? ("textarea" !== c || "" !== k2) && ob(a, k2) : "number" === typeof k2 && ob(a, "" + k2) : "suppressContentEditableWarning" !== f2 && "suppressHydrationWarning" !== f2 && "autoFocus" !== f2 && (ea.hasOwnProperty(f2) ? null != k2 && "onScroll" === f2 && D("scroll", a) : null != k2 && ta(a, f2, k2, g));
              }
            switch (c) {
              case "input":
                Va(a);
                db(a, d, false);
                break;
              case "textarea":
                Va(a);
                jb(a);
                break;
              case "option":
                null != d.value && a.setAttribute("value", "" + Sa(d.value));
                break;
              case "select":
                a.multiple = !!d.multiple;
                f2 = d.value;
                null != f2 ? fb(a, !!d.multiple, f2, false) : null != d.defaultValue && fb(
                  a,
                  !!d.multiple,
                  d.defaultValue,
                  true
                );
                break;
              default:
                "function" === typeof e.onClick && (a.onclick = Bf);
            }
            switch (c) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                d = !!d.autoFocus;
                break a;
              case "img":
                d = true;
                break a;
              default:
                d = false;
            }
          }
          d && (b.flags |= 4);
        }
        null !== b.ref && (b.flags |= 512, b.flags |= 2097152);
      }
      S(b);
      return null;
    case 6:
      if (a && null != b.stateNode)
        Dj(a, b, a.memoizedProps, d);
      else {
        if ("string" !== typeof d && null === b.stateNode)
          throw Error(p(166));
        c = Hh(Gh.current);
        Hh(Eh.current);
        if (Gg(b)) {
          d = b.stateNode;
          c = b.memoizedProps;
          d[Of] = b;
          if (f2 = d.nodeValue !== c) {
            if (a = xg, null !== a)
              switch (a.tag) {
                case 3:
                  Af(d.nodeValue, c, 0 !== (a.mode & 1));
                  break;
                case 5:
                  true !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1));
              }
          }
          f2 && (b.flags |= 4);
        } else
          d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[Of] = b, b.stateNode = d;
      }
      S(b);
      return null;
    case 13:
      E(M);
      d = b.memoizedState;
      if (null === a || null !== a.memoizedState && null !== a.memoizedState.dehydrated) {
        if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128))
          Hg(), Ig(), b.flags |= 98560, f2 = false;
        else if (f2 = Gg(b), null !== d && null !== d.dehydrated) {
          if (null === a) {
            if (!f2)
              throw Error(p(318));
            f2 = b.memoizedState;
            f2 = null !== f2 ? f2.dehydrated : null;
            if (!f2)
              throw Error(p(317));
            f2[Of] = b;
          } else
            Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), b.flags |= 4;
          S(b);
          f2 = false;
        } else
          null !== zg && (Gj(zg), zg = null), f2 = true;
        if (!f2)
          return b.flags & 65536 ? b : null;
      }
      if (0 !== (b.flags & 128))
        return b.lanes = c, b;
      d = null !== d;
      d !== (null !== a && null !== a.memoizedState) && d && (b.child.flags |= 8192, 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()));
      null !== b.updateQueue && (b.flags |= 4);
      S(b);
      return null;
    case 4:
      return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null;
    case 10:
      return Rg(b.type._context), S(b), null;
    case 17:
      return Zf(b.type) && $f(), S(b), null;
    case 19:
      E(M);
      f2 = b.memoizedState;
      if (null === f2)
        return S(b), null;
      d = 0 !== (b.flags & 128);
      g = f2.rendering;
      if (null === g)
        if (d)
          Ej(f2, false);
        else {
          if (0 !== T || null !== a && 0 !== (a.flags & 128))
            for (a = b.child; null !== a; ) {
              g = Mh(a);
              if (null !== g) {
                b.flags |= 128;
                Ej(f2, false);
                d = g.updateQueue;
                null !== d && (b.updateQueue = d, b.flags |= 4);
                b.subtreeFlags = 0;
                d = c;
                for (c = b.child; null !== c; )
                  f2 = c, a = d, f2.flags &= 14680066, g = f2.alternate, null === g ? (f2.childLanes = 0, f2.lanes = a, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g.childLanes, f2.lanes = g.lanes, f2.child = g.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g.memoizedProps, f2.memoizedState = g.memoizedState, f2.updateQueue = g.updateQueue, f2.type = g.type, a = g.dependencies, f2.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext }), c = c.sibling;
                G(M, M.current & 1 | 2);
                return b.child;
              }
              a = a.sibling;
            }
          null !== f2.tail && B() > Hj && (b.flags |= 128, d = true, Ej(f2, false), b.lanes = 4194304);
        }
      else {
        if (!d)
          if (a = Mh(g), null !== a) {
            if (b.flags |= 128, d = true, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Ej(f2, true), null === f2.tail && "hidden" === f2.tailMode && !g.alternate && !I)
              return S(b), null;
          } else
            2 * B() - f2.renderingStartTime > Hj && 1073741824 !== c && (b.flags |= 128, d = true, Ej(f2, false), b.lanes = 4194304);
        f2.isBackwards ? (g.sibling = b.child, b.child = g) : (c = f2.last, null !== c ? c.sibling = g : b.child = g, f2.last = g);
      }
      if (null !== f2.tail)
        return b = f2.tail, f2.rendering = b, f2.tail = b.sibling, f2.renderingStartTime = B(), b.sibling = null, c = M.current, G(M, d ? c & 1 | 2 : c & 1), b;
      S(b);
      return null;
    case 22:
    case 23:
      return Ij(), d = null !== b.memoizedState, null !== a && null !== a.memoizedState !== d && (b.flags |= 8192), d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b), null;
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(p(156, b.tag));
}
function Jj(a, b) {
  wg(b);
  switch (b.tag) {
    case 1:
      return Zf(b.type) && $f(), a = b.flags, a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 3:
      return Jh(), E(Wf), E(H), Oh(), a = b.flags, 0 !== (a & 65536) && 0 === (a & 128) ? (b.flags = a & -65537 | 128, b) : null;
    case 5:
      return Lh(b), null;
    case 13:
      E(M);
      a = b.memoizedState;
      if (null !== a && null !== a.dehydrated) {
        if (null === b.alternate)
          throw Error(p(340));
        Ig();
      }
      a = b.flags;
      return a & 65536 ? (b.flags = a & -65537 | 128, b) : null;
    case 19:
      return E(M), null;
    case 4:
      return Jh(), null;
    case 10:
      return Rg(b.type._context), null;
    case 22:
    case 23:
      return Ij(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Kj = false, U = false, Lj = "function" === typeof WeakSet ? WeakSet : Set, V = null;
function Mj(a, b) {
  var c = a.ref;
  if (null !== c)
    if ("function" === typeof c)
      try {
        c(null);
      } catch (d) {
        W(a, b, d);
      }
    else
      c.current = null;
}
function Nj(a, b, c) {
  try {
    c();
  } catch (d) {
    W(a, b, d);
  }
}
var Oj = false;
function Pj(a, b) {
  Cf = dd;
  a = Me();
  if (Ne(a)) {
    if ("selectionStart" in a)
      var c = { start: a.selectionStart, end: a.selectionEnd };
    else
      a: {
        c = (c = a.ownerDocument) && c.defaultView || window;
        var d = c.getSelection && c.getSelection();
        if (d && 0 !== d.rangeCount) {
          c = d.anchorNode;
          var e = d.anchorOffset, f2 = d.focusNode;
          d = d.focusOffset;
          try {
            c.nodeType, f2.nodeType;
          } catch (F2) {
            c = null;
            break a;
          }
          var g = 0, h2 = -1, k2 = -1, l2 = 0, m2 = 0, q2 = a, r2 = null;
          b:
            for (; ; ) {
              for (var y2; ; ) {
                q2 !== c || 0 !== e && 3 !== q2.nodeType || (h2 = g + e);
                q2 !== f2 || 0 !== d && 3 !== q2.nodeType || (k2 = g + d);
                3 === q2.nodeType && (g += q2.nodeValue.length);
                if (null === (y2 = q2.firstChild))
                  break;
                r2 = q2;
                q2 = y2;
              }
              for (; ; ) {
                if (q2 === a)
                  break b;
                r2 === c && ++l2 === e && (h2 = g);
                r2 === f2 && ++m2 === d && (k2 = g);
                if (null !== (y2 = q2.nextSibling))
                  break;
                q2 = r2;
                r2 = q2.parentNode;
              }
              q2 = y2;
            }
          c = -1 === h2 || -1 === k2 ? null : { start: h2, end: k2 };
        } else
          c = null;
      }
    c = c || { start: 0, end: 0 };
  } else
    c = null;
  Df = { focusedElem: a, selectionRange: c };
  dd = false;
  for (V = b; null !== V; )
    if (b = V, a = b.child, 0 !== (b.subtreeFlags & 1028) && null !== a)
      a.return = b, V = a;
    else
      for (; null !== V; ) {
        b = V;
        try {
          var n2 = b.alternate;
          if (0 !== (b.flags & 1024))
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (null !== n2) {
                  var t2 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b.stateNode, w2 = x2.getSnapshotBeforeUpdate(b.elementType === b.type ? t2 : Lg(b.type, t2), J2);
                  x2.__reactInternalSnapshotBeforeUpdate = w2;
                }
                break;
              case 3:
                var u2 = b.stateNode.containerInfo;
                1 === u2.nodeType ? u2.textContent = "" : 9 === u2.nodeType && u2.documentElement && u2.removeChild(u2.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(p(163));
            }
        } catch (F2) {
          W(b, b.return, F2);
        }
        a = b.sibling;
        if (null !== a) {
          a.return = b.return;
          V = a;
          break;
        }
        V = b.return;
      }
  n2 = Oj;
  Oj = false;
  return n2;
}
function Qj(a, b, c) {
  var d = b.updateQueue;
  d = null !== d ? d.lastEffect : null;
  if (null !== d) {
    var e = d = d.next;
    do {
      if ((e.tag & a) === a) {
        var f2 = e.destroy;
        e.destroy = void 0;
        void 0 !== f2 && Nj(b, c, f2);
      }
      e = e.next;
    } while (e !== d);
  }
}
function Rj(a, b) {
  b = b.updateQueue;
  b = null !== b ? b.lastEffect : null;
  if (null !== b) {
    var c = b = b.next;
    do {
      if ((c.tag & a) === a) {
        var d = c.create;
        c.destroy = d();
      }
      c = c.next;
    } while (c !== b);
  }
}
function Sj(a) {
  var b = a.ref;
  if (null !== b) {
    var c = a.stateNode;
    switch (a.tag) {
      case 5:
        a = c;
        break;
      default:
        a = c;
    }
    "function" === typeof b ? b(a) : b.current = a;
  }
}
function Tj(a) {
  var b = a.alternate;
  null !== b && (a.alternate = null, Tj(b));
  a.child = null;
  a.deletions = null;
  a.sibling = null;
  5 === a.tag && (b = a.stateNode, null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]));
  a.stateNode = null;
  a.return = null;
  a.dependencies = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.stateNode = null;
  a.updateQueue = null;
}
function Uj(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function Vj(a) {
  a:
    for (; ; ) {
      for (; null === a.sibling; ) {
        if (null === a.return || Uj(a.return))
          return null;
        a = a.return;
      }
      a.sibling.return = a.return;
      for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
        if (a.flags & 2)
          continue a;
        if (null === a.child || 4 === a.tag)
          continue a;
        else
          a.child.return = a, a = a.child;
      }
      if (!(a.flags & 2))
        return a.stateNode;
    }
}
function Wj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = Bf));
  else if (4 !== d && (a = a.child, null !== a))
    for (Wj(a, b, c), a = a.sibling; null !== a; )
      Wj(a, b, c), a = a.sibling;
}
function Xj(a, b, c) {
  var d = a.tag;
  if (5 === d || 6 === d)
    a = a.stateNode, b ? c.insertBefore(a, b) : c.appendChild(a);
  else if (4 !== d && (a = a.child, null !== a))
    for (Xj(a, b, c), a = a.sibling; null !== a; )
      Xj(a, b, c), a = a.sibling;
}
var X = null, Yj = false;
function Zj(a, b, c) {
  for (c = c.child; null !== c; )
    ak(a, b, c), c = c.sibling;
}
function ak(a, b, c) {
  if (lc && "function" === typeof lc.onCommitFiberUnmount)
    try {
      lc.onCommitFiberUnmount(kc, c);
    } catch (h2) {
    }
  switch (c.tag) {
    case 5:
      U || Mj(c, b);
    case 6:
      var d = X, e = Yj;
      X = null;
      Zj(a, b, c);
      X = d;
      Yj = e;
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode));
      break;
    case 18:
      null !== X && (Yj ? (a = X, c = c.stateNode, 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode));
      break;
    case 4:
      d = X;
      e = Yj;
      X = c.stateNode.containerInfo;
      Yj = true;
      Zj(a, b, c);
      X = d;
      Yj = e;
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (!U && (d = c.updateQueue, null !== d && (d = d.lastEffect, null !== d))) {
        e = d = d.next;
        do {
          var f2 = e, g = f2.destroy;
          f2 = f2.tag;
          void 0 !== g && (0 !== (f2 & 2) ? Nj(c, b, g) : 0 !== (f2 & 4) && Nj(c, b, g));
          e = e.next;
        } while (e !== d);
      }
      Zj(a, b, c);
      break;
    case 1:
      if (!U && (Mj(c, b), d = c.stateNode, "function" === typeof d.componentWillUnmount))
        try {
          d.props = c.memoizedProps, d.state = c.memoizedState, d.componentWillUnmount();
        } catch (h2) {
          W(c, b, h2);
        }
      Zj(a, b, c);
      break;
    case 21:
      Zj(a, b, c);
      break;
    case 22:
      c.mode & 1 ? (U = (d = U) || null !== c.memoizedState, Zj(a, b, c), U = d) : Zj(a, b, c);
      break;
    default:
      Zj(a, b, c);
  }
}
function bk(a) {
  var b = a.updateQueue;
  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Lj());
    b.forEach(function(b2) {
      var d = ck.bind(null, a, b2);
      c.has(b2) || (c.add(b2), b2.then(d, d));
    });
  }
}
function dk(a, b) {
  var c = b.deletions;
  if (null !== c)
    for (var d = 0; d < c.length; d++) {
      var e = c[d];
      try {
        var f2 = a, g = b, h2 = g;
        a:
          for (; null !== h2; ) {
            switch (h2.tag) {
              case 5:
                X = h2.stateNode;
                Yj = false;
                break a;
              case 3:
                X = h2.stateNode.containerInfo;
                Yj = true;
                break a;
              case 4:
                X = h2.stateNode.containerInfo;
                Yj = true;
                break a;
            }
            h2 = h2.return;
          }
        if (null === X)
          throw Error(p(160));
        ak(f2, g, e);
        X = null;
        Yj = false;
        var k2 = e.alternate;
        null !== k2 && (k2.return = null);
        e.return = null;
      } catch (l2) {
        W(e, b, l2);
      }
    }
  if (b.subtreeFlags & 12854)
    for (b = b.child; null !== b; )
      ek(b, a), b = b.sibling;
}
function ek(a, b) {
  var c = a.alternate, d = a.flags;
  switch (a.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      dk(b, a);
      fk(a);
      if (d & 4) {
        try {
          Qj(3, a, a.return), Rj(3, a);
        } catch (t2) {
          W(a, a.return, t2);
        }
        try {
          Qj(5, a, a.return);
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 1:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      break;
    case 5:
      dk(b, a);
      fk(a);
      d & 512 && null !== c && Mj(c, c.return);
      if (a.flags & 32) {
        var e = a.stateNode;
        try {
          ob(e, "");
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      if (d & 4 && (e = a.stateNode, null != e)) {
        var f2 = a.memoizedProps, g = null !== c ? c.memoizedProps : f2, h2 = a.type, k2 = a.updateQueue;
        a.updateQueue = null;
        if (null !== k2)
          try {
            "input" === h2 && "radio" === f2.type && null != f2.name && ab(e, f2);
            vb(h2, g);
            var l2 = vb(h2, f2);
            for (g = 0; g < k2.length; g += 2) {
              var m2 = k2[g], q2 = k2[g + 1];
              "style" === m2 ? sb(e, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e, q2) : "children" === m2 ? ob(e, q2) : ta(e, m2, q2, l2);
            }
            switch (h2) {
              case "input":
                bb(e, f2);
                break;
              case "textarea":
                ib(e, f2);
                break;
              case "select":
                var r2 = e._wrapperState.wasMultiple;
                e._wrapperState.wasMultiple = !!f2.multiple;
                var y2 = f2.value;
                null != y2 ? fb(e, !!f2.multiple, y2, false) : r2 !== !!f2.multiple && (null != f2.defaultValue ? fb(
                  e,
                  !!f2.multiple,
                  f2.defaultValue,
                  true
                ) : fb(e, !!f2.multiple, f2.multiple ? [] : "", false));
            }
            e[Pf] = f2;
          } catch (t2) {
            W(a, a.return, t2);
          }
      }
      break;
    case 6:
      dk(b, a);
      fk(a);
      if (d & 4) {
        if (null === a.stateNode)
          throw Error(p(162));
        e = a.stateNode;
        f2 = a.memoizedProps;
        try {
          e.nodeValue = f2;
        } catch (t2) {
          W(a, a.return, t2);
        }
      }
      break;
    case 3:
      dk(b, a);
      fk(a);
      if (d & 4 && null !== c && c.memoizedState.isDehydrated)
        try {
          bd(b.containerInfo);
        } catch (t2) {
          W(a, a.return, t2);
        }
      break;
    case 4:
      dk(b, a);
      fk(a);
      break;
    case 13:
      dk(b, a);
      fk(a);
      e = a.child;
      e.flags & 8192 && (f2 = null !== e.memoizedState, e.stateNode.isHidden = f2, !f2 || null !== e.alternate && null !== e.alternate.memoizedState || (gk = B()));
      d & 4 && bk(a);
      break;
    case 22:
      m2 = null !== c && null !== c.memoizedState;
      a.mode & 1 ? (U = (l2 = U) || m2, dk(b, a), U = l2) : dk(b, a);
      fk(a);
      if (d & 8192) {
        l2 = null !== a.memoizedState;
        if ((a.stateNode.isHidden = l2) && !m2 && 0 !== (a.mode & 1))
          for (V = a, m2 = a.child; null !== m2; ) {
            for (q2 = V = m2; null !== V; ) {
              r2 = V;
              y2 = r2.child;
              switch (r2.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Qj(4, r2, r2.return);
                  break;
                case 1:
                  Mj(r2, r2.return);
                  var n2 = r2.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d = r2;
                    c = r2.return;
                    try {
                      b = d, n2.props = b.memoizedProps, n2.state = b.memoizedState, n2.componentWillUnmount();
                    } catch (t2) {
                      W(d, c, t2);
                    }
                  }
                  break;
                case 5:
                  Mj(r2, r2.return);
                  break;
                case 22:
                  if (null !== r2.memoizedState) {
                    hk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r2, V = y2) : hk(q2);
            }
            m2 = m2.sibling;
          }
        a:
          for (m2 = null, q2 = a; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e = q2.stateNode, l2 ? (f2 = e.style, "function" === typeof f2.setProperty ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h2 = q2.stateNode, k2 = q2.memoizedProps.style, g = void 0 !== k2 && null !== k2 && k2.hasOwnProperty("display") ? k2.display : null, h2.style.display = rb("display", g));
                } catch (t2) {
                  W(a, a.return, t2);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2)
                try {
                  q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                } catch (t2) {
                  W(a, a.return, t2);
                }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a)
              break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a)
                break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
      }
      break;
    case 19:
      dk(b, a);
      fk(a);
      d & 4 && bk(a);
      break;
    case 21:
      break;
    default:
      dk(
        b,
        a
      ), fk(a);
  }
}
function fk(a) {
  var b = a.flags;
  if (b & 2) {
    try {
      a: {
        for (var c = a.return; null !== c; ) {
          if (Uj(c)) {
            var d = c;
            break a;
          }
          c = c.return;
        }
        throw Error(p(160));
      }
      switch (d.tag) {
        case 5:
          var e = d.stateNode;
          d.flags & 32 && (ob(e, ""), d.flags &= -33);
          var f2 = Vj(a);
          Xj(a, f2, e);
          break;
        case 3:
        case 4:
          var g = d.stateNode.containerInfo, h2 = Vj(a);
          Wj(a, h2, g);
          break;
        default:
          throw Error(p(161));
      }
    } catch (k2) {
      W(a, a.return, k2);
    }
    a.flags &= -3;
  }
  b & 4096 && (a.flags &= -4097);
}
function ik(a, b, c) {
  V = a;
  jk(a);
}
function jk(a, b, c) {
  for (var d = 0 !== (a.mode & 1); null !== V; ) {
    var e = V, f2 = e.child;
    if (22 === e.tag && d) {
      var g = null !== e.memoizedState || Kj;
      if (!g) {
        var h2 = e.alternate, k2 = null !== h2 && null !== h2.memoizedState || U;
        h2 = Kj;
        var l2 = U;
        Kj = g;
        if ((U = k2) && !l2)
          for (V = e; null !== V; )
            g = V, k2 = g.child, 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k2 ? (k2.return = g, V = k2) : kk(e);
        for (; null !== f2; )
          V = f2, jk(f2), f2 = f2.sibling;
        V = e;
        Kj = h2;
        U = l2;
      }
      lk(a);
    } else
      0 !== (e.subtreeFlags & 8772) && null !== f2 ? (f2.return = e, V = f2) : lk(a);
  }
}
function lk(a) {
  for (; null !== V; ) {
    var b = V;
    if (0 !== (b.flags & 8772)) {
      var c = b.alternate;
      try {
        if (0 !== (b.flags & 8772))
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
              U || Rj(5, b);
              break;
            case 1:
              var d = b.stateNode;
              if (b.flags & 4 && !U)
                if (null === c)
                  d.componentDidMount();
                else {
                  var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps);
                  d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate);
                }
              var f2 = b.updateQueue;
              null !== f2 && ih(b, f2, d);
              break;
            case 3:
              var g = b.updateQueue;
              if (null !== g) {
                c = null;
                if (null !== b.child)
                  switch (b.child.tag) {
                    case 5:
                      c = b.child.stateNode;
                      break;
                    case 1:
                      c = b.child.stateNode;
                  }
                ih(b, g, c);
              }
              break;
            case 5:
              var h2 = b.stateNode;
              if (null === c && b.flags & 4) {
                c = h2;
                var k2 = b.memoizedProps;
                switch (b.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k2.autoFocus && c.focus();
                    break;
                  case "img":
                    k2.src && (c.src = k2.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b.memoizedState) {
                var l2 = b.alternate;
                if (null !== l2) {
                  var m2 = l2.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p(163));
          }
        U || b.flags & 512 && Sj(b);
      } catch (r2) {
        W(b, b.return, r2);
      }
    }
    if (b === a) {
      V = null;
      break;
    }
    c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function hk(a) {
  for (; null !== V; ) {
    var b = V;
    if (b === a) {
      V = null;
      break;
    }
    var c = b.sibling;
    if (null !== c) {
      c.return = b.return;
      V = c;
      break;
    }
    V = b.return;
  }
}
function kk(a) {
  for (; null !== V; ) {
    var b = V;
    try {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
          var c = b.return;
          try {
            Rj(4, b);
          } catch (k2) {
            W(b, c, k2);
          }
          break;
        case 1:
          var d = b.stateNode;
          if ("function" === typeof d.componentDidMount) {
            var e = b.return;
            try {
              d.componentDidMount();
            } catch (k2) {
              W(b, e, k2);
            }
          }
          var f2 = b.return;
          try {
            Sj(b);
          } catch (k2) {
            W(b, f2, k2);
          }
          break;
        case 5:
          var g = b.return;
          try {
            Sj(b);
          } catch (k2) {
            W(b, g, k2);
          }
      }
    } catch (k2) {
      W(b, b.return, k2);
    }
    if (b === a) {
      V = null;
      break;
    }
    var h2 = b.sibling;
    if (null !== h2) {
      h2.return = b.return;
      V = h2;
      break;
    }
    V = b.return;
  }
}
var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K = 0, R = null, Y = null, Z = 0, gj = 0, fj = Uf(0), T = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = Infinity, vk = null, Pi = false, Qi = null, Si = null, wk = false, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
function L() {
  return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : Bk = B();
}
function lh(a) {
  if (0 === (a.mode & 1))
    return 1;
  if (0 !== (K & 2) && 0 !== Z)
    return Z & -Z;
  if (null !== Kg.transition)
    return 0 === Ck && (Ck = yc()), Ck;
  a = C;
  if (0 !== a)
    return a;
  a = window.event;
  a = void 0 === a ? 16 : jd(a.type);
  return a;
}
function mh(a, b, c, d) {
  if (50 < zk)
    throw zk = 0, Ak = null, Error(p(185));
  Ac(a, c, d);
  if (0 === (K & 2) || a !== R)
    a === R && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && (Hj = B() + 500, fg && jg());
}
function Ek(a, b) {
  var c = a.callbackNode;
  wc(a, b);
  var d = uc(a, a === R ? Z : 0);
  if (0 === d)
    null !== c && bc(c), a.callbackNode = null, a.callbackPriority = 0;
  else if (b = d & -d, a.callbackPriority !== b) {
    null != c && bc(c);
    if (1 === b)
      0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)), Jf(function() {
        0 === (K & 6) && jg();
      }), c = null;
    else {
      switch (Dc(d)) {
        case 1:
          c = fc;
          break;
        case 4:
          c = gc;
          break;
        case 16:
          c = hc;
          break;
        case 536870912:
          c = jc;
          break;
        default:
          c = hc;
      }
      c = Gk(c, Hk.bind(null, a));
    }
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}
function Hk(a, b) {
  Bk = -1;
  Ck = 0;
  if (0 !== (K & 6))
    throw Error(p(327));
  var c = a.callbackNode;
  if (Ik() && a.callbackNode !== c)
    return null;
  var d = uc(a, a === R ? Z : 0);
  if (0 === d)
    return null;
  if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b)
    b = Jk(a, d);
  else {
    b = d;
    var e = K;
    K |= 2;
    var f2 = Kk();
    if (R !== a || Z !== b)
      vk = null, Hj = B() + 500, Lk(a, b);
    do
      try {
        Mk();
        break;
      } catch (h2) {
        Nk(a, h2);
      }
    while (1);
    Qg();
    nk.current = f2;
    K = e;
    null !== Y ? b = 0 : (R = null, Z = 0, b = T);
  }
  if (0 !== b) {
    2 === b && (e = xc(a), 0 !== e && (d = e, b = Ok(a, e)));
    if (1 === b)
      throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
    if (6 === b)
      Dk(a, d);
    else {
      e = a.current.alternate;
      if (0 === (d & 30) && !Pk(e) && (b = Jk(a, d), 2 === b && (f2 = xc(a), 0 !== f2 && (d = f2, b = Ok(a, f2))), 1 === b))
        throw c = qk, Lk(a, 0), Dk(a, d), Ek(a, B()), c;
      a.finishedWork = e;
      a.finishedLanes = d;
      switch (b) {
        case 0:
        case 1:
          throw Error(p(345));
        case 2:
          Qk(a, uk, vk);
          break;
        case 3:
          Dk(a, d);
          if ((d & 130023424) === d && (b = gk + 500 - B(), 10 < b)) {
            if (0 !== uc(a, 0))
              break;
            e = a.suspendedLanes;
            if ((e & d) !== d) {
              L();
              a.pingedLanes |= a.suspendedLanes & e;
              break;
            }
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 4:
          Dk(a, d);
          if ((d & 4194240) === d)
            break;
          b = a.eventTimes;
          for (e = -1; 0 < d; ) {
            var g = 31 - oc(d);
            f2 = 1 << g;
            g = b[g];
            g > e && (e = g);
            d &= ~f2;
          }
          d = e;
          d = B() - d;
          d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d;
          if (10 < d) {
            a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d);
            break;
          }
          Qk(a, uk, vk);
          break;
        case 5:
          Qk(a, uk, vk);
          break;
        default:
          throw Error(p(329));
      }
    }
  }
  Ek(a, B());
  return a.callbackNode === c ? Hk.bind(null, a) : null;
}
function Ok(a, b) {
  var c = tk;
  a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256);
  a = Jk(a, b);
  2 !== a && (b = uk, uk = c, null !== b && Gj(b));
  return a;
}
function Gj(a) {
  null === uk ? uk = a : uk.push.apply(uk, a);
}
function Pk(a) {
  for (var b = a; ; ) {
    if (b.flags & 16384) {
      var c = b.updateQueue;
      if (null !== c && (c = c.stores, null !== c))
        for (var d = 0; d < c.length; d++) {
          var e = c[d], f2 = e.getSnapshot;
          e = e.value;
          try {
            if (!He(f2(), e))
              return false;
          } catch (g) {
            return false;
          }
        }
    }
    c = b.child;
    if (b.subtreeFlags & 16384 && null !== c)
      c.return = b, b = c;
    else {
      if (b === a)
        break;
      for (; null === b.sibling; ) {
        if (null === b.return || b.return === a)
          return true;
        b = b.return;
      }
      b.sibling.return = b.return;
      b = b.sibling;
    }
  }
  return true;
}
function Dk(a, b) {
  b &= ~sk;
  b &= ~rk;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;
  for (a = a.expirationTimes; 0 < b; ) {
    var c = 31 - oc(b), d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}
function Fk(a) {
  if (0 !== (K & 6))
    throw Error(p(327));
  Ik();
  var b = uc(a, 0);
  if (0 === (b & 1))
    return Ek(a, B()), null;
  var c = Jk(a, b);
  if (0 !== a.tag && 2 === c) {
    var d = xc(a);
    0 !== d && (b = d, c = Ok(a, d));
  }
  if (1 === c)
    throw c = qk, Lk(a, 0), Dk(a, b), Ek(a, B()), c;
  if (6 === c)
    throw Error(p(345));
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Qk(a, uk, vk);
  Ek(a, B());
  return null;
}
function Rk(a, b) {
  var c = K;
  K |= 1;
  try {
    return a(b);
  } finally {
    K = c, 0 === K && (Hj = B() + 500, fg && jg());
  }
}
function Sk(a) {
  null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik();
  var b = K;
  K |= 1;
  var c = pk.transition, d = C;
  try {
    if (pk.transition = null, C = 1, a)
      return a();
  } finally {
    C = d, pk.transition = c, K = b, 0 === (K & 6) && jg();
  }
}
function Ij() {
  gj = fj.current;
  E(fj);
}
function Lk(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, Gf(c));
  if (null !== Y)
    for (c = Y.return; null !== c; ) {
      var d = c;
      wg(d);
      switch (d.tag) {
        case 1:
          d = d.type.childContextTypes;
          null !== d && void 0 !== d && $f();
          break;
        case 3:
          Jh();
          E(Wf);
          E(H);
          Oh();
          break;
        case 5:
          Lh(d);
          break;
        case 4:
          Jh();
          break;
        case 13:
          E(M);
          break;
        case 19:
          E(M);
          break;
        case 10:
          Rg(d.type._context);
          break;
        case 22:
        case 23:
          Ij();
      }
      c = c.return;
    }
  R = a;
  Y = a = wh(a.current, null);
  Z = gj = b;
  T = 0;
  qk = null;
  sk = rk = hh = 0;
  uk = tk = null;
  if (null !== Wg) {
    for (b = 0; b < Wg.length; b++)
      if (c = Wg[b], d = c.interleaved, null !== d) {
        c.interleaved = null;
        var e = d.next, f2 = c.pending;
        if (null !== f2) {
          var g = f2.next;
          f2.next = e;
          d.next = g;
        }
        c.pending = d;
      }
    Wg = null;
  }
  return a;
}
function Nk(a, b) {
  do {
    var c = Y;
    try {
      Qg();
      Ph.current = ai;
      if (Sh) {
        for (var d = N.memoizedState; null !== d; ) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }
        Sh = false;
      }
      Rh = 0;
      P = O = N = null;
      Th = false;
      Uh = 0;
      ok.current = null;
      if (null === c || null === c.return) {
        T = 1;
        qk = b;
        Y = null;
        break;
      }
      a: {
        var f2 = a, g = c.return, h2 = c, k2 = b;
        b = Z;
        h2.flags |= 32768;
        if (null !== k2 && "object" === typeof k2 && "function" === typeof k2.then) {
          var l2 = k2, m2 = h2, q2 = m2.tag;
          if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
            var r2 = m2.alternate;
            r2 ? (m2.updateQueue = r2.updateQueue, m2.memoizedState = r2.memoizedState, m2.lanes = r2.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
          }
          var y2 = Vi(g);
          if (null !== y2) {
            y2.flags &= -257;
            Wi(y2, g, h2, f2, b);
            y2.mode & 1 && Ti(f2, l2, b);
            b = y2;
            k2 = l2;
            var n2 = b.updateQueue;
            if (null === n2) {
              var t2 = /* @__PURE__ */ new Set();
              t2.add(k2);
              b.updateQueue = t2;
            } else
              n2.add(k2);
            break a;
          } else {
            if (0 === (b & 1)) {
              Ti(f2, l2, b);
              uj();
              break a;
            }
            k2 = Error(p(426));
          }
        } else if (I && h2.mode & 1) {
          var J2 = Vi(g);
          if (null !== J2) {
            0 === (J2.flags & 65536) && (J2.flags |= 256);
            Wi(J2, g, h2, f2, b);
            Jg(Ki(k2, h2));
            break a;
          }
        }
        f2 = k2 = Ki(k2, h2);
        4 !== T && (T = 2);
        null === tk ? tk = [f2] : tk.push(f2);
        f2 = g;
        do {
          switch (f2.tag) {
            case 3:
              f2.flags |= 65536;
              b &= -b;
              f2.lanes |= b;
              var x2 = Oi(f2, k2, b);
              fh(f2, x2);
              break a;
            case 1:
              h2 = k2;
              var w2 = f2.type, u2 = f2.stateNode;
              if (0 === (f2.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u2 && "function" === typeof u2.componentDidCatch && (null === Si || !Si.has(u2)))) {
                f2.flags |= 65536;
                b &= -b;
                f2.lanes |= b;
                var F2 = Ri(f2, h2, b);
                fh(f2, F2);
                break a;
              }
          }
          f2 = f2.return;
        } while (null !== f2);
      }
      Tk(c);
    } catch (na) {
      b = na;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }
    break;
  } while (1);
}
function Kk() {
  var a = nk.current;
  nk.current = ai;
  return null === a ? ai : a;
}
function uj() {
  if (0 === T || 3 === T || 2 === T)
    T = 4;
  null === R || 0 === (hh & 268435455) && 0 === (rk & 268435455) || Dk(R, Z);
}
function Jk(a, b) {
  var c = K;
  K |= 2;
  var d = Kk();
  if (R !== a || Z !== b)
    vk = null, Lk(a, b);
  do
    try {
      Uk();
      break;
    } catch (e) {
      Nk(a, e);
    }
  while (1);
  Qg();
  K = c;
  nk.current = d;
  if (null !== Y)
    throw Error(p(261));
  R = null;
  Z = 0;
  return T;
}
function Uk() {
  for (; null !== Y; )
    Vk(Y);
}
function Mk() {
  for (; null !== Y && !cc(); )
    Vk(Y);
}
function Vk(a) {
  var b = Wk(a.alternate, a, gj);
  a.memoizedProps = a.pendingProps;
  null === b ? Tk(a) : Y = b;
  ok.current = null;
}
function Tk(a) {
  var b = a;
  do {
    var c = b.alternate;
    a = b.return;
    if (0 === (b.flags & 32768)) {
      if (c = Fj(c, b, gj), null !== c) {
        Y = c;
        return;
      }
    } else {
      c = Jj(c, b);
      if (null !== c) {
        c.flags &= 32767;
        Y = c;
        return;
      }
      if (null !== a)
        a.flags |= 32768, a.subtreeFlags = 0, a.deletions = null;
      else {
        T = 6;
        Y = null;
        return;
      }
    }
    b = b.sibling;
    if (null !== b) {
      Y = b;
      return;
    }
    Y = b = a;
  } while (null !== b);
  0 === T && (T = 5);
}
function Qk(a, b, c) {
  var d = C, e = pk.transition;
  try {
    pk.transition = null, C = 1, Xk(a, b, c, d);
  } finally {
    pk.transition = e, C = d;
  }
  return null;
}
function Xk(a, b, c, d) {
  do
    Ik();
  while (null !== xk);
  if (0 !== (K & 6))
    throw Error(p(327));
  c = a.finishedWork;
  var e = a.finishedLanes;
  if (null === c)
    return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current)
    throw Error(p(177));
  a.callbackNode = null;
  a.callbackPriority = 0;
  var f2 = c.lanes | c.childLanes;
  Bc(a, f2);
  a === R && (Y = R = null, Z = 0);
  0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064) || wk || (wk = true, Gk(hc, function() {
    Ik();
    return null;
  }));
  f2 = 0 !== (c.flags & 15990);
  if (0 !== (c.subtreeFlags & 15990) || f2) {
    f2 = pk.transition;
    pk.transition = null;
    var g = C;
    C = 1;
    var h2 = K;
    K |= 4;
    ok.current = null;
    Pj(a, c);
    ek(c, a);
    Oe(Df);
    dd = !!Cf;
    Df = Cf = null;
    a.current = c;
    ik(c);
    dc();
    K = h2;
    C = g;
    pk.transition = f2;
  } else
    a.current = c;
  wk && (wk = false, xk = a, yk = e);
  f2 = a.pendingLanes;
  0 === f2 && (Si = null);
  mc(c.stateNode);
  Ek(a, B());
  if (null !== b)
    for (d = a.onRecoverableError, c = 0; c < b.length; c++)
      e = b[c], d(e.value, { componentStack: e.stack, digest: e.digest });
  if (Pi)
    throw Pi = false, a = Qi, Qi = null, a;
  0 !== (yk & 1) && 0 !== a.tag && Ik();
  f2 = a.pendingLanes;
  0 !== (f2 & 1) ? a === Ak ? zk++ : (zk = 0, Ak = a) : zk = 0;
  jg();
  return null;
}
function Ik() {
  if (null !== xk) {
    var a = Dc(yk), b = pk.transition, c = C;
    try {
      pk.transition = null;
      C = 16 > a ? 16 : a;
      if (null === xk)
        var d = false;
      else {
        a = xk;
        xk = null;
        yk = 0;
        if (0 !== (K & 6))
          throw Error(p(331));
        var e = K;
        K |= 4;
        for (V = a.current; null !== V; ) {
          var f2 = V, g = f2.child;
          if (0 !== (V.flags & 16)) {
            var h2 = f2.deletions;
            if (null !== h2) {
              for (var k2 = 0; k2 < h2.length; k2++) {
                var l2 = h2[k2];
                for (V = l2; null !== V; ) {
                  var m2 = V;
                  switch (m2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(8, m2, f2);
                  }
                  var q2 = m2.child;
                  if (null !== q2)
                    q2.return = m2, V = q2;
                  else
                    for (; null !== V; ) {
                      m2 = V;
                      var r2 = m2.sibling, y2 = m2.return;
                      Tj(m2);
                      if (m2 === l2) {
                        V = null;
                        break;
                      }
                      if (null !== r2) {
                        r2.return = y2;
                        V = r2;
                        break;
                      }
                      V = y2;
                    }
                }
              }
              var n2 = f2.alternate;
              if (null !== n2) {
                var t2 = n2.child;
                if (null !== t2) {
                  n2.child = null;
                  do {
                    var J2 = t2.sibling;
                    t2.sibling = null;
                    t2 = J2;
                  } while (null !== t2);
                }
              }
              V = f2;
            }
          }
          if (0 !== (f2.subtreeFlags & 2064) && null !== g)
            g.return = f2, V = g;
          else
            b:
              for (; null !== V; ) {
                f2 = V;
                if (0 !== (f2.flags & 2048))
                  switch (f2.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f2, f2.return);
                  }
                var x2 = f2.sibling;
                if (null !== x2) {
                  x2.return = f2.return;
                  V = x2;
                  break b;
                }
                V = f2.return;
              }
        }
        var w2 = a.current;
        for (V = w2; null !== V; ) {
          g = V;
          var u2 = g.child;
          if (0 !== (g.subtreeFlags & 2064) && null !== u2)
            u2.return = g, V = u2;
          else
            b:
              for (g = w2; null !== V; ) {
                h2 = V;
                if (0 !== (h2.flags & 2048))
                  try {
                    switch (h2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h2);
                    }
                  } catch (na) {
                    W(h2, h2.return, na);
                  }
                if (h2 === g) {
                  V = null;
                  break b;
                }
                var F2 = h2.sibling;
                if (null !== F2) {
                  F2.return = h2.return;
                  V = F2;
                  break b;
                }
                V = h2.return;
              }
        }
        K = e;
        jg();
        if (lc && "function" === typeof lc.onPostCommitFiberRoot)
          try {
            lc.onPostCommitFiberRoot(kc, a);
          } catch (na) {
          }
        d = true;
      }
      return d;
    } finally {
      C = c, pk.transition = b;
    }
  }
  return false;
}
function Yk(a, b, c) {
  b = Ki(c, b);
  b = Oi(a, b, 1);
  a = dh(a, b, 1);
  b = L();
  null !== a && (Ac(a, 1, b), Ek(a, b));
}
function W(a, b, c) {
  if (3 === a.tag)
    Yk(a, a, c);
  else
    for (; null !== b; ) {
      if (3 === b.tag) {
        Yk(b, a, c);
        break;
      } else if (1 === b.tag) {
        var d = b.stateNode;
        if ("function" === typeof b.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Si || !Si.has(d))) {
          a = Ki(c, a);
          a = Ri(b, a, 1);
          b = dh(b, a, 1);
          a = L();
          null !== b && (Ac(b, 1, a), Ek(b, a));
          break;
        }
      }
      b = b.return;
    }
}
function Ui(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = L();
  a.pingedLanes |= a.suspendedLanes & c;
  R === a && (Z & c) === c && (4 === T || 3 === T && (Z & 130023424) === Z && 500 > B() - gk ? Lk(a, 0) : sk |= c);
  Ek(a, b);
}
function Zk(a, b) {
  0 === b && (0 === (a.mode & 1) ? b = 1 : (b = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
  var c = L();
  a = Zg(a, b);
  null !== a && (Ac(a, b, c), Ek(a, c));
}
function vj(a) {
  var b = a.memoizedState, c = 0;
  null !== b && (c = b.retryLane);
  Zk(a, c);
}
function ck(a, b) {
  var c = 0;
  switch (a.tag) {
    case 13:
      var d = a.stateNode;
      var e = a.memoizedState;
      null !== e && (c = e.retryLane);
      break;
    case 19:
      d = a.stateNode;
      break;
    default:
      throw Error(p(314));
  }
  null !== d && d.delete(b);
  Zk(a, c);
}
var Wk;
Wk = function(a, b, c) {
  if (null !== a)
    if (a.memoizedProps !== b.pendingProps || Wf.current)
      Ug = true;
    else {
      if (0 === (a.lanes & c) && 0 === (b.flags & 128))
        return Ug = false, zj(a, b, c);
      Ug = 0 !== (a.flags & 131072) ? true : false;
    }
  else
    Ug = false, I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index);
  b.lanes = 0;
  switch (b.tag) {
    case 2:
      var d = b.type;
      jj(a, b);
      a = b.pendingProps;
      var e = Yf(b, H.current);
      Tg(b, c);
      e = Xh(null, b, d, a, e, c);
      var f2 = bi();
      b.flags |= 1;
      "object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof ? (b.tag = 1, b.memoizedState = null, b.updateQueue = null, Zf(d) ? (f2 = true, cg(b)) : f2 = false, b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null, ah(b), e.updater = nh, b.stateNode = e, e._reactInternals = b, rh(b, d, a, c), b = kj(null, b, d, true, f2, c)) : (b.tag = 0, I && f2 && vg(b), Yi(null, b, e, c), b = b.child);
      return b;
    case 16:
      d = b.elementType;
      a: {
        jj(a, b);
        a = b.pendingProps;
        e = d._init;
        d = e(d._payload);
        b.type = d;
        e = b.tag = $k(d);
        a = Lg(d, a);
        switch (e) {
          case 0:
            b = dj(null, b, d, a, c);
            break a;
          case 1:
            b = ij(null, b, d, a, c);
            break a;
          case 11:
            b = Zi(null, b, d, a, c);
            break a;
          case 14:
            b = aj(null, b, d, Lg(d.type, a), c);
            break a;
        }
        throw Error(p(
          306,
          d,
          ""
        ));
      }
      return b;
    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), dj(a, b, d, e, c);
    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), ij(a, b, d, e, c);
    case 3:
      a: {
        lj(b);
        if (null === a)
          throw Error(p(387));
        d = b.pendingProps;
        f2 = b.memoizedState;
        e = f2.element;
        bh(a, b);
        gh(b, d, null, c);
        var g = b.memoizedState;
        d = g.element;
        if (f2.isDehydrated)
          if (f2 = { element: d, isDehydrated: false, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }, b.updateQueue.baseState = f2, b.memoizedState = f2, b.flags & 256) {
            e = Ki(Error(p(423)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else if (d !== e) {
            e = Ki(Error(p(424)), b);
            b = mj(a, b, d, c, e);
            break a;
          } else
            for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = true, zg = null, c = Ch(b, null, d, c), b.child = c; c; )
              c.flags = c.flags & -3 | 4096, c = c.sibling;
        else {
          Ig();
          if (d === e) {
            b = $i(a, b, c);
            break a;
          }
          Yi(a, b, d, c);
        }
        b = b.child;
      }
      return b;
    case 5:
      return Kh(b), null === a && Eg(b), d = b.type, e = b.pendingProps, f2 = null !== a ? a.memoizedProps : null, g = e.children, Ef(d, e) ? g = null : null !== f2 && Ef(d, f2) && (b.flags |= 32), hj(a, b), Yi(a, b, g, c), b.child;
    case 6:
      return null === a && Eg(b), null;
    case 13:
      return pj(a, b, c);
    case 4:
      return Ih(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Bh(b, null, d, c) : Yi(a, b, d, c), b.child;
    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), Zi(a, b, d, e, c);
    case 7:
      return Yi(a, b, b.pendingProps, c), b.child;
    case 8:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 12:
      return Yi(a, b, b.pendingProps.children, c), b.child;
    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        f2 = b.memoizedProps;
        g = e.value;
        G(Mg, d._currentValue);
        d._currentValue = g;
        if (null !== f2)
          if (He(f2.value, g)) {
            if (f2.children === e.children && !Wf.current) {
              b = $i(a, b, c);
              break a;
            }
          } else
            for (f2 = b.child, null !== f2 && (f2.return = b); null !== f2; ) {
              var h2 = f2.dependencies;
              if (null !== h2) {
                g = f2.child;
                for (var k2 = h2.firstContext; null !== k2; ) {
                  if (k2.context === d) {
                    if (1 === f2.tag) {
                      k2 = ch(-1, c & -c);
                      k2.tag = 2;
                      var l2 = f2.updateQueue;
                      if (null !== l2) {
                        l2 = l2.shared;
                        var m2 = l2.pending;
                        null === m2 ? k2.next = k2 : (k2.next = m2.next, m2.next = k2);
                        l2.pending = k2;
                      }
                    }
                    f2.lanes |= c;
                    k2 = f2.alternate;
                    null !== k2 && (k2.lanes |= c);
                    Sg(
                      f2.return,
                      c,
                      b
                    );
                    h2.lanes |= c;
                    break;
                  }
                  k2 = k2.next;
                }
              } else if (10 === f2.tag)
                g = f2.type === b.type ? null : f2.child;
              else if (18 === f2.tag) {
                g = f2.return;
                if (null === g)
                  throw Error(p(341));
                g.lanes |= c;
                h2 = g.alternate;
                null !== h2 && (h2.lanes |= c);
                Sg(g, c, b);
                g = f2.sibling;
              } else
                g = f2.child;
              if (null !== g)
                g.return = f2;
              else
                for (g = f2; null !== g; ) {
                  if (g === b) {
                    g = null;
                    break;
                  }
                  f2 = g.sibling;
                  if (null !== f2) {
                    f2.return = g.return;
                    g = f2;
                    break;
                  }
                  g = g.return;
                }
              f2 = g;
            }
        Yi(a, b, e.children, c);
        b = b.child;
      }
      return b;
    case 9:
      return e = b.type, d = b.pendingProps.children, Tg(b, c), e = Vg(e), d = d(e), b.flags |= 1, Yi(a, b, d, c), b.child;
    case 14:
      return d = b.type, e = Lg(d, b.pendingProps), e = Lg(d.type, e), aj(a, b, d, e, c);
    case 15:
      return cj(a, b, b.type, b.pendingProps, c);
    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : Lg(d, e), jj(a, b), b.tag = 1, Zf(d) ? (a = true, cg(b)) : a = false, Tg(b, c), ph(b, d, e), rh(b, d, e, c), kj(null, b, d, true, a, c);
    case 19:
      return yj(a, b, c);
    case 22:
      return ej(a, b, c);
  }
  throw Error(p(156, b.tag));
};
function Gk(a, b) {
  return ac(a, b);
}
function al(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.subtreeFlags = this.flags = 0;
  this.deletions = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}
function Bg(a, b, c, d) {
  return new al(a, b, c, d);
}
function bj(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}
function $k(a) {
  if ("function" === typeof a)
    return bj(a) ? 1 : 0;
  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Da)
      return 11;
    if (a === Ga)
      return 14;
  }
  return 2;
}
function wh(a, b) {
  var c = a.alternate;
  null === c ? (c = Bg(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.subtreeFlags = 0, c.deletions = null);
  c.flags = a.flags & 14680064;
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}
function yh(a, b, c, d, e, f2) {
  var g = 2;
  d = a;
  if ("function" === typeof a)
    bj(a) && (g = 1);
  else if ("string" === typeof a)
    g = 5;
  else
    a:
      switch (a) {
        case ya:
          return Ah(c.children, e, f2, b);
        case za:
          g = 8;
          e |= 8;
          break;
        case Aa:
          return a = Bg(12, c, b, e | 2), a.elementType = Aa, a.lanes = f2, a;
        case Ea:
          return a = Bg(13, c, b, e), a.elementType = Ea, a.lanes = f2, a;
        case Fa:
          return a = Bg(19, c, b, e), a.elementType = Fa, a.lanes = f2, a;
        case Ia:
          return qj(c, e, f2, b);
        default:
          if ("object" === typeof a && null !== a)
            switch (a.$$typeof) {
              case Ba:
                g = 10;
                break a;
              case Ca:
                g = 9;
                break a;
              case Da:
                g = 11;
                break a;
              case Ga:
                g = 14;
                break a;
              case Ha:
                g = 16;
                d = null;
                break a;
            }
          throw Error(p(130, null == a ? a : typeof a, ""));
      }
  b = Bg(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f2;
  return b;
}
function Ah(a, b, c, d) {
  a = Bg(7, a, d, b);
  a.lanes = c;
  return a;
}
function qj(a, b, c, d) {
  a = Bg(22, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  a.stateNode = { isHidden: false };
  return a;
}
function xh(a, b, c) {
  a = Bg(6, a, null, b);
  a.lanes = c;
  return a;
}
function zh(a, b, c) {
  b = Bg(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
  return b;
}
function bl(a, b, c, d, e) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.callbackNode = this.pendingContext = this.context = null;
  this.callbackPriority = 0;
  this.eventTimes = zc(0);
  this.expirationTimes = zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = zc(0);
  this.identifierPrefix = d;
  this.onRecoverableError = e;
  this.mutableSourceEagerHydrationData = null;
}
function cl(a, b, c, d, e, f2, g, h2, k2) {
  a = new bl(a, b, c, h2, k2);
  1 === b ? (b = 1, true === f2 && (b |= 8)) : b = 0;
  f2 = Bg(3, null, null, b);
  a.current = f2;
  f2.stateNode = a;
  f2.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null };
  ah(f2);
  return a;
}
function dl(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return { $$typeof: wa, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
}
function el(a) {
  if (!a)
    return Vf;
  a = a._reactInternals;
  a: {
    if (Vb(a) !== a || 1 !== a.tag)
      throw Error(p(170));
    var b = a;
    do {
      switch (b.tag) {
        case 3:
          b = b.stateNode.context;
          break a;
        case 1:
          if (Zf(b.type)) {
            b = b.stateNode.__reactInternalMemoizedMergedChildContext;
            break a;
          }
      }
      b = b.return;
    } while (null !== b);
    throw Error(p(171));
  }
  if (1 === a.tag) {
    var c = a.type;
    if (Zf(c))
      return bg(a, c, b);
  }
  return b;
}
function fl(a, b, c, d, e, f2, g, h2, k2) {
  a = cl(c, d, true, a, e, f2, g, h2, k2);
  a.context = el(null);
  c = a.current;
  d = L();
  e = lh(c);
  f2 = ch(d, e);
  f2.callback = void 0 !== b && null !== b ? b : null;
  dh(c, f2, e);
  a.current.lanes = e;
  Ac(a, e, d);
  Ek(a, d);
  return a;
}
function gl(a, b, c, d) {
  var e = b.current, f2 = L(), g = lh(e);
  c = el(c);
  null === b.context ? b.context = c : b.pendingContext = c;
  b = ch(f2, g);
  b.payload = { element: a };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  a = dh(e, b, g);
  null !== a && (mh(a, e, g, f2), eh(a, e, g));
  return g;
}
function hl(a) {
  a = a.current;
  if (!a.child)
    return null;
  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;
    default:
      return a.child.stateNode;
  }
}
function il(a, b) {
  a = a.memoizedState;
  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}
function jl(a, b) {
  il(a, b);
  (a = a.alternate) && il(a, b);
}
function kl() {
  return null;
}
var ll = "function" === typeof reportError ? reportError : function(a) {
  console.error(a);
};
function ml(a) {
  this._internalRoot = a;
}
nl.prototype.render = ml.prototype.render = function(a) {
  var b = this._internalRoot;
  if (null === b)
    throw Error(p(409));
  gl(a, b, null, null);
};
nl.prototype.unmount = ml.prototype.unmount = function() {
  var a = this._internalRoot;
  if (null !== a) {
    this._internalRoot = null;
    var b = a.containerInfo;
    Sk(function() {
      gl(null, a, null, null);
    });
    b[uf] = null;
  }
};
function nl(a) {
  this._internalRoot = a;
}
nl.prototype.unstable_scheduleHydration = function(a) {
  if (a) {
    var b = Hc();
    a = { blockedOn: null, target: a, priority: b };
    for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++)
      ;
    Qc.splice(c, 0, a);
    0 === c && Vc(a);
  }
};
function ol(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType);
}
function pl(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function ql() {
}
function rl(a, b, c, d, e) {
  if (e) {
    if ("function" === typeof d) {
      var f2 = d;
      d = function() {
        var a2 = hl(g);
        f2.call(a2);
      };
    }
    var g = fl(b, d, a, 0, null, false, false, "", ql);
    a._reactRootContainer = g;
    a[uf] = g.current;
    sf(8 === a.nodeType ? a.parentNode : a);
    Sk();
    return g;
  }
  for (; e = a.lastChild; )
    a.removeChild(e);
  if ("function" === typeof d) {
    var h2 = d;
    d = function() {
      var a2 = hl(k2);
      h2.call(a2);
    };
  }
  var k2 = cl(a, 0, false, null, null, false, false, "", ql);
  a._reactRootContainer = k2;
  a[uf] = k2.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  Sk(function() {
    gl(b, k2, c, d);
  });
  return k2;
}
function sl(a, b, c, d, e) {
  var f2 = c._reactRootContainer;
  if (f2) {
    var g = f2;
    if ("function" === typeof e) {
      var h2 = e;
      e = function() {
        var a2 = hl(g);
        h2.call(a2);
      };
    }
    gl(b, g, a, e);
  } else
    g = rl(c, b, a, e, d);
  return hl(g);
}
Ec = function(a) {
  switch (a.tag) {
    case 3:
      var b = a.stateNode;
      if (b.current.memoizedState.isDehydrated) {
        var c = tc(b.pendingLanes);
        0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && (Hj = B() + 500, jg()));
      }
      break;
    case 13:
      Sk(function() {
        var b2 = Zg(a, 1);
        if (null !== b2) {
          var c2 = L();
          mh(b2, a, 1, c2);
        }
      }), jl(a, 1);
  }
};
Fc = function(a) {
  if (13 === a.tag) {
    var b = Zg(a, 134217728);
    if (null !== b) {
      var c = L();
      mh(b, a, 134217728, c);
    }
    jl(a, 134217728);
  }
};
Gc = function(a) {
  if (13 === a.tag) {
    var b = lh(a), c = Zg(a, b);
    if (null !== c) {
      var d = L();
      mh(c, a, b, d);
    }
    jl(a, b);
  }
};
Hc = function() {
  return C;
};
Ic = function(a, b) {
  var c = C;
  try {
    return C = a, b();
  } finally {
    C = c;
  }
};
yb = function(a, b, c) {
  switch (b) {
    case "input":
      bb(a, c);
      b = c.name;
      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode; )
          c = c.parentNode;
        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
        for (b = 0; b < c.length; b++) {
          var d = c[b];
          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e)
              throw Error(p(90));
            Wa(d);
            bb(d, e);
          }
        }
      }
      break;
    case "textarea":
      ib(a, c);
      break;
    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, false);
  }
};
Gb = Rk;
Hb = Sk;
var tl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" };
var vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a) {
  a = Zb(a);
  return null === a ? null : a.stateNode;
}, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!wl.isDisabled && wl.supportsFiber)
    try {
      kc = wl.inject(vl), lc = wl;
    } catch (a) {
    }
}
reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
reactDom_production_min.createPortal = function(a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!ol(b))
    throw Error(p(200));
  return dl(a, b, null, c);
};
reactDom_production_min.createRoot = function(a, b) {
  if (!ol(a))
    throw Error(p(299));
  var c = false, d = "", e = ll;
  null !== b && void 0 !== b && (true === b.unstable_strictMode && (c = true), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError));
  b = cl(a, 1, false, null, null, c, false, d, e);
  a[uf] = b.current;
  sf(8 === a.nodeType ? a.parentNode : a);
  return new ml(b);
};
reactDom_production_min.findDOMNode = function(a) {
  if (null == a)
    return null;
  if (1 === a.nodeType)
    return a;
  var b = a._reactInternals;
  if (void 0 === b) {
    if ("function" === typeof a.render)
      throw Error(p(188));
    a = Object.keys(a).join(",");
    throw Error(p(268, a));
  }
  a = Zb(b);
  a = null === a ? null : a.stateNode;
  return a;
};
reactDom_production_min.flushSync = function(a) {
  return Sk(a);
};
reactDom_production_min.hydrate = function(a, b, c) {
  if (!pl(b))
    throw Error(p(200));
  return sl(null, a, b, true, c);
};
reactDom_production_min.hydrateRoot = function(a, b, c) {
  if (!ol(a))
    throw Error(p(405));
  var d = null != c && c.hydratedSources || null, e = false, f2 = "", g = ll;
  null !== c && void 0 !== c && (true === c.unstable_strictMode && (e = true), void 0 !== c.identifierPrefix && (f2 = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError));
  b = fl(b, null, a, 1, null != c ? c : null, e, false, f2, g);
  a[uf] = b.current;
  sf(a);
  if (d)
    for (a = 0; a < d.length; a++)
      c = d[a], e = c._getVersion, e = e(c._source), null == b.mutableSourceEagerHydrationData ? b.mutableSourceEagerHydrationData = [c, e] : b.mutableSourceEagerHydrationData.push(
        c,
        e
      );
  return new nl(b);
};
reactDom_production_min.render = function(a, b, c) {
  if (!pl(b))
    throw Error(p(200));
  return sl(null, a, b, false, c);
};
reactDom_production_min.unmountComponentAtNode = function(a) {
  if (!pl(a))
    throw Error(p(40));
  return a._reactRootContainer ? (Sk(function() {
    sl(null, null, a, false, function() {
      a._reactRootContainer = null;
      a[uf] = null;
    });
  }), true) : false;
};
reactDom_production_min.unstable_batchedUpdates = Rk;
reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a, b, c, d) {
  if (!pl(c))
    throw Error(p(200));
  if (null == a || void 0 === a._reactInternals)
    throw Error(p(38));
  return sl(a, b, c, false, d);
};
reactDom_production_min.version = "18.2.0-next-9e3b772b8-20220608";
(function(module2) {
  function checkDCE() {
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
      return;
    }
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
    } catch (err) {
      console.error(err);
    }
  }
  {
    checkDCE();
    module2.exports = reactDom_production_min;
  }
})(reactDom);
var m = reactDomExports;
{
  client.createRoot = m.createRoot;
  client.hydrateRoot = m.hydrateRoot;
}
const Header$1 = "";
const logo = "/assets/Logo-96d5c999.jpg";
function Header() {
  const [showMenu, setShowMenu] = reactExports.useState(false);
  const [activeOption, setActiveOption] = reactExports.useState("OPcion1");
  const toggleMenu = () => {
    setShowMenu(!showMenu);
  };
  const handleOptionClick = (option) => {
    setActiveOption(option);
  };
  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsxs("nav", { children: [
    /* @__PURE__ */ jsx("header", { children: /* @__PURE__ */ jsxs("div", { className: "navbar", children: [
      /* @__PURE__ */ jsx("a", { href: "", className: "logo", children: /* @__PURE__ */ jsx("img", { src: logo, draggable: "false", onMouseDown: (e) => e.preventDefault(), alt: "Logo" }) }),
      /* @__PURE__ */ jsx("div", { className: "nav-links", children: /* @__PURE__ */ jsxs("ul", { children: [
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://www.facebook.com/ibpuertadelcielo", target: "_blank", className: activeOption === "option1" ? "active" : "", onClick: () => handleOptionClick("option1"), children: "Siguenos" }) }),
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://chat.whatsapp.com/ImgZBsoO6WDGvn4UeaS5eP", target: "_blank", className: activeOption === "option2" ? "active" : "", onClick: () => handleOptionClick("option2"), children: "Grupo de whatsapp" }) }),
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://rules-jovenes-ipdc.netlify.app", target: "_blank", className: activeOption === "option3" ? "active" : "", onClick: () => handleOptionClick("option3"), children: "Reglas" }) })
      ] }) }),
      /* @__PURE__ */ jsx("div", { className: "toggle", onClick: toggleMenu })
    ] }) }),
    showMenu && /* @__PURE__ */ jsxs("div", { className: "mobile-menu", children: [
      /* @__PURE__ */ jsx("div", { className: "nav-links-mobile", children: /* @__PURE__ */ jsxs("ul", { children: [
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://www.facebook.com/ibpuertadelcielo", target: "_blank", className: activeOption === "option1" ? "active" : "", onClick: () => handleOptionClick("option1"), children: "Siguenos" }) }),
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://chat.whatsapp.com/ImgZBsoO6WDGvn4UeaS5eP", target: "_blank", className: activeOption === "option2" ? "active" : "", onClick: () => handleOptionClick("option2"), children: "Grupo de whatsapp" }) }),
        /* @__PURE__ */ jsx("li", { children: /* @__PURE__ */ jsx("a", { href: "https://rules-jovenes-ipdc.netlify.app", target: "_blank", className: activeOption === "option3" ? "active" : "", onClick: () => handleOptionClick("option3"), children: "Reglas " }) })
      ] }) }),
      /* @__PURE__ */ jsx("div", { className: "toggle togglePst", onClick: toggleMenu })
    ] })
  ] }) });
}
const Container$1 = "";
var lottieExports = {};
var lottie$1 = {
  get exports() {
    return lottieExports;
  },
  set exports(v2) {
    lottieExports = v2;
  }
};
(function(module, exports) {
  typeof navigator !== "undefined" && function(global2, factory) {
    module.exports = factory();
  }(commonjsGlobal, function() {
    var svgNS = "http://www.w3.org/2000/svg";
    var locationHref = "";
    var _useWebWorker = false;
    var initialDefaultFrame = -999999;
    var setWebWorker = function setWebWorker2(flag) {
      _useWebWorker = !!flag;
    };
    var getWebWorker = function getWebWorker2() {
      return _useWebWorker;
    };
    var setLocationHref = function setLocationHref2(value2) {
      locationHref = value2;
    };
    var getLocationHref = function getLocationHref2() {
      return locationHref;
    };
    function createTag(type) {
      return document.createElement(type);
    }
    function extendPrototype(sources, destination) {
      var i;
      var len = sources.length;
      var sourcePrototype;
      for (i = 0; i < len; i += 1) {
        sourcePrototype = sources[i].prototype;
        for (var attr in sourcePrototype) {
          if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr))
            destination.prototype[attr] = sourcePrototype[attr];
        }
      }
    }
    function getDescriptor(object, prop) {
      return Object.getOwnPropertyDescriptor(object, prop);
    }
    function createProxyFunction(prototype) {
      function ProxyFunction() {
      }
      ProxyFunction.prototype = prototype;
      return ProxyFunction;
    }
    var audioControllerFactory = function() {
      function AudioController(audioFactory) {
        this.audios = [];
        this.audioFactory = audioFactory;
        this._volume = 1;
        this._isMuted = false;
      }
      AudioController.prototype = {
        addAudio: function addAudio(audio) {
          this.audios.push(audio);
        },
        pause: function pause() {
          var i;
          var len = this.audios.length;
          for (i = 0; i < len; i += 1) {
            this.audios[i].pause();
          }
        },
        resume: function resume() {
          var i;
          var len = this.audios.length;
          for (i = 0; i < len; i += 1) {
            this.audios[i].resume();
          }
        },
        setRate: function setRate(rateValue) {
          var i;
          var len = this.audios.length;
          for (i = 0; i < len; i += 1) {
            this.audios[i].setRate(rateValue);
          }
        },
        createAudio: function createAudio(assetPath) {
          if (this.audioFactory) {
            return this.audioFactory(assetPath);
          }
          if (window.Howl) {
            return new window.Howl({
              src: [assetPath]
            });
          }
          return {
            isPlaying: false,
            play: function play() {
              this.isPlaying = true;
            },
            seek: function seek() {
              this.isPlaying = false;
            },
            playing: function playing() {
            },
            rate: function rate() {
            },
            setVolume: function setVolume() {
            }
          };
        },
        setAudioFactory: function setAudioFactory(audioFactory) {
          this.audioFactory = audioFactory;
        },
        setVolume: function setVolume(value2) {
          this._volume = value2;
          this._updateVolume();
        },
        mute: function mute() {
          this._isMuted = true;
          this._updateVolume();
        },
        unmute: function unmute() {
          this._isMuted = false;
          this._updateVolume();
        },
        getVolume: function getVolume() {
          return this._volume;
        },
        _updateVolume: function _updateVolume() {
          var i;
          var len = this.audios.length;
          for (i = 0; i < len; i += 1) {
            this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));
          }
        }
      };
      return function() {
        return new AudioController();
      };
    }();
    var createTypedArray = function() {
      function createRegularArray(type, len) {
        var i = 0;
        var arr = [];
        var value2;
        switch (type) {
          case "int16":
          case "uint8c":
            value2 = 1;
            break;
          default:
            value2 = 1.1;
            break;
        }
        for (i = 0; i < len; i += 1) {
          arr.push(value2);
        }
        return arr;
      }
      function createTypedArrayFactory(type, len) {
        if (type === "float32") {
          return new Float32Array(len);
        }
        if (type === "int16") {
          return new Int16Array(len);
        }
        if (type === "uint8c") {
          return new Uint8ClampedArray(len);
        }
        return createRegularArray(type, len);
      }
      if (typeof Uint8ClampedArray === "function" && typeof Float32Array === "function") {
        return createTypedArrayFactory;
      }
      return createRegularArray;
    }();
    function createSizedArray(len) {
      return Array.apply(null, {
        length: len
      });
    }
    function _typeof$6(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$6 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$6 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$6(obj);
    }
    var subframeEnabled = true;
    var expressionsPlugin = null;
    var expressionsInterfaces = null;
    var idPrefix$1 = "";
    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    var bmPow = Math.pow;
    var bmSqrt = Math.sqrt;
    var bmFloor = Math.floor;
    var bmMax = Math.max;
    var bmMin = Math.min;
    var BMMath = {};
    (function() {
      var propertyNames = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"];
      var i;
      var len = propertyNames.length;
      for (i = 0; i < len; i += 1) {
        BMMath[propertyNames[i]] = Math[propertyNames[i]];
      }
    })();
    BMMath.random = Math.random;
    BMMath.abs = function(val2) {
      var tOfVal = _typeof$6(val2);
      if (tOfVal === "object" && val2.length) {
        var absArr = createSizedArray(val2.length);
        var i;
        var len = val2.length;
        for (i = 0; i < len; i += 1) {
          absArr[i] = Math.abs(val2[i]);
        }
        return absArr;
      }
      return Math.abs(val2);
    };
    var defaultCurveSegments = 150;
    var degToRads = Math.PI / 180;
    var roundCorner = 0.5519;
    function styleDiv(element) {
      element.style.position = "absolute";
      element.style.top = 0;
      element.style.left = 0;
      element.style.display = "block";
      element.style.transformOrigin = "0 0";
      element.style.webkitTransformOrigin = "0 0";
      element.style.backfaceVisibility = "visible";
      element.style.webkitBackfaceVisibility = "visible";
      element.style.transformStyle = "preserve-3d";
      element.style.webkitTransformStyle = "preserve-3d";
      element.style.mozTransformStyle = "preserve-3d";
    }
    function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {
      this.type = type;
      this.currentTime = currentTime;
      this.totalTime = totalTime;
      this.direction = frameMultiplier < 0 ? -1 : 1;
    }
    function BMCompleteEvent(type, frameMultiplier) {
      this.type = type;
      this.direction = frameMultiplier < 0 ? -1 : 1;
    }
    function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {
      this.type = type;
      this.currentLoop = currentLoop;
      this.totalLoops = totalLoops;
      this.direction = frameMultiplier < 0 ? -1 : 1;
    }
    function BMSegmentStartEvent(type, firstFrame, totalFrames) {
      this.type = type;
      this.firstFrame = firstFrame;
      this.totalFrames = totalFrames;
    }
    function BMDestroyEvent(type, target) {
      this.type = type;
      this.target = target;
    }
    function BMRenderFrameErrorEvent(nativeError, currentTime) {
      this.type = "renderFrameError";
      this.nativeError = nativeError;
      this.currentTime = currentTime;
    }
    function BMConfigErrorEvent(nativeError) {
      this.type = "configError";
      this.nativeError = nativeError;
    }
    var createElementID = function() {
      var _count = 0;
      return function createID() {
        _count += 1;
        return idPrefix$1 + "__lottie_element_" + _count;
      };
    }();
    function HSVtoRGB(h2, s, v2) {
      var r2;
      var g;
      var b;
      var i;
      var f2;
      var p2;
      var q2;
      var t2;
      i = Math.floor(h2 * 6);
      f2 = h2 * 6 - i;
      p2 = v2 * (1 - s);
      q2 = v2 * (1 - f2 * s);
      t2 = v2 * (1 - (1 - f2) * s);
      switch (i % 6) {
        case 0:
          r2 = v2;
          g = t2;
          b = p2;
          break;
        case 1:
          r2 = q2;
          g = v2;
          b = p2;
          break;
        case 2:
          r2 = p2;
          g = v2;
          b = t2;
          break;
        case 3:
          r2 = p2;
          g = q2;
          b = v2;
          break;
        case 4:
          r2 = t2;
          g = p2;
          b = v2;
          break;
        case 5:
          r2 = v2;
          g = p2;
          b = q2;
          break;
      }
      return [r2, g, b];
    }
    function RGBtoHSV(r2, g, b) {
      var max = Math.max(r2, g, b);
      var min = Math.min(r2, g, b);
      var d = max - min;
      var h2;
      var s = max === 0 ? 0 : d / max;
      var v2 = max / 255;
      switch (max) {
        case min:
          h2 = 0;
          break;
        case r2:
          h2 = g - b + d * (g < b ? 6 : 0);
          h2 /= 6 * d;
          break;
        case g:
          h2 = b - r2 + d * 2;
          h2 /= 6 * d;
          break;
        case b:
          h2 = r2 - g + d * 4;
          h2 /= 6 * d;
          break;
      }
      return [h2, s, v2];
    }
    function addSaturationToRGB(color, offset) {
      var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
      hsv[1] += offset;
      if (hsv[1] > 1) {
        hsv[1] = 1;
      } else if (hsv[1] <= 0) {
        hsv[1] = 0;
      }
      return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }
    function addBrightnessToRGB(color, offset) {
      var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
      hsv[2] += offset;
      if (hsv[2] > 1) {
        hsv[2] = 1;
      } else if (hsv[2] < 0) {
        hsv[2] = 0;
      }
      return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }
    function addHueToRGB(color, offset) {
      var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);
      hsv[0] += offset / 360;
      if (hsv[0] > 1) {
        hsv[0] -= 1;
      } else if (hsv[0] < 0) {
        hsv[0] += 1;
      }
      return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
    }
    var rgbToHex = function() {
      var colorMap = [];
      var i;
      var hex;
      for (i = 0; i < 256; i += 1) {
        hex = i.toString(16);
        colorMap[i] = hex.length === 1 ? "0" + hex : hex;
      }
      return function(r2, g, b) {
        if (r2 < 0) {
          r2 = 0;
        }
        if (g < 0) {
          g = 0;
        }
        if (b < 0) {
          b = 0;
        }
        return "#" + colorMap[r2] + colorMap[g] + colorMap[b];
      };
    }();
    var setSubframeEnabled = function setSubframeEnabled2(flag) {
      subframeEnabled = !!flag;
    };
    var getSubframeEnabled = function getSubframeEnabled2() {
      return subframeEnabled;
    };
    var setExpressionsPlugin = function setExpressionsPlugin2(value2) {
      expressionsPlugin = value2;
    };
    var getExpressionsPlugin = function getExpressionsPlugin2() {
      return expressionsPlugin;
    };
    var setExpressionInterfaces = function setExpressionInterfaces2(value2) {
      expressionsInterfaces = value2;
    };
    var getExpressionInterfaces = function getExpressionInterfaces2() {
      return expressionsInterfaces;
    };
    var setDefaultCurveSegments = function setDefaultCurveSegments2(value2) {
      defaultCurveSegments = value2;
    };
    var getDefaultCurveSegments = function getDefaultCurveSegments2() {
      return defaultCurveSegments;
    };
    var setIdPrefix = function setIdPrefix2(value2) {
      idPrefix$1 = value2;
    };
    function createNS(type) {
      return document.createElementNS(svgNS, type);
    }
    function _typeof$5(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$5 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$5 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$5(obj);
    }
    var dataManager = function() {
      var _counterId = 1;
      var processes = [];
      var workerFn;
      var workerInstance;
      var workerProxy = {
        onmessage: function onmessage() {
        },
        postMessage: function postMessage(path) {
          workerFn({
            data: path
          });
        }
      };
      var _workerSelf = {
        postMessage: function postMessage(data2) {
          workerProxy.onmessage({
            data: data2
          });
        }
      };
      function createWorker(fn) {
        if (window.Worker && window.Blob && getWebWorker()) {
          var blob = new Blob(["var _workerSelf = self; self.onmessage = ", fn.toString()], {
            type: "text/javascript"
          });
          var url = URL.createObjectURL(blob);
          return new Worker(url);
        }
        workerFn = fn;
        return workerProxy;
      }
      function setupWorker() {
        if (!workerInstance) {
          workerInstance = createWorker(function workerStart(e) {
            function dataFunctionManager() {
              function completeLayers(layers2, comps) {
                var layerData;
                var i;
                var len = layers2.length;
                var j;
                var jLen;
                var k2;
                var kLen;
                for (i = 0; i < len; i += 1) {
                  layerData = layers2[i];
                  if ("ks" in layerData && !layerData.completed) {
                    layerData.completed = true;
                    if (layerData.hasMask) {
                      var maskProps = layerData.masksProperties;
                      jLen = maskProps.length;
                      for (j = 0; j < jLen; j += 1) {
                        if (maskProps[j].pt.k.i) {
                          convertPathsToAbsoluteValues(maskProps[j].pt.k);
                        } else {
                          kLen = maskProps[j].pt.k.length;
                          for (k2 = 0; k2 < kLen; k2 += 1) {
                            if (maskProps[j].pt.k[k2].s) {
                              convertPathsToAbsoluteValues(maskProps[j].pt.k[k2].s[0]);
                            }
                            if (maskProps[j].pt.k[k2].e) {
                              convertPathsToAbsoluteValues(maskProps[j].pt.k[k2].e[0]);
                            }
                          }
                        }
                      }
                    }
                    if (layerData.ty === 0) {
                      layerData.layers = findCompLayers(layerData.refId, comps);
                      completeLayers(layerData.layers, comps);
                    } else if (layerData.ty === 4) {
                      completeShapes(layerData.shapes);
                    } else if (layerData.ty === 5) {
                      completeText(layerData);
                    }
                  }
                }
              }
              function completeChars(chars, assets2) {
                if (chars) {
                  var i = 0;
                  var len = chars.length;
                  for (i = 0; i < len; i += 1) {
                    if (chars[i].t === 1) {
                      chars[i].data.layers = findCompLayers(chars[i].data.refId, assets2);
                      completeLayers(chars[i].data.layers, assets2);
                    }
                  }
                }
              }
              function findComp(id2, comps) {
                var i = 0;
                var len = comps.length;
                while (i < len) {
                  if (comps[i].id === id2) {
                    return comps[i];
                  }
                  i += 1;
                }
                return null;
              }
              function findCompLayers(id2, comps) {
                var comp2 = findComp(id2, comps);
                if (comp2) {
                  if (!comp2.layers.__used) {
                    comp2.layers.__used = true;
                    return comp2.layers;
                  }
                  return JSON.parse(JSON.stringify(comp2.layers));
                }
                return null;
              }
              function completeShapes(arr) {
                var i;
                var len = arr.length;
                var j;
                var jLen;
                for (i = len - 1; i >= 0; i -= 1) {
                  if (arr[i].ty === "sh") {
                    if (arr[i].ks.k.i) {
                      convertPathsToAbsoluteValues(arr[i].ks.k);
                    } else {
                      jLen = arr[i].ks.k.length;
                      for (j = 0; j < jLen; j += 1) {
                        if (arr[i].ks.k[j].s) {
                          convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                        }
                        if (arr[i].ks.k[j].e) {
                          convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                        }
                      }
                    }
                  } else if (arr[i].ty === "gr") {
                    completeShapes(arr[i].it);
                  }
                }
              }
              function convertPathsToAbsoluteValues(path) {
                var i;
                var len = path.i.length;
                for (i = 0; i < len; i += 1) {
                  path.i[i][0] += path.v[i][0];
                  path.i[i][1] += path.v[i][1];
                  path.o[i][0] += path.v[i][0];
                  path.o[i][1] += path.v[i][1];
                }
              }
              function checkVersion(minimum, animVersionString) {
                var animVersion = animVersionString ? animVersionString.split(".") : [100, 100, 100];
                if (minimum[0] > animVersion[0]) {
                  return true;
                }
                if (animVersion[0] > minimum[0]) {
                  return false;
                }
                if (minimum[1] > animVersion[1]) {
                  return true;
                }
                if (animVersion[1] > minimum[1]) {
                  return false;
                }
                if (minimum[2] > animVersion[2]) {
                  return true;
                }
                if (animVersion[2] > minimum[2]) {
                  return false;
                }
                return null;
              }
              var checkText = function() {
                var minimumVersion = [4, 4, 14];
                function updateTextLayer(textLayer) {
                  var documentData = textLayer.t.d;
                  textLayer.t.d = {
                    k: [{
                      s: documentData,
                      t: 0
                    }]
                  };
                }
                function iterateLayers(layers2) {
                  var i;
                  var len = layers2.length;
                  for (i = 0; i < len; i += 1) {
                    if (layers2[i].ty === 5) {
                      updateTextLayer(layers2[i]);
                    }
                  }
                }
                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i;
                      var len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              }();
              var checkChars = function() {
                var minimumVersion = [4, 7, 99];
                return function(animationData) {
                  if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {
                    var i;
                    var len = animationData.chars.length;
                    for (i = 0; i < len; i += 1) {
                      var charData = animationData.chars[i];
                      if (charData.data && charData.data.shapes) {
                        completeShapes(charData.data.shapes);
                        charData.data.ip = 0;
                        charData.data.op = 99999;
                        charData.data.st = 0;
                        charData.data.sr = 1;
                        charData.data.ks = {
                          p: {
                            k: [0, 0],
                            a: 0
                          },
                          s: {
                            k: [100, 100],
                            a: 0
                          },
                          a: {
                            k: [0, 0],
                            a: 0
                          },
                          r: {
                            k: 0,
                            a: 0
                          },
                          o: {
                            k: 100,
                            a: 0
                          }
                        };
                        if (!animationData.chars[i].t) {
                          charData.data.shapes.push({
                            ty: "no"
                          });
                          charData.data.shapes[0].it.push({
                            p: {
                              k: [0, 0],
                              a: 0
                            },
                            s: {
                              k: [100, 100],
                              a: 0
                            },
                            a: {
                              k: [0, 0],
                              a: 0
                            },
                            r: {
                              k: 0,
                              a: 0
                            },
                            o: {
                              k: 100,
                              a: 0
                            },
                            sk: {
                              k: 0,
                              a: 0
                            },
                            sa: {
                              k: 0,
                              a: 0
                            },
                            ty: "tr"
                          });
                        }
                      }
                    }
                  }
                };
              }();
              var checkPathProperties = function() {
                var minimumVersion = [5, 7, 15];
                function updateTextLayer(textLayer) {
                  var pathData = textLayer.t.p;
                  if (typeof pathData.a === "number") {
                    pathData.a = {
                      a: 0,
                      k: pathData.a
                    };
                  }
                  if (typeof pathData.p === "number") {
                    pathData.p = {
                      a: 0,
                      k: pathData.p
                    };
                  }
                  if (typeof pathData.r === "number") {
                    pathData.r = {
                      a: 0,
                      k: pathData.r
                    };
                  }
                }
                function iterateLayers(layers2) {
                  var i;
                  var len = layers2.length;
                  for (i = 0; i < len; i += 1) {
                    if (layers2[i].ty === 5) {
                      updateTextLayer(layers2[i]);
                    }
                  }
                }
                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i;
                      var len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              }();
              var checkColors = function() {
                var minimumVersion = [4, 1, 9];
                function iterateShapes(shapes) {
                  var i;
                  var len = shapes.length;
                  var j;
                  var jLen;
                  for (i = 0; i < len; i += 1) {
                    if (shapes[i].ty === "gr") {
                      iterateShapes(shapes[i].it);
                    } else if (shapes[i].ty === "fl" || shapes[i].ty === "st") {
                      if (shapes[i].c.k && shapes[i].c.k[0].i) {
                        jLen = shapes[i].c.k.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (shapes[i].c.k[j].s) {
                            shapes[i].c.k[j].s[0] /= 255;
                            shapes[i].c.k[j].s[1] /= 255;
                            shapes[i].c.k[j].s[2] /= 255;
                            shapes[i].c.k[j].s[3] /= 255;
                          }
                          if (shapes[i].c.k[j].e) {
                            shapes[i].c.k[j].e[0] /= 255;
                            shapes[i].c.k[j].e[1] /= 255;
                            shapes[i].c.k[j].e[2] /= 255;
                            shapes[i].c.k[j].e[3] /= 255;
                          }
                        }
                      } else {
                        shapes[i].c.k[0] /= 255;
                        shapes[i].c.k[1] /= 255;
                        shapes[i].c.k[2] /= 255;
                        shapes[i].c.k[3] /= 255;
                      }
                    }
                  }
                }
                function iterateLayers(layers2) {
                  var i;
                  var len = layers2.length;
                  for (i = 0; i < len; i += 1) {
                    if (layers2[i].ty === 4) {
                      iterateShapes(layers2[i].shapes);
                    }
                  }
                }
                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i;
                      var len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              }();
              var checkShapes = function() {
                var minimumVersion = [4, 4, 18];
                function completeClosingShapes(arr) {
                  var i;
                  var len = arr.length;
                  var j;
                  var jLen;
                  for (i = len - 1; i >= 0; i -= 1) {
                    if (arr[i].ty === "sh") {
                      if (arr[i].ks.k.i) {
                        arr[i].ks.k.c = arr[i].closed;
                      } else {
                        jLen = arr[i].ks.k.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (arr[i].ks.k[j].s) {
                            arr[i].ks.k[j].s[0].c = arr[i].closed;
                          }
                          if (arr[i].ks.k[j].e) {
                            arr[i].ks.k[j].e[0].c = arr[i].closed;
                          }
                        }
                      }
                    } else if (arr[i].ty === "gr") {
                      completeClosingShapes(arr[i].it);
                    }
                  }
                }
                function iterateLayers(layers2) {
                  var layerData;
                  var i;
                  var len = layers2.length;
                  var j;
                  var jLen;
                  var k2;
                  var kLen;
                  for (i = 0; i < len; i += 1) {
                    layerData = layers2[i];
                    if (layerData.hasMask) {
                      var maskProps = layerData.masksProperties;
                      jLen = maskProps.length;
                      for (j = 0; j < jLen; j += 1) {
                        if (maskProps[j].pt.k.i) {
                          maskProps[j].pt.k.c = maskProps[j].cl;
                        } else {
                          kLen = maskProps[j].pt.k.length;
                          for (k2 = 0; k2 < kLen; k2 += 1) {
                            if (maskProps[j].pt.k[k2].s) {
                              maskProps[j].pt.k[k2].s[0].c = maskProps[j].cl;
                            }
                            if (maskProps[j].pt.k[k2].e) {
                              maskProps[j].pt.k[k2].e[0].c = maskProps[j].cl;
                            }
                          }
                        }
                      }
                    }
                    if (layerData.ty === 4) {
                      completeClosingShapes(layerData.shapes);
                    }
                  }
                }
                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i;
                      var len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              }();
              function completeData(animationData) {
                if (animationData.__complete) {
                  return;
                }
                checkColors(animationData);
                checkText(animationData);
                checkChars(animationData);
                checkPathProperties(animationData);
                checkShapes(animationData);
                completeLayers(animationData.layers, animationData.assets);
                completeChars(animationData.chars, animationData.assets);
                animationData.__complete = true;
              }
              function completeText(data2) {
                if (data2.t.a.length === 0 && !("m" in data2.t.p))
                  ;
              }
              var moduleOb = {};
              moduleOb.completeData = completeData;
              moduleOb.checkColors = checkColors;
              moduleOb.checkChars = checkChars;
              moduleOb.checkPathProperties = checkPathProperties;
              moduleOb.checkShapes = checkShapes;
              moduleOb.completeLayers = completeLayers;
              return moduleOb;
            }
            if (!_workerSelf.dataManager) {
              _workerSelf.dataManager = dataFunctionManager();
            }
            if (!_workerSelf.assetLoader) {
              _workerSelf.assetLoader = function() {
                function formatResponse(xhr) {
                  var contentTypeHeader = xhr.getResponseHeader("content-type");
                  if (contentTypeHeader && xhr.responseType === "json" && contentTypeHeader.indexOf("json") !== -1) {
                    return xhr.response;
                  }
                  if (xhr.response && _typeof$5(xhr.response) === "object") {
                    return xhr.response;
                  }
                  if (xhr.response && typeof xhr.response === "string") {
                    return JSON.parse(xhr.response);
                  }
                  if (xhr.responseText) {
                    return JSON.parse(xhr.responseText);
                  }
                  return null;
                }
                function loadAsset(path, fullPath, callback, errorCallback) {
                  var response;
                  var xhr = new XMLHttpRequest();
                  try {
                    xhr.responseType = "json";
                  } catch (err) {
                  }
                  xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                      if (xhr.status === 200) {
                        response = formatResponse(xhr);
                        callback(response);
                      } else {
                        try {
                          response = formatResponse(xhr);
                          callback(response);
                        } catch (err) {
                          if (errorCallback) {
                            errorCallback(err);
                          }
                        }
                      }
                    }
                  };
                  try {
                    xhr.open(["G", "E", "T"].join(""), path, true);
                  } catch (error) {
                    xhr.open(["G", "E", "T"].join(""), fullPath + "/" + path, true);
                  }
                  xhr.send();
                }
                return {
                  load: loadAsset
                };
              }();
            }
            if (e.data.type === "loadAnimation") {
              _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function(data2) {
                _workerSelf.dataManager.completeData(data2);
                _workerSelf.postMessage({
                  id: e.data.id,
                  payload: data2,
                  status: "success"
                });
              }, function() {
                _workerSelf.postMessage({
                  id: e.data.id,
                  status: "error"
                });
              });
            } else if (e.data.type === "complete") {
              var animation = e.data.animation;
              _workerSelf.dataManager.completeData(animation);
              _workerSelf.postMessage({
                id: e.data.id,
                payload: animation,
                status: "success"
              });
            } else if (e.data.type === "loadData") {
              _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function(data2) {
                _workerSelf.postMessage({
                  id: e.data.id,
                  payload: data2,
                  status: "success"
                });
              }, function() {
                _workerSelf.postMessage({
                  id: e.data.id,
                  status: "error"
                });
              });
            }
          });
          workerInstance.onmessage = function(event) {
            var data2 = event.data;
            var id2 = data2.id;
            var process = processes[id2];
            processes[id2] = null;
            if (data2.status === "success") {
              process.onComplete(data2.payload);
            } else if (process.onError) {
              process.onError();
            }
          };
        }
      }
      function createProcess(onComplete, onError) {
        _counterId += 1;
        var id2 = "processId_" + _counterId;
        processes[id2] = {
          onComplete,
          onError
        };
        return id2;
      }
      function loadAnimation2(path, onComplete, onError) {
        setupWorker();
        var processId = createProcess(onComplete, onError);
        workerInstance.postMessage({
          type: "loadAnimation",
          path,
          fullPath: window.location.origin + window.location.pathname,
          id: processId
        });
      }
      function loadData(path, onComplete, onError) {
        setupWorker();
        var processId = createProcess(onComplete, onError);
        workerInstance.postMessage({
          type: "loadData",
          path,
          fullPath: window.location.origin + window.location.pathname,
          id: processId
        });
      }
      function completeAnimation(anim, onComplete, onError) {
        setupWorker();
        var processId = createProcess(onComplete, onError);
        workerInstance.postMessage({
          type: "complete",
          animation: anim,
          id: processId
        });
      }
      return {
        loadAnimation: loadAnimation2,
        loadData,
        completeAnimation
      };
    }();
    var ImagePreloader = function() {
      var proxyImage = function() {
        var canvas = createTag("canvas");
        canvas.width = 1;
        canvas.height = 1;
        var ctx = canvas.getContext("2d");
        ctx.fillStyle = "rgba(0,0,0,0)";
        ctx.fillRect(0, 0, 1, 1);
        return canvas;
      }();
      function imageLoaded() {
        this.loadedAssets += 1;
        if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
          if (this.imagesLoadedCb) {
            this.imagesLoadedCb(null);
          }
        }
      }
      function footageLoaded() {
        this.loadedFootagesCount += 1;
        if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {
          if (this.imagesLoadedCb) {
            this.imagesLoadedCb(null);
          }
        }
      }
      function getAssetsPath(assetData, assetsPath, originalPath) {
        var path = "";
        if (assetData.e) {
          path = assetData.p;
        } else if (assetsPath) {
          var imagePath = assetData.p;
          if (imagePath.indexOf("images/") !== -1) {
            imagePath = imagePath.split("/")[1];
          }
          path = assetsPath + imagePath;
        } else {
          path = originalPath;
          path += assetData.u ? assetData.u : "";
          path += assetData.p;
        }
        return path;
      }
      function testImageLoaded(img) {
        var _count = 0;
        var intervalId = setInterval(function() {
          var box = img.getBBox();
          if (box.width || _count > 500) {
            this._imageLoaded();
            clearInterval(intervalId);
          }
          _count += 1;
        }.bind(this), 50);
      }
      function createImageData(assetData) {
        var path = getAssetsPath(assetData, this.assetsPath, this.path);
        var img = createNS("image");
        if (isSafari) {
          this.testImageLoaded(img);
        } else {
          img.addEventListener("load", this._imageLoaded, false);
        }
        img.addEventListener("error", function() {
          ob2.img = proxyImage;
          this._imageLoaded();
        }.bind(this), false);
        img.setAttributeNS("http://www.w3.org/1999/xlink", "href", path);
        if (this._elementHelper.append) {
          this._elementHelper.append(img);
        } else {
          this._elementHelper.appendChild(img);
        }
        var ob2 = {
          img,
          assetData
        };
        return ob2;
      }
      function createImgData(assetData) {
        var path = getAssetsPath(assetData, this.assetsPath, this.path);
        var img = createTag("img");
        img.crossOrigin = "anonymous";
        img.addEventListener("load", this._imageLoaded, false);
        img.addEventListener("error", function() {
          ob2.img = proxyImage;
          this._imageLoaded();
        }.bind(this), false);
        img.src = path;
        var ob2 = {
          img,
          assetData
        };
        return ob2;
      }
      function createFootageData(data2) {
        var ob2 = {
          assetData: data2
        };
        var path = getAssetsPath(data2, this.assetsPath, this.path);
        dataManager.loadData(path, function(footageData) {
          ob2.img = footageData;
          this._footageLoaded();
        }.bind(this), function() {
          ob2.img = {};
          this._footageLoaded();
        }.bind(this));
        return ob2;
      }
      function loadAssets(assets2, cb2) {
        this.imagesLoadedCb = cb2;
        var i;
        var len = assets2.length;
        for (i = 0; i < len; i += 1) {
          if (!assets2[i].layers) {
            if (!assets2[i].t || assets2[i].t === "seq") {
              this.totalImages += 1;
              this.images.push(this._createImageData(assets2[i]));
            } else if (assets2[i].t === 3) {
              this.totalFootages += 1;
              this.images.push(this.createFootageData(assets2[i]));
            }
          }
        }
      }
      function setPath(path) {
        this.path = path || "";
      }
      function setAssetsPath(path) {
        this.assetsPath = path || "";
      }
      function getAsset(assetData) {
        var i = 0;
        var len = this.images.length;
        while (i < len) {
          if (this.images[i].assetData === assetData) {
            return this.images[i].img;
          }
          i += 1;
        }
        return null;
      }
      function destroy() {
        this.imagesLoadedCb = null;
        this.images.length = 0;
      }
      function loadedImages() {
        return this.totalImages === this.loadedAssets;
      }
      function loadedFootages() {
        return this.totalFootages === this.loadedFootagesCount;
      }
      function setCacheType(type, elementHelper) {
        if (type === "svg") {
          this._elementHelper = elementHelper;
          this._createImageData = this.createImageData.bind(this);
        } else {
          this._createImageData = this.createImgData.bind(this);
        }
      }
      function ImagePreloaderFactory() {
        this._imageLoaded = imageLoaded.bind(this);
        this._footageLoaded = footageLoaded.bind(this);
        this.testImageLoaded = testImageLoaded.bind(this);
        this.createFootageData = createFootageData.bind(this);
        this.assetsPath = "";
        this.path = "";
        this.totalImages = 0;
        this.totalFootages = 0;
        this.loadedAssets = 0;
        this.loadedFootagesCount = 0;
        this.imagesLoadedCb = null;
        this.images = [];
      }
      ImagePreloaderFactory.prototype = {
        loadAssets,
        setAssetsPath,
        setPath,
        loadedImages,
        loadedFootages,
        destroy,
        getAsset,
        createImgData,
        createImageData,
        imageLoaded,
        footageLoaded,
        setCacheType
      };
      return ImagePreloaderFactory;
    }();
    function BaseEvent() {
    }
    BaseEvent.prototype = {
      triggerEvent: function triggerEvent(eventName, args) {
        if (this._cbs[eventName]) {
          var callbacks = this._cbs[eventName];
          for (var i = 0; i < callbacks.length; i += 1) {
            callbacks[i](args);
          }
        }
      },
      addEventListener: function addEventListener(eventName, callback) {
        if (!this._cbs[eventName]) {
          this._cbs[eventName] = [];
        }
        this._cbs[eventName].push(callback);
        return function() {
          this.removeEventListener(eventName, callback);
        }.bind(this);
      },
      removeEventListener: function removeEventListener(eventName, callback) {
        if (!callback) {
          this._cbs[eventName] = null;
        } else if (this._cbs[eventName]) {
          var i = 0;
          var len = this._cbs[eventName].length;
          while (i < len) {
            if (this._cbs[eventName][i] === callback) {
              this._cbs[eventName].splice(i, 1);
              i -= 1;
              len -= 1;
            }
            i += 1;
          }
          if (!this._cbs[eventName].length) {
            this._cbs[eventName] = null;
          }
        }
      }
    };
    var markerParser = function() {
      function parsePayloadLines(payload) {
        var lines = payload.split("\r\n");
        var keys = {};
        var line;
        var keysCount = 0;
        for (var i = 0; i < lines.length; i += 1) {
          line = lines[i].split(":");
          if (line.length === 2) {
            keys[line[0]] = line[1].trim();
            keysCount += 1;
          }
        }
        if (keysCount === 0) {
          throw new Error();
        }
        return keys;
      }
      return function(_markers) {
        var markers2 = [];
        for (var i = 0; i < _markers.length; i += 1) {
          var _marker = _markers[i];
          var markerData = {
            time: _marker.tm,
            duration: _marker.dr
          };
          try {
            markerData.payload = JSON.parse(_markers[i].cm);
          } catch (_) {
            try {
              markerData.payload = parsePayloadLines(_markers[i].cm);
            } catch (__) {
              markerData.payload = {
                name: _markers[i].cm
              };
            }
          }
          markers2.push(markerData);
        }
        return markers2;
      };
    }();
    var ProjectInterface = function() {
      function registerComposition(comp2) {
        this.compositions.push(comp2);
      }
      return function() {
        function _thisProjectFunction(name2) {
          var i = 0;
          var len = this.compositions.length;
          while (i < len) {
            if (this.compositions[i].data && this.compositions[i].data.nm === name2) {
              if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {
                this.compositions[i].prepareFrame(this.currentFrame);
              }
              return this.compositions[i].compInterface;
            }
            i += 1;
          }
          return null;
        }
        _thisProjectFunction.compositions = [];
        _thisProjectFunction.currentFrame = 0;
        _thisProjectFunction.registerComposition = registerComposition;
        return _thisProjectFunction;
      };
    }();
    var renderers = {};
    var registerRenderer = function registerRenderer2(key2, value2) {
      renderers[key2] = value2;
    };
    function getRenderer(key2) {
      return renderers[key2];
    }
    function _typeof$4(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$4 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$4 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$4(obj);
    }
    var AnimationItem = function AnimationItem2() {
      this._cbs = [];
      this.name = "";
      this.path = "";
      this.isLoaded = false;
      this.currentFrame = 0;
      this.currentRawFrame = 0;
      this.firstFrame = 0;
      this.totalFrames = 0;
      this.frameRate = 0;
      this.frameMult = 0;
      this.playSpeed = 1;
      this.playDirection = 1;
      this.playCount = 0;
      this.animationData = {};
      this.assets = [];
      this.isPaused = true;
      this.autoplay = false;
      this.loop = true;
      this.renderer = null;
      this.animationID = createElementID();
      this.assetsPath = "";
      this.timeCompleted = 0;
      this.segmentPos = 0;
      this.isSubframeEnabled = getSubframeEnabled();
      this.segments = [];
      this._idle = true;
      this._completedLoop = false;
      this.projectInterface = ProjectInterface();
      this.imagePreloader = new ImagePreloader();
      this.audioController = audioControllerFactory();
      this.markers = [];
      this.configAnimation = this.configAnimation.bind(this);
      this.onSetupError = this.onSetupError.bind(this);
      this.onSegmentComplete = this.onSegmentComplete.bind(this);
      this.drawnFrameEvent = new BMEnterFrameEvent("drawnFrame", 0, 0, 0);
    };
    extendPrototype([BaseEvent], AnimationItem);
    AnimationItem.prototype.setParams = function(params) {
      if (params.wrapper || params.container) {
        this.wrapper = params.wrapper || params.container;
      }
      var animType = "svg";
      if (params.animType) {
        animType = params.animType;
      } else if (params.renderer) {
        animType = params.renderer;
      }
      var RendererClass = getRenderer(animType);
      this.renderer = new RendererClass(this, params.rendererSettings);
      this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);
      this.renderer.setProjectInterface(this.projectInterface);
      this.animType = animType;
      if (params.loop === "" || params.loop === null || params.loop === void 0 || params.loop === true) {
        this.loop = true;
      } else if (params.loop === false) {
        this.loop = false;
      } else {
        this.loop = parseInt(params.loop, 10);
      }
      this.autoplay = "autoplay" in params ? params.autoplay : true;
      this.name = params.name ? params.name : "";
      this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, "autoloadSegments") ? params.autoloadSegments : true;
      this.assetsPath = params.assetsPath;
      this.initialSegment = params.initialSegment;
      if (params.audioFactory) {
        this.audioController.setAudioFactory(params.audioFactory);
      }
      if (params.animationData) {
        this.setupAnimation(params.animationData);
      } else if (params.path) {
        if (params.path.lastIndexOf("\\") !== -1) {
          this.path = params.path.substr(0, params.path.lastIndexOf("\\") + 1);
        } else {
          this.path = params.path.substr(0, params.path.lastIndexOf("/") + 1);
        }
        this.fileName = params.path.substr(params.path.lastIndexOf("/") + 1);
        this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"));
        dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);
      }
    };
    AnimationItem.prototype.onSetupError = function() {
      this.trigger("data_failed");
    };
    AnimationItem.prototype.setupAnimation = function(data2) {
      dataManager.completeAnimation(data2, this.configAnimation);
    };
    AnimationItem.prototype.setData = function(wrapper, animationData) {
      if (animationData) {
        if (_typeof$4(animationData) !== "object") {
          animationData = JSON.parse(animationData);
        }
      }
      var params = {
        wrapper,
        animationData
      };
      var wrapperAttributes = wrapper.attributes;
      params.path = wrapperAttributes.getNamedItem("data-animation-path") ? wrapperAttributes.getNamedItem("data-animation-path").value : wrapperAttributes.getNamedItem("data-bm-path") ? wrapperAttributes.getNamedItem("data-bm-path").value : wrapperAttributes.getNamedItem("bm-path") ? wrapperAttributes.getNamedItem("bm-path").value : "";
      params.animType = wrapperAttributes.getNamedItem("data-anim-type") ? wrapperAttributes.getNamedItem("data-anim-type").value : wrapperAttributes.getNamedItem("data-bm-type") ? wrapperAttributes.getNamedItem("data-bm-type").value : wrapperAttributes.getNamedItem("bm-type") ? wrapperAttributes.getNamedItem("bm-type").value : wrapperAttributes.getNamedItem("data-bm-renderer") ? wrapperAttributes.getNamedItem("data-bm-renderer").value : wrapperAttributes.getNamedItem("bm-renderer") ? wrapperAttributes.getNamedItem("bm-renderer").value : "canvas";
      var loop = wrapperAttributes.getNamedItem("data-anim-loop") ? wrapperAttributes.getNamedItem("data-anim-loop").value : wrapperAttributes.getNamedItem("data-bm-loop") ? wrapperAttributes.getNamedItem("data-bm-loop").value : wrapperAttributes.getNamedItem("bm-loop") ? wrapperAttributes.getNamedItem("bm-loop").value : "";
      if (loop === "false") {
        params.loop = false;
      } else if (loop === "true") {
        params.loop = true;
      } else if (loop !== "") {
        params.loop = parseInt(loop, 10);
      }
      var autoplay = wrapperAttributes.getNamedItem("data-anim-autoplay") ? wrapperAttributes.getNamedItem("data-anim-autoplay").value : wrapperAttributes.getNamedItem("data-bm-autoplay") ? wrapperAttributes.getNamedItem("data-bm-autoplay").value : wrapperAttributes.getNamedItem("bm-autoplay") ? wrapperAttributes.getNamedItem("bm-autoplay").value : true;
      params.autoplay = autoplay !== "false";
      params.name = wrapperAttributes.getNamedItem("data-name") ? wrapperAttributes.getNamedItem("data-name").value : wrapperAttributes.getNamedItem("data-bm-name") ? wrapperAttributes.getNamedItem("data-bm-name").value : wrapperAttributes.getNamedItem("bm-name") ? wrapperAttributes.getNamedItem("bm-name").value : "";
      var prerender = wrapperAttributes.getNamedItem("data-anim-prerender") ? wrapperAttributes.getNamedItem("data-anim-prerender").value : wrapperAttributes.getNamedItem("data-bm-prerender") ? wrapperAttributes.getNamedItem("data-bm-prerender").value : wrapperAttributes.getNamedItem("bm-prerender") ? wrapperAttributes.getNamedItem("bm-prerender").value : "";
      if (prerender === "false") {
        params.prerender = false;
      }
      this.setParams(params);
    };
    AnimationItem.prototype.includeLayers = function(data2) {
      if (data2.op > this.animationData.op) {
        this.animationData.op = data2.op;
        this.totalFrames = Math.floor(data2.op - this.animationData.ip);
      }
      var layers2 = this.animationData.layers;
      var i;
      var len = layers2.length;
      var newLayers = data2.layers;
      var j;
      var jLen = newLayers.length;
      for (j = 0; j < jLen; j += 1) {
        i = 0;
        while (i < len) {
          if (layers2[i].id === newLayers[j].id) {
            layers2[i] = newLayers[j];
            break;
          }
          i += 1;
        }
      }
      if (data2.chars || data2.fonts) {
        this.renderer.globalData.fontManager.addChars(data2.chars);
        this.renderer.globalData.fontManager.addFonts(data2.fonts, this.renderer.globalData.defs);
      }
      if (data2.assets) {
        len = data2.assets.length;
        for (i = 0; i < len; i += 1) {
          this.animationData.assets.push(data2.assets[i]);
        }
      }
      this.animationData.__complete = false;
      dataManager.completeAnimation(this.animationData, this.onSegmentComplete);
    };
    AnimationItem.prototype.onSegmentComplete = function(data2) {
      this.animationData = data2;
      var expressionsPlugin2 = getExpressionsPlugin();
      if (expressionsPlugin2) {
        expressionsPlugin2.initExpressions(this);
      }
      this.loadNextSegment();
    };
    AnimationItem.prototype.loadNextSegment = function() {
      var segments = this.animationData.segments;
      if (!segments || segments.length === 0 || !this.autoloadSegments) {
        this.trigger("data_ready");
        this.timeCompleted = this.totalFrames;
        return;
      }
      var segment = segments.shift();
      this.timeCompleted = segment.time * this.frameRate;
      var segmentPath = this.path + this.fileName + "_" + this.segmentPos + ".json";
      this.segmentPos += 1;
      dataManager.loadData(segmentPath, this.includeLayers.bind(this), function() {
        this.trigger("data_failed");
      }.bind(this));
    };
    AnimationItem.prototype.loadSegments = function() {
      var segments = this.animationData.segments;
      if (!segments) {
        this.timeCompleted = this.totalFrames;
      }
      this.loadNextSegment();
    };
    AnimationItem.prototype.imagesLoaded = function() {
      this.trigger("loaded_images");
      this.checkLoaded();
    };
    AnimationItem.prototype.preloadImages = function() {
      this.imagePreloader.setAssetsPath(this.assetsPath);
      this.imagePreloader.setPath(this.path);
      this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
    };
    AnimationItem.prototype.configAnimation = function(animData) {
      if (!this.renderer) {
        return;
      }
      try {
        this.animationData = animData;
        if (this.initialSegment) {
          this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);
          this.firstFrame = Math.round(this.initialSegment[0]);
        } else {
          this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);
          this.firstFrame = Math.round(this.animationData.ip);
        }
        this.renderer.configAnimation(animData);
        if (!animData.assets) {
          animData.assets = [];
        }
        this.assets = this.animationData.assets;
        this.frameRate = this.animationData.fr;
        this.frameMult = this.animationData.fr / 1e3;
        this.renderer.searchExtraCompositions(animData.assets);
        this.markers = markerParser(animData.markers || []);
        this.trigger("config_ready");
        this.preloadImages();
        this.loadSegments();
        this.updaFrameModifier();
        this.waitForFontsLoaded();
        if (this.isPaused) {
          this.audioController.pause();
        }
      } catch (error) {
        this.triggerConfigError(error);
      }
    };
    AnimationItem.prototype.waitForFontsLoaded = function() {
      if (!this.renderer) {
        return;
      }
      if (this.renderer.globalData.fontManager.isLoaded) {
        this.checkLoaded();
      } else {
        setTimeout(this.waitForFontsLoaded.bind(this), 20);
      }
    };
    AnimationItem.prototype.checkLoaded = function() {
      if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== "canvas") && this.imagePreloader.loadedFootages()) {
        this.isLoaded = true;
        var expressionsPlugin2 = getExpressionsPlugin();
        if (expressionsPlugin2) {
          expressionsPlugin2.initExpressions(this);
        }
        this.renderer.initItems();
        setTimeout(function() {
          this.trigger("DOMLoaded");
        }.bind(this), 0);
        this.gotoFrame();
        if (this.autoplay) {
          this.play();
        }
      }
    };
    AnimationItem.prototype.resize = function(width2, height2) {
      var _width = typeof width2 === "number" ? width2 : void 0;
      var _height = typeof height2 === "number" ? height2 : void 0;
      this.renderer.updateContainerSize(_width, _height);
    };
    AnimationItem.prototype.setSubframe = function(flag) {
      this.isSubframeEnabled = !!flag;
    };
    AnimationItem.prototype.gotoFrame = function() {
      this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;
      if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {
        this.currentFrame = this.timeCompleted;
      }
      this.trigger("enterFrame");
      this.renderFrame();
      this.trigger("drawnFrame");
    };
    AnimationItem.prototype.renderFrame = function() {
      if (this.isLoaded === false || !this.renderer) {
        return;
      }
      try {
        this.renderer.renderFrame(this.currentFrame + this.firstFrame);
      } catch (error) {
        this.triggerRenderFrameError(error);
      }
    };
    AnimationItem.prototype.play = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      if (this.isPaused === true) {
        this.isPaused = false;
        this.trigger("_pause");
        this.audioController.resume();
        if (this._idle) {
          this._idle = false;
          this.trigger("_active");
        }
      }
    };
    AnimationItem.prototype.pause = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      if (this.isPaused === false) {
        this.isPaused = true;
        this.trigger("_play");
        this._idle = true;
        this.trigger("_idle");
        this.audioController.pause();
      }
    };
    AnimationItem.prototype.togglePause = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      if (this.isPaused === true) {
        this.play();
      } else {
        this.pause();
      }
    };
    AnimationItem.prototype.stop = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      this.pause();
      this.playCount = 0;
      this._completedLoop = false;
      this.setCurrentRawFrameValue(0);
    };
    AnimationItem.prototype.getMarkerData = function(markerName) {
      var marker;
      for (var i = 0; i < this.markers.length; i += 1) {
        marker = this.markers[i];
        if (marker.payload && marker.payload.name === markerName) {
          return marker;
        }
      }
      return null;
    };
    AnimationItem.prototype.goToAndStop = function(value2, isFrame, name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      var numValue = Number(value2);
      if (isNaN(numValue)) {
        var marker = this.getMarkerData(value2);
        if (marker) {
          this.goToAndStop(marker.time, true);
        }
      } else if (isFrame) {
        this.setCurrentRawFrameValue(value2);
      } else {
        this.setCurrentRawFrameValue(value2 * this.frameModifier);
      }
      this.pause();
    };
    AnimationItem.prototype.goToAndPlay = function(value2, isFrame, name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      var numValue = Number(value2);
      if (isNaN(numValue)) {
        var marker = this.getMarkerData(value2);
        if (marker) {
          if (!marker.duration) {
            this.goToAndStop(marker.time, true);
          } else {
            this.playSegments([marker.time, marker.time + marker.duration], true);
          }
        }
      } else {
        this.goToAndStop(numValue, isFrame, name2);
      }
      this.play();
    };
    AnimationItem.prototype.advanceTime = function(value2) {
      if (this.isPaused === true || this.isLoaded === false) {
        return;
      }
      var nextValue = this.currentRawFrame + value2 * this.frameModifier;
      var _isComplete = false;
      if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
        if (!this.loop || this.playCount === this.loop) {
          if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {
            _isComplete = true;
            nextValue = this.totalFrames - 1;
          }
        } else if (nextValue >= this.totalFrames) {
          this.playCount += 1;
          if (!this.checkSegments(nextValue % this.totalFrames)) {
            this.setCurrentRawFrameValue(nextValue % this.totalFrames);
            this._completedLoop = true;
            this.trigger("loopComplete");
          }
        } else {
          this.setCurrentRawFrameValue(nextValue);
        }
      } else if (nextValue < 0) {
        if (!this.checkSegments(nextValue % this.totalFrames)) {
          if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {
            this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);
            if (!this._completedLoop) {
              this._completedLoop = true;
            } else {
              this.trigger("loopComplete");
            }
          } else {
            _isComplete = true;
            nextValue = 0;
          }
        }
      } else {
        this.setCurrentRawFrameValue(nextValue);
      }
      if (_isComplete) {
        this.setCurrentRawFrameValue(nextValue);
        this.pause();
        this.trigger("complete");
      }
    };
    AnimationItem.prototype.adjustSegment = function(arr, offset) {
      this.playCount = 0;
      if (arr[1] < arr[0]) {
        if (this.frameModifier > 0) {
          if (this.playSpeed < 0) {
            this.setSpeed(-this.playSpeed);
          } else {
            this.setDirection(-1);
          }
        }
        this.totalFrames = arr[0] - arr[1];
        this.timeCompleted = this.totalFrames;
        this.firstFrame = arr[1];
        this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);
      } else if (arr[1] > arr[0]) {
        if (this.frameModifier < 0) {
          if (this.playSpeed < 0) {
            this.setSpeed(-this.playSpeed);
          } else {
            this.setDirection(1);
          }
        }
        this.totalFrames = arr[1] - arr[0];
        this.timeCompleted = this.totalFrames;
        this.firstFrame = arr[0];
        this.setCurrentRawFrameValue(1e-3 + offset);
      }
      this.trigger("segmentStart");
    };
    AnimationItem.prototype.setSegment = function(init, end) {
      var pendingFrame = -1;
      if (this.isPaused) {
        if (this.currentRawFrame + this.firstFrame < init) {
          pendingFrame = init;
        } else if (this.currentRawFrame + this.firstFrame > end) {
          pendingFrame = end - init;
        }
      }
      this.firstFrame = init;
      this.totalFrames = end - init;
      this.timeCompleted = this.totalFrames;
      if (pendingFrame !== -1) {
        this.goToAndStop(pendingFrame, true);
      }
    };
    AnimationItem.prototype.playSegments = function(arr, forceFlag) {
      if (forceFlag) {
        this.segments.length = 0;
      }
      if (_typeof$4(arr[0]) === "object") {
        var i;
        var len = arr.length;
        for (i = 0; i < len; i += 1) {
          this.segments.push(arr[i]);
        }
      } else {
        this.segments.push(arr);
      }
      if (this.segments.length && forceFlag) {
        this.adjustSegment(this.segments.shift(), 0);
      }
      if (this.isPaused) {
        this.play();
      }
    };
    AnimationItem.prototype.resetSegments = function(forceFlag) {
      this.segments.length = 0;
      this.segments.push([this.animationData.ip, this.animationData.op]);
      if (forceFlag) {
        this.checkSegments(0);
      }
    };
    AnimationItem.prototype.checkSegments = function(offset) {
      if (this.segments.length) {
        this.adjustSegment(this.segments.shift(), offset);
        return true;
      }
      return false;
    };
    AnimationItem.prototype.destroy = function(name2) {
      if (name2 && this.name !== name2 || !this.renderer) {
        return;
      }
      this.renderer.destroy();
      this.imagePreloader.destroy();
      this.trigger("destroy");
      this._cbs = null;
      this.onEnterFrame = null;
      this.onLoopComplete = null;
      this.onComplete = null;
      this.onSegmentStart = null;
      this.onDestroy = null;
      this.renderer = null;
      this.renderer = null;
      this.imagePreloader = null;
      this.projectInterface = null;
    };
    AnimationItem.prototype.setCurrentRawFrameValue = function(value2) {
      this.currentRawFrame = value2;
      this.gotoFrame();
    };
    AnimationItem.prototype.setSpeed = function(val2) {
      this.playSpeed = val2;
      this.updaFrameModifier();
    };
    AnimationItem.prototype.setDirection = function(val2) {
      this.playDirection = val2 < 0 ? -1 : 1;
      this.updaFrameModifier();
    };
    AnimationItem.prototype.setLoop = function(isLooping) {
      this.loop = isLooping;
    };
    AnimationItem.prototype.setVolume = function(val2, name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      this.audioController.setVolume(val2);
    };
    AnimationItem.prototype.getVolume = function() {
      return this.audioController.getVolume();
    };
    AnimationItem.prototype.mute = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      this.audioController.mute();
    };
    AnimationItem.prototype.unmute = function(name2) {
      if (name2 && this.name !== name2) {
        return;
      }
      this.audioController.unmute();
    };
    AnimationItem.prototype.updaFrameModifier = function() {
      this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
      this.audioController.setRate(this.playSpeed * this.playDirection);
    };
    AnimationItem.prototype.getPath = function() {
      return this.path;
    };
    AnimationItem.prototype.getAssetsPath = function(assetData) {
      var path = "";
      if (assetData.e) {
        path = assetData.p;
      } else if (this.assetsPath) {
        var imagePath = assetData.p;
        if (imagePath.indexOf("images/") !== -1) {
          imagePath = imagePath.split("/")[1];
        }
        path = this.assetsPath + imagePath;
      } else {
        path = this.path;
        path += assetData.u ? assetData.u : "";
        path += assetData.p;
      }
      return path;
    };
    AnimationItem.prototype.getAssetData = function(id2) {
      var i = 0;
      var len = this.assets.length;
      while (i < len) {
        if (id2 === this.assets[i].id) {
          return this.assets[i];
        }
        i += 1;
      }
      return null;
    };
    AnimationItem.prototype.hide = function() {
      this.renderer.hide();
    };
    AnimationItem.prototype.show = function() {
      this.renderer.show();
    };
    AnimationItem.prototype.getDuration = function(isFrame) {
      return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;
    };
    AnimationItem.prototype.updateDocumentData = function(path, documentData, index2) {
      try {
        var element = this.renderer.getElementByPath(path);
        element.updateDocumentData(documentData, index2);
      } catch (error) {
      }
    };
    AnimationItem.prototype.trigger = function(name2) {
      if (this._cbs && this._cbs[name2]) {
        switch (name2) {
          case "enterFrame":
            this.triggerEvent(name2, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameModifier));
            break;
          case "drawnFrame":
            this.drawnFrameEvent.currentTime = this.currentFrame;
            this.drawnFrameEvent.totalTime = this.totalFrames;
            this.drawnFrameEvent.direction = this.frameModifier;
            this.triggerEvent(name2, this.drawnFrameEvent);
            break;
          case "loopComplete":
            this.triggerEvent(name2, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));
            break;
          case "complete":
            this.triggerEvent(name2, new BMCompleteEvent(name2, this.frameMult));
            break;
          case "segmentStart":
            this.triggerEvent(name2, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));
            break;
          case "destroy":
            this.triggerEvent(name2, new BMDestroyEvent(name2, this));
            break;
          default:
            this.triggerEvent(name2);
        }
      }
      if (name2 === "enterFrame" && this.onEnterFrame) {
        this.onEnterFrame.call(this, new BMEnterFrameEvent(name2, this.currentFrame, this.totalFrames, this.frameMult));
      }
      if (name2 === "loopComplete" && this.onLoopComplete) {
        this.onLoopComplete.call(this, new BMCompleteLoopEvent(name2, this.loop, this.playCount, this.frameMult));
      }
      if (name2 === "complete" && this.onComplete) {
        this.onComplete.call(this, new BMCompleteEvent(name2, this.frameMult));
      }
      if (name2 === "segmentStart" && this.onSegmentStart) {
        this.onSegmentStart.call(this, new BMSegmentStartEvent(name2, this.firstFrame, this.totalFrames));
      }
      if (name2 === "destroy" && this.onDestroy) {
        this.onDestroy.call(this, new BMDestroyEvent(name2, this));
      }
    };
    AnimationItem.prototype.triggerRenderFrameError = function(nativeError) {
      var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);
      this.triggerEvent("error", error);
      if (this.onError) {
        this.onError.call(this, error);
      }
    };
    AnimationItem.prototype.triggerConfigError = function(nativeError) {
      var error = new BMConfigErrorEvent(nativeError, this.currentFrame);
      this.triggerEvent("error", error);
      if (this.onError) {
        this.onError.call(this, error);
      }
    };
    var animationManager = function() {
      var moduleOb = {};
      var registeredAnimations = [];
      var initTime = 0;
      var len = 0;
      var playingAnimationsNum = 0;
      var _stopped = true;
      var _isFrozen = false;
      function removeElement(ev) {
        var i = 0;
        var animItem = ev.target;
        while (i < len) {
          if (registeredAnimations[i].animation === animItem) {
            registeredAnimations.splice(i, 1);
            i -= 1;
            len -= 1;
            if (!animItem.isPaused) {
              subtractPlayingCount();
            }
          }
          i += 1;
        }
      }
      function registerAnimation(element, animationData) {
        if (!element) {
          return null;
        }
        var i = 0;
        while (i < len) {
          if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {
            return registeredAnimations[i].animation;
          }
          i += 1;
        }
        var animItem = new AnimationItem();
        setupAnimation(animItem, element);
        animItem.setData(element, animationData);
        return animItem;
      }
      function getRegisteredAnimations() {
        var i;
        var lenAnims = registeredAnimations.length;
        var animations = [];
        for (i = 0; i < lenAnims; i += 1) {
          animations.push(registeredAnimations[i].animation);
        }
        return animations;
      }
      function addPlayingCount() {
        playingAnimationsNum += 1;
        activate();
      }
      function subtractPlayingCount() {
        playingAnimationsNum -= 1;
      }
      function setupAnimation(animItem, element) {
        animItem.addEventListener("destroy", removeElement);
        animItem.addEventListener("_active", addPlayingCount);
        animItem.addEventListener("_idle", subtractPlayingCount);
        registeredAnimations.push({
          elem: element,
          animation: animItem
        });
        len += 1;
      }
      function loadAnimation2(params) {
        var animItem = new AnimationItem();
        setupAnimation(animItem, null);
        animItem.setParams(params);
        return animItem;
      }
      function setSpeed(val2, animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.setSpeed(val2, animation);
        }
      }
      function setDirection(val2, animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.setDirection(val2, animation);
        }
      }
      function play(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.play(animation);
        }
      }
      function resume(nowTime) {
        var elapsedTime = nowTime - initTime;
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.advanceTime(elapsedTime);
        }
        initTime = nowTime;
        if (playingAnimationsNum && !_isFrozen) {
          window.requestAnimationFrame(resume);
        } else {
          _stopped = true;
        }
      }
      function first(nowTime) {
        initTime = nowTime;
        window.requestAnimationFrame(resume);
      }
      function pause(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.pause(animation);
        }
      }
      function goToAndStop(value2, isFrame, animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.goToAndStop(value2, isFrame, animation);
        }
      }
      function stop(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.stop(animation);
        }
      }
      function togglePause(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.togglePause(animation);
        }
      }
      function destroy(animation) {
        var i;
        for (i = len - 1; i >= 0; i -= 1) {
          registeredAnimations[i].animation.destroy(animation);
        }
      }
      function searchAnimations2(animationData, standalone, renderer) {
        var animElements = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin")));
        var i;
        var lenAnims = animElements.length;
        for (i = 0; i < lenAnims; i += 1) {
          if (renderer) {
            animElements[i].setAttribute("data-bm-type", renderer);
          }
          registerAnimation(animElements[i], animationData);
        }
        if (standalone && lenAnims === 0) {
          if (!renderer) {
            renderer = "svg";
          }
          var body = document.getElementsByTagName("body")[0];
          body.innerText = "";
          var div2 = createTag("div");
          div2.style.width = "100%";
          div2.style.height = "100%";
          div2.setAttribute("data-bm-type", renderer);
          body.appendChild(div2);
          registerAnimation(div2, animationData);
        }
      }
      function resize() {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.resize();
        }
      }
      function activate() {
        if (!_isFrozen && playingAnimationsNum) {
          if (_stopped) {
            window.requestAnimationFrame(first);
            _stopped = false;
          }
        }
      }
      function freeze() {
        _isFrozen = true;
      }
      function unfreeze() {
        _isFrozen = false;
        activate();
      }
      function setVolume(val2, animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.setVolume(val2, animation);
        }
      }
      function mute(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.mute(animation);
        }
      }
      function unmute(animation) {
        var i;
        for (i = 0; i < len; i += 1) {
          registeredAnimations[i].animation.unmute(animation);
        }
      }
      moduleOb.registerAnimation = registerAnimation;
      moduleOb.loadAnimation = loadAnimation2;
      moduleOb.setSpeed = setSpeed;
      moduleOb.setDirection = setDirection;
      moduleOb.play = play;
      moduleOb.pause = pause;
      moduleOb.stop = stop;
      moduleOb.togglePause = togglePause;
      moduleOb.searchAnimations = searchAnimations2;
      moduleOb.resize = resize;
      moduleOb.goToAndStop = goToAndStop;
      moduleOb.destroy = destroy;
      moduleOb.freeze = freeze;
      moduleOb.unfreeze = unfreeze;
      moduleOb.setVolume = setVolume;
      moduleOb.mute = mute;
      moduleOb.unmute = unmute;
      moduleOb.getRegisteredAnimations = getRegisteredAnimations;
      return moduleOb;
    }();
    var BezierFactory = function() {
      var ob2 = {};
      ob2.getBezierEasing = getBezierEasing;
      var beziers = {};
      function getBezierEasing(a, b, c, d, nm2) {
        var str = nm2 || ("bez_" + a + "_" + b + "_" + c + "_" + d).replace(/\./g, "p");
        if (beziers[str]) {
          return beziers[str];
        }
        var bezEasing = new BezierEasing([a, b, c, d]);
        beziers[str] = bezEasing;
        return bezEasing;
      }
      var NEWTON_ITERATIONS = 4;
      var NEWTON_MIN_SLOPE = 1e-3;
      var SUBDIVISION_PRECISION = 1e-7;
      var SUBDIVISION_MAX_ITERATIONS = 10;
      var kSplineTableSize = 11;
      var kSampleStepSize = 1 / (kSplineTableSize - 1);
      var float32ArraySupported = typeof Float32Array === "function";
      function A2(aA1, aA2) {
        return 1 - 3 * aA2 + 3 * aA1;
      }
      function B2(aA1, aA2) {
        return 3 * aA2 - 6 * aA1;
      }
      function C2(aA1) {
        return 3 * aA1;
      }
      function calcBezier(aT, aA1, aA2) {
        return ((A2(aA1, aA2) * aT + B2(aA1, aA2)) * aT + C2(aA1)) * aT;
      }
      function getSlope(aT, aA1, aA2) {
        return 3 * A2(aA1, aA2) * aT * aT + 2 * B2(aA1, aA2) * aT + C2(aA1);
      }
      function binarySubdivide(aX, aA, aB, mX1, mX2) {
        var currentX, currentT, i = 0;
        do {
          currentT = aA + (aB - aA) / 2;
          currentX = calcBezier(currentT, mX1, mX2) - aX;
          if (currentX > 0) {
            aB = currentT;
          } else {
            aA = currentT;
          }
        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
        return currentT;
      }
      function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
          var currentSlope = getSlope(aGuessT, mX1, mX2);
          if (currentSlope === 0)
            return aGuessT;
          var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
          aGuessT -= currentX / currentSlope;
        }
        return aGuessT;
      }
      function BezierEasing(points) {
        this._p = points;
        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
        this._precomputed = false;
        this.get = this.get.bind(this);
      }
      BezierEasing.prototype = {
        get: function get(x2) {
          var mX1 = this._p[0], mY1 = this._p[1], mX2 = this._p[2], mY2 = this._p[3];
          if (!this._precomputed)
            this._precompute();
          if (mX1 === mY1 && mX2 === mY2)
            return x2;
          if (x2 === 0)
            return 0;
          if (x2 === 1)
            return 1;
          return calcBezier(this._getTForX(x2), mY1, mY2);
        },
        // Private part
        _precompute: function _precompute() {
          var mX1 = this._p[0], mY1 = this._p[1], mX2 = this._p[2], mY2 = this._p[3];
          this._precomputed = true;
          if (mX1 !== mY1 || mX2 !== mY2) {
            this._calcSampleValues();
          }
        },
        _calcSampleValues: function _calcSampleValues() {
          var mX1 = this._p[0], mX2 = this._p[2];
          for (var i = 0; i < kSplineTableSize; ++i) {
            this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
          }
        },
        /**
             * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
             */
        _getTForX: function _getTForX(aX) {
          var mX1 = this._p[0], mX2 = this._p[2], mSampleValues = this._mSampleValues;
          var intervalStart = 0;
          var currentSample = 1;
          var lastSample = kSplineTableSize - 1;
          for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
            intervalStart += kSampleStepSize;
          }
          --currentSample;
          var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);
          var guessForT = intervalStart + dist * kSampleStepSize;
          var initialSlope = getSlope(guessForT, mX1, mX2);
          if (initialSlope >= NEWTON_MIN_SLOPE) {
            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
          }
          if (initialSlope === 0) {
            return guessForT;
          }
          return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
        }
      };
      return ob2;
    }();
    var pooling = function() {
      function _double(arr) {
        return arr.concat(createSizedArray(arr.length));
      }
      return {
        "double": _double
      };
    }();
    var poolFactory = function() {
      return function(initialLength, _create, _release) {
        var _length = 0;
        var _maxLength = initialLength;
        var pool = createSizedArray(_maxLength);
        var ob2 = {
          newElement,
          release
        };
        function newElement() {
          var element;
          if (_length) {
            _length -= 1;
            element = pool[_length];
          } else {
            element = _create();
          }
          return element;
        }
        function release(element) {
          if (_length === _maxLength) {
            pool = pooling["double"](pool);
            _maxLength *= 2;
          }
          if (_release) {
            _release(element);
          }
          pool[_length] = element;
          _length += 1;
        }
        return ob2;
      };
    }();
    var bezierLengthPool = function() {
      function create() {
        return {
          addedLength: 0,
          percents: createTypedArray("float32", getDefaultCurveSegments()),
          lengths: createTypedArray("float32", getDefaultCurveSegments())
        };
      }
      return poolFactory(8, create);
    }();
    var segmentsLengthPool = function() {
      function create() {
        return {
          lengths: [],
          totalLength: 0
        };
      }
      function release(element) {
        var i;
        var len = element.lengths.length;
        for (i = 0; i < len; i += 1) {
          bezierLengthPool.release(element.lengths[i]);
        }
        element.lengths.length = 0;
      }
      return poolFactory(8, create, release);
    }();
    function bezFunction() {
      var math = Math;
      function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
        var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
        return det1 > -1e-3 && det1 < 1e-3;
      }
      function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
        if (z1 === 0 && z2 === 0 && z3 === 0) {
          return pointOnLine2D(x1, y1, x2, y2, x3, y3);
        }
        var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));
        var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));
        var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));
        var diffDist;
        if (dist1 > dist2) {
          if (dist1 > dist3) {
            diffDist = dist1 - dist2 - dist3;
          } else {
            diffDist = dist3 - dist2 - dist1;
          }
        } else if (dist3 > dist2) {
          diffDist = dist3 - dist2 - dist1;
        } else {
          diffDist = dist2 - dist1 - dist3;
        }
        return diffDist > -1e-4 && diffDist < 1e-4;
      }
      var getBezierLength = function() {
        return function(pt1, pt2, pt3, pt4) {
          var curveSegments = getDefaultCurveSegments();
          var k2;
          var i;
          var len;
          var ptCoord;
          var perc;
          var addedLength = 0;
          var ptDistance;
          var point = [];
          var lastPoint = [];
          var lengthData = bezierLengthPool.newElement();
          len = pt3.length;
          for (k2 = 0; k2 < curveSegments; k2 += 1) {
            perc = k2 / (curveSegments - 1);
            ptDistance = 0;
            for (i = 0; i < len; i += 1) {
              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];
              point[i] = ptCoord;
              if (lastPoint[i] !== null) {
                ptDistance += bmPow(point[i] - lastPoint[i], 2);
              }
              lastPoint[i] = point[i];
            }
            if (ptDistance) {
              ptDistance = bmSqrt(ptDistance);
              addedLength += ptDistance;
            }
            lengthData.percents[k2] = perc;
            lengthData.lengths[k2] = addedLength;
          }
          lengthData.addedLength = addedLength;
          return lengthData;
        };
      }();
      function getSegmentsLength(shapeData) {
        var segmentsLength = segmentsLengthPool.newElement();
        var closed = shapeData.c;
        var pathV = shapeData.v;
        var pathO = shapeData.o;
        var pathI = shapeData.i;
        var i;
        var len = shapeData._length;
        var lengths = segmentsLength.lengths;
        var totalLength = 0;
        for (i = 0; i < len - 1; i += 1) {
          lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);
          totalLength += lengths[i].addedLength;
        }
        if (closed && len) {
          lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);
          totalLength += lengths[i].addedLength;
        }
        segmentsLength.totalLength = totalLength;
        return segmentsLength;
      }
      function BezierData(length2) {
        this.segmentLength = 0;
        this.points = new Array(length2);
      }
      function PointData(partial, point) {
        this.partialLength = partial;
        this.point = point;
      }
      var buildBezierData = function() {
        var storedData = {};
        return function(pt1, pt2, pt3, pt4) {
          var bezierName = (pt1[0] + "_" + pt1[1] + "_" + pt2[0] + "_" + pt2[1] + "_" + pt3[0] + "_" + pt3[1] + "_" + pt4[0] + "_" + pt4[1]).replace(/\./g, "p");
          if (!storedData[bezierName]) {
            var curveSegments = getDefaultCurveSegments();
            var k2;
            var i;
            var len;
            var ptCoord;
            var perc;
            var addedLength = 0;
            var ptDistance;
            var point;
            var lastPoint = null;
            if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {
              curveSegments = 2;
            }
            var bezierData = new BezierData(curveSegments);
            len = pt3.length;
            for (k2 = 0; k2 < curveSegments; k2 += 1) {
              point = createSizedArray(len);
              perc = k2 / (curveSegments - 1);
              ptDistance = 0;
              for (i = 0; i < len; i += 1) {
                ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];
                point[i] = ptCoord;
                if (lastPoint !== null) {
                  ptDistance += bmPow(point[i] - lastPoint[i], 2);
                }
              }
              ptDistance = bmSqrt(ptDistance);
              addedLength += ptDistance;
              bezierData.points[k2] = new PointData(ptDistance, point);
              lastPoint = point;
            }
            bezierData.segmentLength = addedLength;
            storedData[bezierName] = bezierData;
          }
          return storedData[bezierName];
        };
      }();
      function getDistancePerc(perc, bezierData) {
        var percents = bezierData.percents;
        var lengths = bezierData.lengths;
        var len = percents.length;
        var initPos = bmFloor((len - 1) * perc);
        var lengthPos = perc * bezierData.addedLength;
        var lPerc = 0;
        if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {
          return percents[initPos];
        }
        var dir = lengths[initPos] > lengthPos ? -1 : 1;
        var flag = true;
        while (flag) {
          if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {
            lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);
            flag = false;
          } else {
            initPos += dir;
          }
          if (initPos < 0 || initPos >= len - 1) {
            if (initPos === len - 1) {
              return percents[initPos];
            }
            flag = false;
          }
        }
        return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;
      }
      function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {
        var t1 = getDistancePerc(percent, bezierData);
        var u1 = 1 - t1;
        var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;
        var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;
        return [ptX, ptY];
      }
      var bezierSegmentPoints = createTypedArray("float32", 8);
      function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {
        if (startPerc < 0) {
          startPerc = 0;
        } else if (startPerc > 1) {
          startPerc = 1;
        }
        var t0 = getDistancePerc(startPerc, bezierData);
        endPerc = endPerc > 1 ? 1 : endPerc;
        var t1 = getDistancePerc(endPerc, bezierData);
        var i;
        var len = pt1.length;
        var u0 = 1 - t0;
        var u1 = 1 - t1;
        var u0u0u0 = u0 * u0 * u0;
        var t0u0u0_3 = t0 * u0 * u0 * 3;
        var t0t0u0_3 = t0 * t0 * u0 * 3;
        var t0t0t0 = t0 * t0 * t0;
        var u0u0u1 = u0 * u0 * u1;
        var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;
        var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;
        var t0t0t1 = t0 * t0 * t1;
        var u0u1u1 = u0 * u1 * u1;
        var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;
        var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;
        var t0t1t1 = t0 * t1 * t1;
        var u1u1u1 = u1 * u1 * u1;
        var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;
        var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;
        var t1t1t1 = t1 * t1 * t1;
        for (i = 0; i < len; i += 1) {
          bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1e3) / 1e3;
          bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1e3) / 1e3;
          bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1e3) / 1e3;
          bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1e3) / 1e3;
        }
        return bezierSegmentPoints;
      }
      return {
        getSegmentsLength,
        getNewSegment,
        getPointInSegment,
        buildBezierData,
        pointOnLine2D,
        pointOnLine3D
      };
    }
    var bez = bezFunction();
    var PropertyFactory = function() {
      var initFrame = initialDefaultFrame;
      var mathAbs = Math.abs;
      function interpolateValue(frameNum, caching) {
        var offsetTime = this.offsetTime;
        var newValue;
        if (this.propType === "multidimensional") {
          newValue = createTypedArray("float32", this.pv.length);
        }
        var iterationIndex = caching.lastIndex;
        var i = iterationIndex;
        var len = this.keyframes.length - 1;
        var flag = true;
        var keyData;
        var nextKeyData;
        var keyframeMetadata;
        while (flag) {
          keyData = this.keyframes[i];
          nextKeyData = this.keyframes[i + 1];
          if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
            if (keyData.h) {
              keyData = nextKeyData;
            }
            iterationIndex = 0;
            break;
          }
          if (nextKeyData.t - offsetTime > frameNum) {
            iterationIndex = i;
            break;
          }
          if (i < len - 1) {
            i += 1;
          } else {
            iterationIndex = 0;
            flag = false;
          }
        }
        keyframeMetadata = this.keyframesMetadata[i] || {};
        var k2;
        var kLen;
        var perc;
        var jLen;
        var j;
        var fnc;
        var nextKeyTime = nextKeyData.t - offsetTime;
        var keyTime = keyData.t - offsetTime;
        var endValue;
        if (keyData.to) {
          if (!keyframeMetadata.bezierData) {
            keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);
          }
          var bezierData = keyframeMetadata.bezierData;
          if (frameNum >= nextKeyTime || frameNum < keyTime) {
            var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;
            kLen = bezierData.points[ind].point.length;
            for (k2 = 0; k2 < kLen; k2 += 1) {
              newValue[k2] = bezierData.points[ind].point[k2];
            }
          } else {
            if (keyframeMetadata.__fnct) {
              fnc = keyframeMetadata.__fnct;
            } else {
              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;
              keyframeMetadata.__fnct = fnc;
            }
            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
            var distanceInLine = bezierData.segmentLength * perc;
            var segmentPerc;
            var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;
            j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;
            flag = true;
            jLen = bezierData.points.length;
            while (flag) {
              addedLength += bezierData.points[j].partialLength;
              if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {
                kLen = bezierData.points[j].point.length;
                for (k2 = 0; k2 < kLen; k2 += 1) {
                  newValue[k2] = bezierData.points[j].point[k2];
                }
                break;
              } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {
                segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;
                kLen = bezierData.points[j].point.length;
                for (k2 = 0; k2 < kLen; k2 += 1) {
                  newValue[k2] = bezierData.points[j].point[k2] + (bezierData.points[j + 1].point[k2] - bezierData.points[j].point[k2]) * segmentPerc;
                }
                break;
              }
              if (j < jLen - 1) {
                j += 1;
              } else {
                flag = false;
              }
            }
            caching._lastPoint = j;
            caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;
            caching._lastKeyframeIndex = i;
          }
        } else {
          var outX;
          var outY;
          var inX;
          var inY;
          var keyValue;
          len = keyData.s.length;
          endValue = nextKeyData.s || keyData.e;
          if (this.sh && keyData.h !== 1) {
            if (frameNum >= nextKeyTime) {
              newValue[0] = endValue[0];
              newValue[1] = endValue[1];
              newValue[2] = endValue[2];
            } else if (frameNum <= keyTime) {
              newValue[0] = keyData.s[0];
              newValue[1] = keyData.s[1];
              newValue[2] = keyData.s[2];
            } else {
              var quatStart = createQuaternion(keyData.s);
              var quatEnd = createQuaternion(endValue);
              var time2 = (frameNum - keyTime) / (nextKeyTime - keyTime);
              quaternionToEuler(newValue, slerp(quatStart, quatEnd, time2));
            }
          } else {
            for (i = 0; i < len; i += 1) {
              if (keyData.h !== 1) {
                if (frameNum >= nextKeyTime) {
                  perc = 1;
                } else if (frameNum < keyTime) {
                  perc = 0;
                } else {
                  if (keyData.o.x.constructor === Array) {
                    if (!keyframeMetadata.__fnct) {
                      keyframeMetadata.__fnct = [];
                    }
                    if (!keyframeMetadata.__fnct[i]) {
                      outX = keyData.o.x[i] === void 0 ? keyData.o.x[0] : keyData.o.x[i];
                      outY = keyData.o.y[i] === void 0 ? keyData.o.y[0] : keyData.o.y[i];
                      inX = keyData.i.x[i] === void 0 ? keyData.i.x[0] : keyData.i.x[i];
                      inY = keyData.i.y[i] === void 0 ? keyData.i.y[0] : keyData.i.y[i];
                      fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                      keyframeMetadata.__fnct[i] = fnc;
                    } else {
                      fnc = keyframeMetadata.__fnct[i];
                    }
                  } else if (!keyframeMetadata.__fnct) {
                    outX = keyData.o.x;
                    outY = keyData.o.y;
                    inX = keyData.i.x;
                    inY = keyData.i.y;
                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;
                    keyData.keyframeMetadata = fnc;
                  } else {
                    fnc = keyframeMetadata.__fnct;
                  }
                  perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                }
              }
              endValue = nextKeyData.s || keyData.e;
              keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;
              if (this.propType === "multidimensional") {
                newValue[i] = keyValue;
              } else {
                newValue = keyValue;
              }
            }
          }
        }
        caching.lastIndex = iterationIndex;
        return newValue;
      }
      function slerp(a, b, t2) {
        var out = [];
        var ax = a[0];
        var ay = a[1];
        var az = a[2];
        var aw = a[3];
        var bx = b[0];
        var by = b[1];
        var bz = b[2];
        var bw = b[3];
        var omega;
        var cosom;
        var sinom;
        var scale0;
        var scale1;
        cosom = ax * bx + ay * by + az * bz + aw * bw;
        if (cosom < 0) {
          cosom = -cosom;
          bx = -bx;
          by = -by;
          bz = -bz;
          bw = -bw;
        }
        if (1 - cosom > 1e-6) {
          omega = Math.acos(cosom);
          sinom = Math.sin(omega);
          scale0 = Math.sin((1 - t2) * omega) / sinom;
          scale1 = Math.sin(t2 * omega) / sinom;
        } else {
          scale0 = 1 - t2;
          scale1 = t2;
        }
        out[0] = scale0 * ax + scale1 * bx;
        out[1] = scale0 * ay + scale1 * by;
        out[2] = scale0 * az + scale1 * bz;
        out[3] = scale0 * aw + scale1 * bw;
        return out;
      }
      function quaternionToEuler(out, quat) {
        var qx = quat[0];
        var qy = quat[1];
        var qz = quat[2];
        var qw = quat[3];
        var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);
        var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
        var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);
        out[0] = heading / degToRads;
        out[1] = attitude / degToRads;
        out[2] = bank / degToRads;
      }
      function createQuaternion(values) {
        var heading = values[0] * degToRads;
        var attitude = values[1] * degToRads;
        var bank = values[2] * degToRads;
        var c1 = Math.cos(heading / 2);
        var c2 = Math.cos(attitude / 2);
        var c3 = Math.cos(bank / 2);
        var s1 = Math.sin(heading / 2);
        var s2 = Math.sin(attitude / 2);
        var s3 = Math.sin(bank / 2);
        var w2 = c1 * c2 * c3 - s1 * s2 * s3;
        var x2 = s1 * s2 * c3 + c1 * c2 * s3;
        var y2 = s1 * c2 * c3 + c1 * s2 * s3;
        var z2 = c1 * s2 * c3 - s1 * c2 * s3;
        return [x2, y2, z2, w2];
      }
      function getValueAtCurrentTime() {
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {
          if (this._caching.lastFrame >= frameNum) {
            this._caching._lastKeyframeIndex = -1;
            this._caching.lastIndex = 0;
          }
          var renderResult = this.interpolateValue(frameNum, this._caching);
          this.pv = renderResult;
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
      }
      function setVValue(val2) {
        var multipliedValue;
        if (this.propType === "unidimensional") {
          multipliedValue = val2 * this.mult;
          if (mathAbs(this.v - multipliedValue) > 1e-5) {
            this.v = multipliedValue;
            this._mdf = true;
          }
        } else {
          var i = 0;
          var len = this.v.length;
          while (i < len) {
            multipliedValue = val2[i] * this.mult;
            if (mathAbs(this.v[i] - multipliedValue) > 1e-5) {
              this.v[i] = multipliedValue;
              this._mdf = true;
            }
            i += 1;
          }
        }
      }
      function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {
          return;
        }
        if (this.lock) {
          this.setVValue(this.pv);
          return;
        }
        this.lock = true;
        this._mdf = this._isFirstFrame;
        var i;
        var len = this.effectsSequence.length;
        var finalValue = this.kf ? this.pv : this.data.k;
        for (i = 0; i < len; i += 1) {
          finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this._isFirstFrame = false;
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
      }
      function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
      }
      function ValueProperty(elem2, data2, mult, container) {
        this.propType = "unidimensional";
        this.mult = mult || 1;
        this.data = data2;
        this.v = mult ? data2.k * mult : data2.k;
        this.pv = data2.k;
        this._mdf = false;
        this.elem = elem2;
        this.container = container;
        this.comp = elem2.comp;
        this.k = false;
        this.kf = false;
        this.vel = 0;
        this.effectsSequence = [];
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
      }
      function MultiDimensionalProperty(elem2, data2, mult, container) {
        this.propType = "multidimensional";
        this.mult = mult || 1;
        this.data = data2;
        this._mdf = false;
        this.elem = elem2;
        this.container = container;
        this.comp = elem2.comp;
        this.k = false;
        this.kf = false;
        this.frameId = -1;
        var i;
        var len = data2.k.length;
        this.v = createTypedArray("float32", len);
        this.pv = createTypedArray("float32", len);
        this.vel = createTypedArray("float32", len);
        for (i = 0; i < len; i += 1) {
          this.v[i] = data2.k[i] * this.mult;
          this.pv[i] = data2.k[i];
        }
        this._isFirstFrame = true;
        this.effectsSequence = [];
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.addEffect = addEffect;
      }
      function KeyframedValueProperty(elem2, data2, mult, container) {
        this.propType = "unidimensional";
        this.keyframes = data2.k;
        this.keyframesMetadata = [];
        this.offsetTime = elem2.data.st;
        this.frameId = -1;
        this._caching = {
          lastFrame: initFrame,
          lastIndex: 0,
          value: 0,
          _lastKeyframeIndex: -1
        };
        this.k = true;
        this.kf = true;
        this.data = data2;
        this.mult = mult || 1;
        this.elem = elem2;
        this.container = container;
        this.comp = elem2.comp;
        this.v = initFrame;
        this.pv = initFrame;
        this._isFirstFrame = true;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.addEffect = addEffect;
      }
      function KeyframedMultidimensionalProperty(elem2, data2, mult, container) {
        this.propType = "multidimensional";
        var i;
        var len = data2.k.length;
        var s;
        var e;
        var to;
        var ti2;
        for (i = 0; i < len - 1; i += 1) {
          if (data2.k[i].to && data2.k[i].s && data2.k[i + 1] && data2.k[i + 1].s) {
            s = data2.k[i].s;
            e = data2.k[i + 1].s;
            to = data2.k[i].to;
            ti2 = data2.k[i].ti;
            if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti2[0], e[1] + ti2[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti2[0], e[1] + ti2[1], e[2] + ti2[2])) {
              data2.k[i].to = null;
              data2.k[i].ti = null;
            }
            if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti2[0] === 0 && ti2[1] === 0) {
              if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti2[2] === 0) {
                data2.k[i].to = null;
                data2.k[i].ti = null;
              }
            }
          }
        }
        this.effectsSequence = [getValueAtCurrentTime.bind(this)];
        this.data = data2;
        this.keyframes = data2.k;
        this.keyframesMetadata = [];
        this.offsetTime = elem2.data.st;
        this.k = true;
        this.kf = true;
        this._isFirstFrame = true;
        this.mult = mult || 1;
        this.elem = elem2;
        this.container = container;
        this.comp = elem2.comp;
        this.getValue = processEffectsSequence;
        this.setVValue = setVValue;
        this.interpolateValue = interpolateValue;
        this.frameId = -1;
        var arrLen = data2.k[0].s.length;
        this.v = createTypedArray("float32", arrLen);
        this.pv = createTypedArray("float32", arrLen);
        for (i = 0; i < arrLen; i += 1) {
          this.v[i] = initFrame;
          this.pv[i] = initFrame;
        }
        this._caching = {
          lastFrame: initFrame,
          lastIndex: 0,
          value: createTypedArray("float32", arrLen)
        };
        this.addEffect = addEffect;
      }
      function getProp(elem2, data2, type, mult, container) {
        var p2;
        if (!data2.k.length) {
          p2 = new ValueProperty(elem2, data2, mult, container);
        } else if (typeof data2.k[0] === "number") {
          p2 = new MultiDimensionalProperty(elem2, data2, mult, container);
        } else {
          switch (type) {
            case 0:
              p2 = new KeyframedValueProperty(elem2, data2, mult, container);
              break;
            case 1:
              p2 = new KeyframedMultidimensionalProperty(elem2, data2, mult, container);
              break;
          }
        }
        if (p2.effectsSequence.length) {
          container.addDynamicProperty(p2);
        }
        return p2;
      }
      var ob2 = {
        getProp
      };
      return ob2;
    }();
    function DynamicPropertyContainer() {
    }
    DynamicPropertyContainer.prototype = {
      addDynamicProperty: function addDynamicProperty(prop) {
        if (this.dynamicProperties.indexOf(prop) === -1) {
          this.dynamicProperties.push(prop);
          this.container.addDynamicProperty(this);
          this._isAnimated = true;
        }
      },
      iterateDynamicProperties: function iterateDynamicProperties() {
        this._mdf = false;
        var i;
        var len = this.dynamicProperties.length;
        for (i = 0; i < len; i += 1) {
          this.dynamicProperties[i].getValue();
          if (this.dynamicProperties[i]._mdf) {
            this._mdf = true;
          }
        }
      },
      initDynamicPropertyContainer: function initDynamicPropertyContainer(container) {
        this.container = container;
        this.dynamicProperties = [];
        this._mdf = false;
        this._isAnimated = false;
      }
    };
    var pointPool = function() {
      function create() {
        return createTypedArray("float32", 2);
      }
      return poolFactory(8, create);
    }();
    function ShapePath() {
      this.c = false;
      this._length = 0;
      this._maxLength = 8;
      this.v = createSizedArray(this._maxLength);
      this.o = createSizedArray(this._maxLength);
      this.i = createSizedArray(this._maxLength);
    }
    ShapePath.prototype.setPathData = function(closed, len) {
      this.c = closed;
      this.setLength(len);
      var i = 0;
      while (i < len) {
        this.v[i] = pointPool.newElement();
        this.o[i] = pointPool.newElement();
        this.i[i] = pointPool.newElement();
        i += 1;
      }
    };
    ShapePath.prototype.setLength = function(len) {
      while (this._maxLength < len) {
        this.doubleArrayLength();
      }
      this._length = len;
    };
    ShapePath.prototype.doubleArrayLength = function() {
      this.v = this.v.concat(createSizedArray(this._maxLength));
      this.i = this.i.concat(createSizedArray(this._maxLength));
      this.o = this.o.concat(createSizedArray(this._maxLength));
      this._maxLength *= 2;
    };
    ShapePath.prototype.setXYAt = function(x2, y2, type, pos, replace) {
      var arr;
      this._length = Math.max(this._length, pos + 1);
      if (this._length >= this._maxLength) {
        this.doubleArrayLength();
      }
      switch (type) {
        case "v":
          arr = this.v;
          break;
        case "i":
          arr = this.i;
          break;
        case "o":
          arr = this.o;
          break;
        default:
          arr = [];
          break;
      }
      if (!arr[pos] || arr[pos] && !replace) {
        arr[pos] = pointPool.newElement();
      }
      arr[pos][0] = x2;
      arr[pos][1] = y2;
    };
    ShapePath.prototype.setTripleAt = function(vX, vY, oX, oY, iX, iY, pos, replace) {
      this.setXYAt(vX, vY, "v", pos, replace);
      this.setXYAt(oX, oY, "o", pos, replace);
      this.setXYAt(iX, iY, "i", pos, replace);
    };
    ShapePath.prototype.reverse = function() {
      var newPath = new ShapePath();
      newPath.setPathData(this.c, this._length);
      var vertices = this.v;
      var outPoints = this.o;
      var inPoints = this.i;
      var init = 0;
      if (this.c) {
        newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);
        init = 1;
      }
      var cnt = this._length - 1;
      var len = this._length;
      var i;
      for (i = init; i < len; i += 1) {
        newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);
        cnt -= 1;
      }
      return newPath;
    };
    ShapePath.prototype.length = function() {
      return this._length;
    };
    var shapePool = function() {
      function create() {
        return new ShapePath();
      }
      function release(shapePath) {
        var len = shapePath._length;
        var i;
        for (i = 0; i < len; i += 1) {
          pointPool.release(shapePath.v[i]);
          pointPool.release(shapePath.i[i]);
          pointPool.release(shapePath.o[i]);
          shapePath.v[i] = null;
          shapePath.i[i] = null;
          shapePath.o[i] = null;
        }
        shapePath._length = 0;
        shapePath.c = false;
      }
      function clone(shape) {
        var cloned = factory.newElement();
        var i;
        var len = shape._length === void 0 ? shape.v.length : shape._length;
        cloned.setLength(len);
        cloned.c = shape.c;
        for (i = 0; i < len; i += 1) {
          cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);
        }
        return cloned;
      }
      var factory = poolFactory(4, create, release);
      factory.clone = clone;
      return factory;
    }();
    function ShapeCollection() {
      this._length = 0;
      this._maxLength = 4;
      this.shapes = createSizedArray(this._maxLength);
    }
    ShapeCollection.prototype.addShape = function(shapeData) {
      if (this._length === this._maxLength) {
        this.shapes = this.shapes.concat(createSizedArray(this._maxLength));
        this._maxLength *= 2;
      }
      this.shapes[this._length] = shapeData;
      this._length += 1;
    };
    ShapeCollection.prototype.releaseShapes = function() {
      var i;
      for (i = 0; i < this._length; i += 1) {
        shapePool.release(this.shapes[i]);
      }
      this._length = 0;
    };
    var shapeCollectionPool = function() {
      var ob2 = {
        newShapeCollection,
        release
      };
      var _length = 0;
      var _maxLength = 4;
      var pool = createSizedArray(_maxLength);
      function newShapeCollection() {
        var shapeCollection;
        if (_length) {
          _length -= 1;
          shapeCollection = pool[_length];
        } else {
          shapeCollection = new ShapeCollection();
        }
        return shapeCollection;
      }
      function release(shapeCollection) {
        var i;
        var len = shapeCollection._length;
        for (i = 0; i < len; i += 1) {
          shapePool.release(shapeCollection.shapes[i]);
        }
        shapeCollection._length = 0;
        if (_length === _maxLength) {
          pool = pooling["double"](pool);
          _maxLength *= 2;
        }
        pool[_length] = shapeCollection;
        _length += 1;
      }
      return ob2;
    }();
    var ShapePropertyFactory = function() {
      var initFrame = -999999;
      function interpolateShape(frameNum, previousValue, caching) {
        var iterationIndex = caching.lastIndex;
        var keyPropS;
        var keyPropE;
        var isHold;
        var j;
        var k2;
        var jLen;
        var kLen;
        var perc;
        var vertexValue;
        var kf2 = this.keyframes;
        if (frameNum < kf2[0].t - this.offsetTime) {
          keyPropS = kf2[0].s[0];
          isHold = true;
          iterationIndex = 0;
        } else if (frameNum >= kf2[kf2.length - 1].t - this.offsetTime) {
          keyPropS = kf2[kf2.length - 1].s ? kf2[kf2.length - 1].s[0] : kf2[kf2.length - 2].e[0];
          isHold = true;
        } else {
          var i = iterationIndex;
          var len = kf2.length - 1;
          var flag = true;
          var keyData;
          var nextKeyData;
          var keyframeMetadata;
          while (flag) {
            keyData = kf2[i];
            nextKeyData = kf2[i + 1];
            if (nextKeyData.t - this.offsetTime > frameNum) {
              break;
            }
            if (i < len - 1) {
              i += 1;
            } else {
              flag = false;
            }
          }
          keyframeMetadata = this.keyframesMetadata[i] || {};
          isHold = keyData.h === 1;
          iterationIndex = i;
          if (!isHold) {
            if (frameNum >= nextKeyData.t - this.offsetTime) {
              perc = 1;
            } else if (frameNum < keyData.t - this.offsetTime) {
              perc = 0;
            } else {
              var fnc;
              if (keyframeMetadata.__fnct) {
                fnc = keyframeMetadata.__fnct;
              } else {
                fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;
                keyframeMetadata.__fnct = fnc;
              }
              perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));
            }
            keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
          }
          keyPropS = keyData.s[0];
        }
        jLen = previousValue._length;
        kLen = keyPropS.i[0].length;
        caching.lastIndex = iterationIndex;
        for (j = 0; j < jLen; j += 1) {
          for (k2 = 0; k2 < kLen; k2 += 1) {
            vertexValue = isHold ? keyPropS.i[j][k2] : keyPropS.i[j][k2] + (keyPropE.i[j][k2] - keyPropS.i[j][k2]) * perc;
            previousValue.i[j][k2] = vertexValue;
            vertexValue = isHold ? keyPropS.o[j][k2] : keyPropS.o[j][k2] + (keyPropE.o[j][k2] - keyPropS.o[j][k2]) * perc;
            previousValue.o[j][k2] = vertexValue;
            vertexValue = isHold ? keyPropS.v[j][k2] : keyPropS.v[j][k2] + (keyPropE.v[j][k2] - keyPropS.v[j][k2]) * perc;
            previousValue.v[j][k2] = vertexValue;
          }
        }
      }
      function interpolateShapeCurrentTime() {
        var frameNum = this.comp.renderedFrame - this.offsetTime;
        var initTime = this.keyframes[0].t - this.offsetTime;
        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
        var lastFrame = this._caching.lastFrame;
        if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {
          this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;
          this.interpolateShape(frameNum, this.pv, this._caching);
        }
        this._caching.lastFrame = frameNum;
        return this.pv;
      }
      function resetShape() {
        this.paths = this.localShapeCollection;
      }
      function shapesEqual(shape1, shape2) {
        if (shape1._length !== shape2._length || shape1.c !== shape2.c) {
          return false;
        }
        var i;
        var len = shape1._length;
        for (i = 0; i < len; i += 1) {
          if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {
            return false;
          }
        }
        return true;
      }
      function setVValue(newPath) {
        if (!shapesEqual(this.v, newPath)) {
          this.v = shapePool.clone(newPath);
          this.localShapeCollection.releaseShapes();
          this.localShapeCollection.addShape(this.v);
          this._mdf = true;
          this.paths = this.localShapeCollection;
        }
      }
      function processEffectsSequence() {
        if (this.elem.globalData.frameId === this.frameId) {
          return;
        }
        if (!this.effectsSequence.length) {
          this._mdf = false;
          return;
        }
        if (this.lock) {
          this.setVValue(this.pv);
          return;
        }
        this.lock = true;
        this._mdf = false;
        var finalValue;
        if (this.kf) {
          finalValue = this.pv;
        } else if (this.data.ks) {
          finalValue = this.data.ks.k;
        } else {
          finalValue = this.data.pt.k;
        }
        var i;
        var len = this.effectsSequence.length;
        for (i = 0; i < len; i += 1) {
          finalValue = this.effectsSequence[i](finalValue);
        }
        this.setVValue(finalValue);
        this.lock = false;
        this.frameId = this.elem.globalData.frameId;
      }
      function ShapeProperty(elem2, data2, type) {
        this.propType = "shape";
        this.comp = elem2.comp;
        this.container = elem2;
        this.elem = elem2;
        this.data = data2;
        this.k = false;
        this.kf = false;
        this._mdf = false;
        var pathData = type === 3 ? data2.pt.k : data2.ks.k;
        this.v = shapePool.clone(pathData);
        this.pv = shapePool.clone(this.v);
        this.localShapeCollection = shapeCollectionPool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.reset = resetShape;
        this.effectsSequence = [];
      }
      function addEffect(effectFunction) {
        this.effectsSequence.push(effectFunction);
        this.container.addDynamicProperty(this);
      }
      ShapeProperty.prototype.interpolateShape = interpolateShape;
      ShapeProperty.prototype.getValue = processEffectsSequence;
      ShapeProperty.prototype.setVValue = setVValue;
      ShapeProperty.prototype.addEffect = addEffect;
      function KeyframedShapeProperty(elem2, data2, type) {
        this.propType = "shape";
        this.comp = elem2.comp;
        this.elem = elem2;
        this.container = elem2;
        this.offsetTime = elem2.data.st;
        this.keyframes = type === 3 ? data2.pt.k : data2.ks.k;
        this.keyframesMetadata = [];
        this.k = true;
        this.kf = true;
        var len = this.keyframes[0].s[0].i.length;
        this.v = shapePool.newElement();
        this.v.setPathData(this.keyframes[0].s[0].c, len);
        this.pv = shapePool.clone(this.v);
        this.localShapeCollection = shapeCollectionPool.newShapeCollection();
        this.paths = this.localShapeCollection;
        this.paths.addShape(this.v);
        this.lastFrame = initFrame;
        this.reset = resetShape;
        this._caching = {
          lastFrame: initFrame,
          lastIndex: 0
        };
        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
      }
      KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
      KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
      KeyframedShapeProperty.prototype.setVValue = setVValue;
      KeyframedShapeProperty.prototype.addEffect = addEffect;
      var EllShapeProperty = function() {
        var cPoint = roundCorner;
        function EllShapePropertyFactory(elem2, data2) {
          this.v = shapePool.newElement();
          this.v.setPathData(true, 4);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.paths = this.localShapeCollection;
          this.localShapeCollection.addShape(this.v);
          this.d = data2.d;
          this.elem = elem2;
          this.comp = elem2.comp;
          this.frameId = -1;
          this.initDynamicPropertyContainer(elem2);
          this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
          this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);
          if (this.dynamicProperties.length) {
            this.k = true;
          } else {
            this.k = false;
            this.convertEllToPath();
          }
        }
        EllShapePropertyFactory.prototype = {
          reset: resetShape,
          getValue: function getValue() {
            if (this.elem.globalData.frameId === this.frameId) {
              return;
            }
            this.frameId = this.elem.globalData.frameId;
            this.iterateDynamicProperties();
            if (this._mdf) {
              this.convertEllToPath();
            }
          },
          convertEllToPath: function convertEllToPath() {
            var p0 = this.p.v[0];
            var p1 = this.p.v[1];
            var s0 = this.s.v[0] / 2;
            var s1 = this.s.v[1] / 2;
            var _cw = this.d !== 3;
            var _v = this.v;
            _v.v[0][0] = p0;
            _v.v[0][1] = p1 - s1;
            _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
            _v.v[1][1] = p1;
            _v.v[2][0] = p0;
            _v.v[2][1] = p1 + s1;
            _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
            _v.v[3][1] = p1;
            _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
            _v.i[0][1] = p1 - s1;
            _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
            _v.i[1][1] = p1 - s1 * cPoint;
            _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
            _v.i[2][1] = p1 + s1;
            _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
            _v.i[3][1] = p1 + s1 * cPoint;
            _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
            _v.o[0][1] = p1 - s1;
            _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
            _v.o[1][1] = p1 + s1 * cPoint;
            _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
            _v.o[2][1] = p1 + s1;
            _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
            _v.o[3][1] = p1 - s1 * cPoint;
          }
        };
        extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);
        return EllShapePropertyFactory;
      }();
      var StarShapeProperty = function() {
        function StarShapePropertyFactory(elem2, data2) {
          this.v = shapePool.newElement();
          this.v.setPathData(true, 0);
          this.elem = elem2;
          this.comp = elem2.comp;
          this.data = data2;
          this.frameId = -1;
          this.d = data2.d;
          this.initDynamicPropertyContainer(elem2);
          if (data2.sy === 1) {
            this.ir = PropertyFactory.getProp(elem2, data2.ir, 0, 0, this);
            this.is = PropertyFactory.getProp(elem2, data2.is, 0, 0.01, this);
            this.convertToPath = this.convertStarToPath;
          } else {
            this.convertToPath = this.convertPolygonToPath;
          }
          this.pt = PropertyFactory.getProp(elem2, data2.pt, 0, 0, this);
          this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
          this.r = PropertyFactory.getProp(elem2, data2.r, 0, degToRads, this);
          this.or = PropertyFactory.getProp(elem2, data2.or, 0, 0, this);
          this.os = PropertyFactory.getProp(elem2, data2.os, 0, 0.01, this);
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.localShapeCollection.addShape(this.v);
          this.paths = this.localShapeCollection;
          if (this.dynamicProperties.length) {
            this.k = true;
          } else {
            this.k = false;
            this.convertToPath();
          }
        }
        StarShapePropertyFactory.prototype = {
          reset: resetShape,
          getValue: function getValue() {
            if (this.elem.globalData.frameId === this.frameId) {
              return;
            }
            this.frameId = this.elem.globalData.frameId;
            this.iterateDynamicProperties();
            if (this._mdf) {
              this.convertToPath();
            }
          },
          convertStarToPath: function convertStarToPath() {
            var numPts = Math.floor(this.pt.v) * 2;
            var angle = Math.PI * 2 / numPts;
            var longFlag = true;
            var longRad = this.or.v;
            var shortRad = this.ir.v;
            var longRound = this.os.v;
            var shortRound = this.is.v;
            var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);
            var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);
            var i;
            var rad;
            var roundness;
            var perimSegment;
            var currentAng = -Math.PI / 2;
            currentAng += this.r.v;
            var dir = this.data.d === 3 ? -1 : 1;
            this.v._length = 0;
            for (i = 0; i < numPts; i += 1) {
              rad = longFlag ? longRad : shortRad;
              roundness = longFlag ? longRound : shortRound;
              perimSegment = longFlag ? longPerimSegment : shortPerimSegment;
              var x2 = rad * Math.cos(currentAng);
              var y2 = rad * Math.sin(currentAng);
              var ox = x2 === 0 && y2 === 0 ? 0 : y2 / Math.sqrt(x2 * x2 + y2 * y2);
              var oy = x2 === 0 && y2 === 0 ? 0 : -x2 / Math.sqrt(x2 * x2 + y2 * y2);
              x2 += +this.p.v[0];
              y2 += +this.p.v[1];
              this.v.setTripleAt(x2, y2, x2 - ox * perimSegment * roundness * dir, y2 - oy * perimSegment * roundness * dir, x2 + ox * perimSegment * roundness * dir, y2 + oy * perimSegment * roundness * dir, i, true);
              longFlag = !longFlag;
              currentAng += angle * dir;
            }
          },
          convertPolygonToPath: function convertPolygonToPath() {
            var numPts = Math.floor(this.pt.v);
            var angle = Math.PI * 2 / numPts;
            var rad = this.or.v;
            var roundness = this.os.v;
            var perimSegment = 2 * Math.PI * rad / (numPts * 4);
            var i;
            var currentAng = -Math.PI * 0.5;
            var dir = this.data.d === 3 ? -1 : 1;
            currentAng += this.r.v;
            this.v._length = 0;
            for (i = 0; i < numPts; i += 1) {
              var x2 = rad * Math.cos(currentAng);
              var y2 = rad * Math.sin(currentAng);
              var ox = x2 === 0 && y2 === 0 ? 0 : y2 / Math.sqrt(x2 * x2 + y2 * y2);
              var oy = x2 === 0 && y2 === 0 ? 0 : -x2 / Math.sqrt(x2 * x2 + y2 * y2);
              x2 += +this.p.v[0];
              y2 += +this.p.v[1];
              this.v.setTripleAt(x2, y2, x2 - ox * perimSegment * roundness * dir, y2 - oy * perimSegment * roundness * dir, x2 + ox * perimSegment * roundness * dir, y2 + oy * perimSegment * roundness * dir, i, true);
              currentAng += angle * dir;
            }
            this.paths.length = 0;
            this.paths[0] = this.v;
          }
        };
        extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);
        return StarShapePropertyFactory;
      }();
      var RectShapeProperty = function() {
        function RectShapePropertyFactory(elem2, data2) {
          this.v = shapePool.newElement();
          this.v.c = true;
          this.localShapeCollection = shapeCollectionPool.newShapeCollection();
          this.localShapeCollection.addShape(this.v);
          this.paths = this.localShapeCollection;
          this.elem = elem2;
          this.comp = elem2.comp;
          this.frameId = -1;
          this.d = data2.d;
          this.initDynamicPropertyContainer(elem2);
          this.p = PropertyFactory.getProp(elem2, data2.p, 1, 0, this);
          this.s = PropertyFactory.getProp(elem2, data2.s, 1, 0, this);
          this.r = PropertyFactory.getProp(elem2, data2.r, 0, 0, this);
          if (this.dynamicProperties.length) {
            this.k = true;
          } else {
            this.k = false;
            this.convertRectToPath();
          }
        }
        RectShapePropertyFactory.prototype = {
          convertRectToPath: function convertRectToPath() {
            var p0 = this.p.v[0];
            var p1 = this.p.v[1];
            var v0 = this.s.v[0] / 2;
            var v1 = this.s.v[1] / 2;
            var round = bmMin(v0, v1, this.r.v);
            var cPoint = round * (1 - roundCorner);
            this.v._length = 0;
            if (this.d === 2 || this.d === 1) {
              this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);
              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);
              if (round !== 0) {
                this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);
                this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);
                this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);
                this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);
                this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);
                this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);
              } else {
                this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);
                this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);
              }
            } else {
              this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);
              if (round !== 0) {
                this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);
                this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);
                this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);
                this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);
                this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);
                this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);
                this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);
              } else {
                this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);
                this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);
                this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);
              }
            }
          },
          getValue: function getValue() {
            if (this.elem.globalData.frameId === this.frameId) {
              return;
            }
            this.frameId = this.elem.globalData.frameId;
            this.iterateDynamicProperties();
            if (this._mdf) {
              this.convertRectToPath();
            }
          },
          reset: resetShape
        };
        extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);
        return RectShapePropertyFactory;
      }();
      function getShapeProp(elem2, data2, type) {
        var prop;
        if (type === 3 || type === 4) {
          var dataProp = type === 3 ? data2.pt : data2.ks;
          var keys = dataProp.k;
          if (keys.length) {
            prop = new KeyframedShapeProperty(elem2, data2, type);
          } else {
            prop = new ShapeProperty(elem2, data2, type);
          }
        } else if (type === 5) {
          prop = new RectShapeProperty(elem2, data2);
        } else if (type === 6) {
          prop = new EllShapeProperty(elem2, data2);
        } else if (type === 7) {
          prop = new StarShapeProperty(elem2, data2);
        }
        if (prop.k) {
          elem2.addDynamicProperty(prop);
        }
        return prop;
      }
      function getConstructorFunction() {
        return ShapeProperty;
      }
      function getKeyframedConstructorFunction() {
        return KeyframedShapeProperty;
      }
      var ob2 = {};
      ob2.getShapeProp = getShapeProp;
      ob2.getConstructorFunction = getConstructorFunction;
      ob2.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
      return ob2;
    }();
    /*!
     Transformation Matrix v2.0
     (c) Epistemex 2014-2015
     www.epistemex.com
     By Ken Fyrstenberg
     Contributions by leeoniya.
     License: MIT, header required.
     */
    var Matrix = function() {
      var _cos = Math.cos;
      var _sin = Math.sin;
      var _tan = Math.tan;
      var _rnd = Math.round;
      function reset() {
        this.props[0] = 1;
        this.props[1] = 0;
        this.props[2] = 0;
        this.props[3] = 0;
        this.props[4] = 0;
        this.props[5] = 1;
        this.props[6] = 0;
        this.props[7] = 0;
        this.props[8] = 0;
        this.props[9] = 0;
        this.props[10] = 1;
        this.props[11] = 0;
        this.props[12] = 0;
        this.props[13] = 0;
        this.props[14] = 0;
        this.props[15] = 1;
        return this;
      }
      function rotate(angle) {
        if (angle === 0) {
          return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
      }
      function rotateX(angle) {
        if (angle === 0) {
          return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
      }
      function rotateY(angle) {
        if (angle === 0) {
          return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
      }
      function rotateZ(angle) {
        if (angle === 0) {
          return this;
        }
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
      }
      function shear(sx, sy) {
        return this._t(1, sy, sx, 1, 0, 0);
      }
      function skew(ax, ay) {
        return this.shear(_tan(ax), _tan(ay));
      }
      function skewFromAxis(ax, angle) {
        var mCos = _cos(angle);
        var mSin = _sin(angle);
        return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
      }
      function scale2(sx, sy, sz) {
        if (!sz && sz !== 0) {
          sz = 1;
        }
        if (sx === 1 && sy === 1 && sz === 1) {
          return this;
        }
        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
      }
      function setTransform(a, b, c, d, e, f2, g, h2, i, j, k2, l2, m2, n2, o, p2) {
        this.props[0] = a;
        this.props[1] = b;
        this.props[2] = c;
        this.props[3] = d;
        this.props[4] = e;
        this.props[5] = f2;
        this.props[6] = g;
        this.props[7] = h2;
        this.props[8] = i;
        this.props[9] = j;
        this.props[10] = k2;
        this.props[11] = l2;
        this.props[12] = m2;
        this.props[13] = n2;
        this.props[14] = o;
        this.props[15] = p2;
        return this;
      }
      function translate(tx, ty, tz) {
        tz = tz || 0;
        if (tx !== 0 || ty !== 0 || tz !== 0) {
          return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
        }
        return this;
      }
      function transform2(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
        var _p = this.props;
        if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
          _p[12] = _p[12] * a2 + _p[15] * m2;
          _p[13] = _p[13] * f2 + _p[15] * n2;
          _p[14] = _p[14] * k2 + _p[15] * o2;
          _p[15] *= p2;
          this._identityCalculated = false;
          return this;
        }
        var a1 = _p[0];
        var b1 = _p[1];
        var c1 = _p[2];
        var d1 = _p[3];
        var e1 = _p[4];
        var f1 = _p[5];
        var g1 = _p[6];
        var h1 = _p[7];
        var i1 = _p[8];
        var j1 = _p[9];
        var k1 = _p[10];
        var l1 = _p[11];
        var m1 = _p[12];
        var n1 = _p[13];
        var o1 = _p[14];
        var p1 = _p[15];
        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;
        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;
        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;
        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;
        this._identityCalculated = false;
        return this;
      }
      function isIdentity() {
        if (!this._identityCalculated) {
          this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);
          this._identityCalculated = true;
        }
        return this._identity;
      }
      function equals(matr) {
        var i = 0;
        while (i < 16) {
          if (matr.props[i] !== this.props[i]) {
            return false;
          }
          i += 1;
        }
        return true;
      }
      function clone(matr) {
        var i;
        for (i = 0; i < 16; i += 1) {
          matr.props[i] = this.props[i];
        }
        return matr;
      }
      function cloneFromProps(props) {
        var i;
        for (i = 0; i < 16; i += 1) {
          this.props[i] = props[i];
        }
      }
      function applyToPoint(x2, y2, z2) {
        return {
          x: x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12],
          y: x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13],
          z: x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14]
        };
      }
      function applyToX(x2, y2, z2) {
        return x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12];
      }
      function applyToY(x2, y2, z2) {
        return x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13];
      }
      function applyToZ(x2, y2, z2) {
        return x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14];
      }
      function getInverseMatrix() {
        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];
        var a = this.props[5] / determinant;
        var b = -this.props[1] / determinant;
        var c = -this.props[4] / determinant;
        var d = this.props[0] / determinant;
        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;
        var f2 = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;
        var inverseMatrix = new Matrix();
        inverseMatrix.props[0] = a;
        inverseMatrix.props[1] = b;
        inverseMatrix.props[4] = c;
        inverseMatrix.props[5] = d;
        inverseMatrix.props[12] = e;
        inverseMatrix.props[13] = f2;
        return inverseMatrix;
      }
      function inversePoint(pt) {
        var inverseMatrix = this.getInverseMatrix();
        return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);
      }
      function inversePoints(pts) {
        var i;
        var len = pts.length;
        var retPts = [];
        for (i = 0; i < len; i += 1) {
          retPts[i] = inversePoint(pts[i]);
        }
        return retPts;
      }
      function applyToTriplePoints(pt1, pt2, pt3) {
        var arr = createTypedArray("float32", 6);
        if (this.isIdentity()) {
          arr[0] = pt1[0];
          arr[1] = pt1[1];
          arr[2] = pt2[0];
          arr[3] = pt2[1];
          arr[4] = pt3[0];
          arr[5] = pt3[1];
        } else {
          var p0 = this.props[0];
          var p1 = this.props[1];
          var p4 = this.props[4];
          var p5 = this.props[5];
          var p12 = this.props[12];
          var p13 = this.props[13];
          arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
          arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
          arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
          arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
          arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
          arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
        }
        return arr;
      }
      function applyToPointArray(x2, y2, z2) {
        var arr;
        if (this.isIdentity()) {
          arr = [x2, y2, z2];
        } else {
          arr = [x2 * this.props[0] + y2 * this.props[4] + z2 * this.props[8] + this.props[12], x2 * this.props[1] + y2 * this.props[5] + z2 * this.props[9] + this.props[13], x2 * this.props[2] + y2 * this.props[6] + z2 * this.props[10] + this.props[14]];
        }
        return arr;
      }
      function applyToPointStringified(x2, y2) {
        if (this.isIdentity()) {
          return x2 + "," + y2;
        }
        var _p = this.props;
        return Math.round((x2 * _p[0] + y2 * _p[4] + _p[12]) * 100) / 100 + "," + Math.round((x2 * _p[1] + y2 * _p[5] + _p[13]) * 100) / 100;
      }
      function toCSS() {
        var i = 0;
        var props = this.props;
        var cssValue = "matrix3d(";
        var v2 = 1e4;
        while (i < 16) {
          cssValue += _rnd(props[i] * v2) / v2;
          cssValue += i === 15 ? ")" : ",";
          i += 1;
        }
        return cssValue;
      }
      function roundMatrixProperty(val2) {
        var v2 = 1e4;
        if (val2 < 1e-6 && val2 > 0 || val2 > -1e-6 && val2 < 0) {
          return _rnd(val2 * v2) / v2;
        }
        return val2;
      }
      function to2dCSS() {
        var props = this.props;
        var _a = roundMatrixProperty(props[0]);
        var _b = roundMatrixProperty(props[1]);
        var _c = roundMatrixProperty(props[4]);
        var _d = roundMatrixProperty(props[5]);
        var _e = roundMatrixProperty(props[12]);
        var _f = roundMatrixProperty(props[13]);
        return "matrix(" + _a + "," + _b + "," + _c + "," + _d + "," + _e + "," + _f + ")";
      }
      return function() {
        this.reset = reset;
        this.rotate = rotate;
        this.rotateX = rotateX;
        this.rotateY = rotateY;
        this.rotateZ = rotateZ;
        this.skew = skew;
        this.skewFromAxis = skewFromAxis;
        this.shear = shear;
        this.scale = scale2;
        this.setTransform = setTransform;
        this.translate = translate;
        this.transform = transform2;
        this.applyToPoint = applyToPoint;
        this.applyToX = applyToX;
        this.applyToY = applyToY;
        this.applyToZ = applyToZ;
        this.applyToPointArray = applyToPointArray;
        this.applyToTriplePoints = applyToTriplePoints;
        this.applyToPointStringified = applyToPointStringified;
        this.toCSS = toCSS;
        this.to2dCSS = to2dCSS;
        this.clone = clone;
        this.cloneFromProps = cloneFromProps;
        this.equals = equals;
        this.inversePoints = inversePoints;
        this.inversePoint = inversePoint;
        this.getInverseMatrix = getInverseMatrix;
        this._t = this.transform;
        this.isIdentity = isIdentity;
        this._identity = true;
        this._identityCalculated = false;
        this.props = createTypedArray("float32", 16);
        this.reset();
      };
    }();
    function _typeof$3(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$3 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$3 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$3(obj);
    }
    var lottie = {};
    function setLocation(href) {
      setLocationHref(href);
    }
    function searchAnimations() {
      {
        animationManager.searchAnimations();
      }
    }
    function setSubframeRendering(flag) {
      setSubframeEnabled(flag);
    }
    function setPrefix(prefix) {
      setIdPrefix(prefix);
    }
    function loadAnimation(params) {
      return animationManager.loadAnimation(params);
    }
    function setQuality(value2) {
      if (typeof value2 === "string") {
        switch (value2) {
          case "high":
            setDefaultCurveSegments(200);
            break;
          default:
          case "medium":
            setDefaultCurveSegments(50);
            break;
          case "low":
            setDefaultCurveSegments(10);
            break;
        }
      } else if (!isNaN(value2) && value2 > 1) {
        setDefaultCurveSegments(value2);
      }
    }
    function inBrowser() {
      return typeof navigator !== "undefined";
    }
    function installPlugin(type, plugin) {
      if (type === "expressions") {
        setExpressionsPlugin(plugin);
      }
    }
    function getFactory(name2) {
      switch (name2) {
        case "propertyFactory":
          return PropertyFactory;
        case "shapePropertyFactory":
          return ShapePropertyFactory;
        case "matrix":
          return Matrix;
        default:
          return null;
      }
    }
    lottie.play = animationManager.play;
    lottie.pause = animationManager.pause;
    lottie.setLocationHref = setLocation;
    lottie.togglePause = animationManager.togglePause;
    lottie.setSpeed = animationManager.setSpeed;
    lottie.setDirection = animationManager.setDirection;
    lottie.stop = animationManager.stop;
    lottie.searchAnimations = searchAnimations;
    lottie.registerAnimation = animationManager.registerAnimation;
    lottie.loadAnimation = loadAnimation;
    lottie.setSubframeRendering = setSubframeRendering;
    lottie.resize = animationManager.resize;
    lottie.goToAndStop = animationManager.goToAndStop;
    lottie.destroy = animationManager.destroy;
    lottie.setQuality = setQuality;
    lottie.inBrowser = inBrowser;
    lottie.installPlugin = installPlugin;
    lottie.freeze = animationManager.freeze;
    lottie.unfreeze = animationManager.unfreeze;
    lottie.setVolume = animationManager.setVolume;
    lottie.mute = animationManager.mute;
    lottie.unmute = animationManager.unmute;
    lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;
    lottie.useWebWorker = setWebWorker;
    lottie.setIDPrefix = setPrefix;
    lottie.__getFactory = getFactory;
    lottie.version = "5.10.2";
    function checkReady() {
      if (document.readyState === "complete") {
        clearInterval(readyStateCheckInterval);
        searchAnimations();
      }
    }
    function getQueryVariable(variable) {
      var vars = queryString.split("&");
      for (var i = 0; i < vars.length; i += 1) {
        var pair = vars[i].split("=");
        if (decodeURIComponent(pair[0]) == variable) {
          return decodeURIComponent(pair[1]);
        }
      }
      return null;
    }
    var queryString = "";
    {
      var scripts = document.getElementsByTagName("script");
      var index = scripts.length - 1;
      var myScript = scripts[index] || {
        src: ""
      };
      queryString = myScript.src ? myScript.src.replace(/^[^\?]+\??/, "") : "";
      getQueryVariable("renderer");
    }
    var readyStateCheckInterval = setInterval(checkReady, 100);
    try {
      if (!((false ? "undefined" : _typeof$3(exports)) === "object" && true) && true) {
        window.bodymovin = lottie;
      }
    } catch (err) {
    }
    var ShapeModifiers = function() {
      var ob2 = {};
      var modifiers = {};
      ob2.registerModifier = registerModifier;
      ob2.getModifier = getModifier;
      function registerModifier(nm2, factory) {
        if (!modifiers[nm2]) {
          modifiers[nm2] = factory;
        }
      }
      function getModifier(nm2, elem2, data2) {
        return new modifiers[nm2](elem2, data2);
      }
      return ob2;
    }();
    function ShapeModifier() {
    }
    ShapeModifier.prototype.initModifierProperties = function() {
    };
    ShapeModifier.prototype.addShapeToModifier = function() {
    };
    ShapeModifier.prototype.addShape = function(data2) {
      if (!this.closed) {
        data2.sh.container.addDynamicProperty(data2.sh);
        var shapeData = {
          shape: data2.sh,
          data: data2,
          localShapeCollection: shapeCollectionPool.newShapeCollection()
        };
        this.shapes.push(shapeData);
        this.addShapeToModifier(shapeData);
        if (this._isAnimated) {
          data2.setAsAnimated();
        }
      }
    };
    ShapeModifier.prototype.init = function(elem2, data2) {
      this.shapes = [];
      this.elem = elem2;
      this.initDynamicPropertyContainer(elem2);
      this.initModifierProperties(elem2, data2);
      this.frameId = initialDefaultFrame;
      this.closed = false;
      this.k = false;
      if (this.dynamicProperties.length) {
        this.k = true;
      } else {
        this.getValue(true);
      }
    };
    ShapeModifier.prototype.processKeys = function() {
      if (this.elem.globalData.frameId === this.frameId) {
        return;
      }
      this.frameId = this.elem.globalData.frameId;
      this.iterateDynamicProperties();
    };
    extendPrototype([DynamicPropertyContainer], ShapeModifier);
    function TrimModifier() {
    }
    extendPrototype([ShapeModifier], TrimModifier);
    TrimModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.s = PropertyFactory.getProp(elem2, data2.s, 0, 0.01, this);
      this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0.01, this);
      this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0, this);
      this.sValue = 0;
      this.eValue = 0;
      this.getValue = this.processKeys;
      this.m = data2.m;
      this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;
    };
    TrimModifier.prototype.addShapeToModifier = function(shapeData) {
      shapeData.pathsData = [];
    };
    TrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {
      var segments = [];
      if (e <= 1) {
        segments.push({
          s,
          e
        });
      } else if (s >= 1) {
        segments.push({
          s: s - 1,
          e: e - 1
        });
      } else {
        segments.push({
          s,
          e: 1
        });
        segments.push({
          s: 0,
          e: e - 1
        });
      }
      var shapeSegments = [];
      var i;
      var len = segments.length;
      var segmentOb;
      for (i = 0; i < len; i += 1) {
        segmentOb = segments[i];
        if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {
          var shapeS;
          var shapeE;
          if (segmentOb.s * totalModifierLength <= addedLength) {
            shapeS = 0;
          } else {
            shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;
          }
          if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {
            shapeE = 1;
          } else {
            shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;
          }
          shapeSegments.push([shapeS, shapeE]);
        }
      }
      if (!shapeSegments.length) {
        shapeSegments.push([0, 0]);
      }
      return shapeSegments;
    };
    TrimModifier.prototype.releasePathsData = function(pathsData) {
      var i;
      var len = pathsData.length;
      for (i = 0; i < len; i += 1) {
        segmentsLengthPool.release(pathsData[i]);
      }
      pathsData.length = 0;
      return pathsData;
    };
    TrimModifier.prototype.processShapes = function(_isFirstFrame) {
      var s;
      var e;
      if (this._mdf || _isFirstFrame) {
        var o = this.o.v % 360 / 360;
        if (o < 0) {
          o += 1;
        }
        if (this.s.v > 1) {
          s = 1 + o;
        } else if (this.s.v < 0) {
          s = 0 + o;
        } else {
          s = this.s.v + o;
        }
        if (this.e.v > 1) {
          e = 1 + o;
        } else if (this.e.v < 0) {
          e = 0 + o;
        } else {
          e = this.e.v + o;
        }
        if (s > e) {
          var _s = s;
          s = e;
          e = _s;
        }
        s = Math.round(s * 1e4) * 1e-4;
        e = Math.round(e * 1e4) * 1e-4;
        this.sValue = s;
        this.eValue = e;
      } else {
        s = this.sValue;
        e = this.eValue;
      }
      var shapePaths;
      var i;
      var len = this.shapes.length;
      var j;
      var jLen;
      var pathsData;
      var pathData;
      var totalShapeLength;
      var totalModifierLength = 0;
      if (e === s) {
        for (i = 0; i < len; i += 1) {
          this.shapes[i].localShapeCollection.releaseShapes();
          this.shapes[i].shape._mdf = true;
          this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;
          if (this._mdf) {
            this.shapes[i].pathsData.length = 0;
          }
        }
      } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {
        var segments = [];
        var shapeData;
        var localShapeCollection;
        for (i = 0; i < len; i += 1) {
          shapeData = this.shapes[i];
          if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {
            shapeData.shape.paths = shapeData.localShapeCollection;
          } else {
            shapePaths = shapeData.shape.paths;
            jLen = shapePaths._length;
            totalShapeLength = 0;
            if (!shapeData.shape._mdf && shapeData.pathsData.length) {
              totalShapeLength = shapeData.totalShapeLength;
            } else {
              pathsData = this.releasePathsData(shapeData.pathsData);
              for (j = 0; j < jLen; j += 1) {
                pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                pathsData.push(pathData);
                totalShapeLength += pathData.totalLength;
              }
              shapeData.totalShapeLength = totalShapeLength;
              shapeData.pathsData = pathsData;
            }
            totalModifierLength += totalShapeLength;
            shapeData.shape._mdf = true;
          }
        }
        var shapeS = s;
        var shapeE = e;
        var addedLength = 0;
        var edges;
        for (i = len - 1; i >= 0; i -= 1) {
          shapeData = this.shapes[i];
          if (shapeData.shape._mdf) {
            localShapeCollection = shapeData.localShapeCollection;
            localShapeCollection.releaseShapes();
            if (this.m === 2 && len > 1) {
              edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);
              addedLength += shapeData.totalShapeLength;
            } else {
              edges = [[shapeS, shapeE]];
            }
            jLen = edges.length;
            for (j = 0; j < jLen; j += 1) {
              shapeS = edges[j][0];
              shapeE = edges[j][1];
              segments.length = 0;
              if (shapeE <= 1) {
                segments.push({
                  s: shapeData.totalShapeLength * shapeS,
                  e: shapeData.totalShapeLength * shapeE
                });
              } else if (shapeS >= 1) {
                segments.push({
                  s: shapeData.totalShapeLength * (shapeS - 1),
                  e: shapeData.totalShapeLength * (shapeE - 1)
                });
              } else {
                segments.push({
                  s: shapeData.totalShapeLength * shapeS,
                  e: shapeData.totalShapeLength
                });
                segments.push({
                  s: 0,
                  e: shapeData.totalShapeLength * (shapeE - 1)
                });
              }
              var newShapesData = this.addShapes(shapeData, segments[0]);
              if (segments[0].s !== segments[0].e) {
                if (segments.length > 1) {
                  var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];
                  if (lastShapeInCollection.c) {
                    var lastShape = newShapesData.pop();
                    this.addPaths(newShapesData, localShapeCollection);
                    newShapesData = this.addShapes(shapeData, segments[1], lastShape);
                  } else {
                    this.addPaths(newShapesData, localShapeCollection);
                    newShapesData = this.addShapes(shapeData, segments[1]);
                  }
                }
                this.addPaths(newShapesData, localShapeCollection);
              }
            }
            shapeData.shape.paths = localShapeCollection;
          }
        }
      } else if (this._mdf) {
        for (i = 0; i < len; i += 1) {
          this.shapes[i].pathsData.length = 0;
          this.shapes[i].shape._mdf = true;
        }
      }
    };
    TrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {
      var i;
      var len = newPaths.length;
      for (i = 0; i < len; i += 1) {
        localShapeCollection.addShape(newPaths[i]);
      }
    };
    TrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {
      shapePath.setXYAt(pt2[0], pt2[1], "o", pos);
      shapePath.setXYAt(pt3[0], pt3[1], "i", pos + 1);
      if (newShape) {
        shapePath.setXYAt(pt1[0], pt1[1], "v", pos);
      }
      shapePath.setXYAt(pt4[0], pt4[1], "v", pos + 1);
    };
    TrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {
      shapePath.setXYAt(points[1], points[5], "o", pos);
      shapePath.setXYAt(points[2], points[6], "i", pos + 1);
      if (newShape) {
        shapePath.setXYAt(points[0], points[4], "v", pos);
      }
      shapePath.setXYAt(points[3], points[7], "v", pos + 1);
    };
    TrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {
      var pathsData = shapeData.pathsData;
      var shapePaths = shapeData.shape.paths.shapes;
      var i;
      var len = shapeData.shape.paths._length;
      var j;
      var jLen;
      var addedLength = 0;
      var currentLengthData;
      var segmentCount;
      var lengths;
      var segment;
      var shapes = [];
      var initPos;
      var newShape = true;
      if (!shapePath) {
        shapePath = shapePool.newElement();
        segmentCount = 0;
        initPos = 0;
      } else {
        segmentCount = shapePath._length;
        initPos = shapePath._length;
      }
      shapes.push(shapePath);
      for (i = 0; i < len; i += 1) {
        lengths = pathsData[i].lengths;
        shapePath.c = shapePaths[i].c;
        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
        for (j = 1; j < jLen; j += 1) {
          currentLengthData = lengths[j - 1];
          if (addedLength + currentLengthData.addedLength < shapeSegment.s) {
            addedLength += currentLengthData.addedLength;
            shapePath.c = false;
          } else if (addedLength > shapeSegment.e) {
            shapePath.c = false;
            break;
          } else {
            if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {
              this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);
              newShape = false;
            } else {
              segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);
              this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
              newShape = false;
              shapePath.c = false;
            }
            addedLength += currentLengthData.addedLength;
            segmentCount += 1;
          }
        }
        if (shapePaths[i].c && lengths.length) {
          currentLengthData = lengths[j - 1];
          if (addedLength <= shapeSegment.e) {
            var segmentLength = lengths[j - 1].addedLength;
            if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {
              this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);
              newShape = false;
            } else {
              segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);
              this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);
              newShape = false;
              shapePath.c = false;
            }
          } else {
            shapePath.c = false;
          }
          addedLength += currentLengthData.addedLength;
          segmentCount += 1;
        }
        if (shapePath._length) {
          shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], "i", initPos);
          shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], "o", shapePath._length - 1);
        }
        if (addedLength > shapeSegment.e) {
          break;
        }
        if (i < len - 1) {
          shapePath = shapePool.newElement();
          newShape = true;
          shapes.push(shapePath);
          segmentCount = 0;
        }
      }
      return shapes;
    };
    function PuckerAndBloatModifier() {
    }
    extendPrototype([ShapeModifier], PuckerAndBloatModifier);
    PuckerAndBloatModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.getValue = this.processKeys;
      this.amount = PropertyFactory.getProp(elem2, data2.a, 0, null, this);
      this._isAnimated = !!this.amount.effectsSequence.length;
    };
    PuckerAndBloatModifier.prototype.processPath = function(path, amount) {
      var percent = amount / 100;
      var centerPoint = [0, 0];
      var pathLength = path._length;
      var i = 0;
      for (i = 0; i < pathLength; i += 1) {
        centerPoint[0] += path.v[i][0];
        centerPoint[1] += path.v[i][1];
      }
      centerPoint[0] /= pathLength;
      centerPoint[1] /= pathLength;
      var clonedPath = shapePool.newElement();
      clonedPath.c = path.c;
      var vX;
      var vY;
      var oX;
      var oY;
      var iX;
      var iY;
      for (i = 0; i < pathLength; i += 1) {
        vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;
        vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;
        oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;
        oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;
        iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;
        iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;
        clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);
      }
      return clonedPath;
    };
    PuckerAndBloatModifier.prototype.processShapes = function(_isFirstFrame) {
      var shapePaths;
      var i;
      var len = this.shapes.length;
      var j;
      var jLen;
      var amount = this.amount.v;
      if (amount !== 0) {
        var shapeData;
        var localShapeCollection;
        for (i = 0; i < len; i += 1) {
          shapeData = this.shapes[i];
          localShapeCollection = shapeData.localShapeCollection;
          if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
            localShapeCollection.releaseShapes();
            shapeData.shape._mdf = true;
            shapePaths = shapeData.shape.paths.shapes;
            jLen = shapeData.shape.paths._length;
            for (j = 0; j < jLen; j += 1) {
              localShapeCollection.addShape(this.processPath(shapePaths[j], amount));
            }
          }
          shapeData.shape.paths = shapeData.localShapeCollection;
        }
      }
      if (!this.dynamicProperties.length) {
        this._mdf = false;
      }
    };
    var TransformPropertyFactory = function() {
      var defaultVector = [0, 0];
      function applyToMatrix(mat) {
        var _mdf = this._mdf;
        this.iterateDynamicProperties();
        this._mdf = this._mdf || _mdf;
        if (this.a) {
          mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
        }
        if (this.s) {
          mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
        }
        if (this.sk) {
          mat.skewFromAxis(-this.sk.v, this.sa.v);
        }
        if (this.r) {
          mat.rotate(-this.r.v);
        } else {
          mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
        }
        if (this.data.p.s) {
          if (this.data.p.z) {
            mat.translate(this.px.v, this.py.v, -this.pz.v);
          } else {
            mat.translate(this.px.v, this.py.v, 0);
          }
        } else {
          mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
        }
      }
      function processKeys(forceRender) {
        if (this.elem.globalData.frameId === this.frameId) {
          return;
        }
        if (this._isDirty) {
          this.precalculateMatrix();
          this._isDirty = false;
        }
        this.iterateDynamicProperties();
        if (this._mdf || forceRender) {
          var frameRate;
          this.v.cloneFromProps(this.pre.props);
          if (this.appliedTransformations < 1) {
            this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
          }
          if (this.appliedTransformations < 2) {
            this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
          }
          if (this.sk && this.appliedTransformations < 3) {
            this.v.skewFromAxis(-this.sk.v, this.sa.v);
          }
          if (this.r && this.appliedTransformations < 4) {
            this.v.rotate(-this.r.v);
          } else if (!this.r && this.appliedTransformations < 4) {
            this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
          }
          if (this.autoOriented) {
            var v1;
            var v2;
            frameRate = this.elem.globalData.frameRate;
            if (this.p && this.p.keyframes && this.p.getValueAtTime) {
              if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {
                v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);
                v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);
              } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {
                v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);
                v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);
              } else {
                v1 = this.p.pv;
                v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);
              }
            } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
              v1 = [];
              v2 = [];
              var px = this.px;
              var py = this.py;
              if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {
                v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);
                v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);
                v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);
                v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);
              } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {
                v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);
                v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);
                v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);
                v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);
              } else {
                v1 = [px.pv, py.pv];
                v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);
                v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);
              }
            } else {
              v2 = defaultVector;
              v1 = v2;
            }
            this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
          }
          if (this.data.p && this.data.p.s) {
            if (this.data.p.z) {
              this.v.translate(this.px.v, this.py.v, -this.pz.v);
            } else {
              this.v.translate(this.px.v, this.py.v, 0);
            }
          } else {
            this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
          }
        }
        this.frameId = this.elem.globalData.frameId;
      }
      function precalculateMatrix() {
        if (!this.a.k) {
          this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
          this.appliedTransformations = 1;
        } else {
          return;
        }
        if (!this.s.effectsSequence.length) {
          this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
          this.appliedTransformations = 2;
        } else {
          return;
        }
        if (this.sk) {
          if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {
            this.pre.skewFromAxis(-this.sk.v, this.sa.v);
            this.appliedTransformations = 3;
          } else {
            return;
          }
        }
        if (this.r) {
          if (!this.r.effectsSequence.length) {
            this.pre.rotate(-this.r.v);
            this.appliedTransformations = 4;
          }
        } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {
          this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);
          this.appliedTransformations = 4;
        }
      }
      function autoOrient() {
      }
      function addDynamicProperty(prop) {
        this._addDynamicProperty(prop);
        this.elem.addDynamicProperty(prop);
        this._isDirty = true;
      }
      function TransformProperty(elem2, data2, container) {
        this.elem = elem2;
        this.frameId = -1;
        this.propType = "transform";
        this.data = data2;
        this.v = new Matrix();
        this.pre = new Matrix();
        this.appliedTransformations = 0;
        this.initDynamicPropertyContainer(container || elem2);
        if (data2.p && data2.p.s) {
          this.px = PropertyFactory.getProp(elem2, data2.p.x, 0, 0, this);
          this.py = PropertyFactory.getProp(elem2, data2.p.y, 0, 0, this);
          if (data2.p.z) {
            this.pz = PropertyFactory.getProp(elem2, data2.p.z, 0, 0, this);
          }
        } else {
          this.p = PropertyFactory.getProp(elem2, data2.p || {
            k: [0, 0, 0]
          }, 1, 0, this);
        }
        if (data2.rx) {
          this.rx = PropertyFactory.getProp(elem2, data2.rx, 0, degToRads, this);
          this.ry = PropertyFactory.getProp(elem2, data2.ry, 0, degToRads, this);
          this.rz = PropertyFactory.getProp(elem2, data2.rz, 0, degToRads, this);
          if (data2.or.k[0].ti) {
            var i;
            var len = data2.or.k.length;
            for (i = 0; i < len; i += 1) {
              data2.or.k[i].to = null;
              data2.or.k[i].ti = null;
            }
          }
          this.or = PropertyFactory.getProp(elem2, data2.or, 1, degToRads, this);
          this.or.sh = true;
        } else {
          this.r = PropertyFactory.getProp(elem2, data2.r || {
            k: 0
          }, 0, degToRads, this);
        }
        if (data2.sk) {
          this.sk = PropertyFactory.getProp(elem2, data2.sk, 0, degToRads, this);
          this.sa = PropertyFactory.getProp(elem2, data2.sa, 0, degToRads, this);
        }
        this.a = PropertyFactory.getProp(elem2, data2.a || {
          k: [0, 0, 0]
        }, 1, 0, this);
        this.s = PropertyFactory.getProp(elem2, data2.s || {
          k: [100, 100, 100]
        }, 1, 0.01, this);
        if (data2.o) {
          this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, elem2);
        } else {
          this.o = {
            _mdf: false,
            v: 1
          };
        }
        this._isDirty = true;
        if (!this.dynamicProperties.length) {
          this.getValue(true);
        }
      }
      TransformProperty.prototype = {
        applyToMatrix,
        getValue: processKeys,
        precalculateMatrix,
        autoOrient
      };
      extendPrototype([DynamicPropertyContainer], TransformProperty);
      TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
      TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;
      function getTransformProperty(elem2, data2, container) {
        return new TransformProperty(elem2, data2, container);
      }
      return {
        getTransformProperty
      };
    }();
    function RepeaterModifier() {
    }
    extendPrototype([ShapeModifier], RepeaterModifier);
    RepeaterModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.getValue = this.processKeys;
      this.c = PropertyFactory.getProp(elem2, data2.c, 0, null, this);
      this.o = PropertyFactory.getProp(elem2, data2.o, 0, null, this);
      this.tr = TransformPropertyFactory.getTransformProperty(elem2, data2.tr, this);
      this.so = PropertyFactory.getProp(elem2, data2.tr.so, 0, 0.01, this);
      this.eo = PropertyFactory.getProp(elem2, data2.tr.eo, 0, 0.01, this);
      this.data = data2;
      if (!this.dynamicProperties.length) {
        this.getValue(true);
      }
      this._isAnimated = !!this.dynamicProperties.length;
      this.pMatrix = new Matrix();
      this.rMatrix = new Matrix();
      this.sMatrix = new Matrix();
      this.tMatrix = new Matrix();
      this.matrix = new Matrix();
    };
    RepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform2, perc, inv) {
      var dir = inv ? -1 : 1;
      var scaleX = transform2.s.v[0] + (1 - transform2.s.v[0]) * (1 - perc);
      var scaleY = transform2.s.v[1] + (1 - transform2.s.v[1]) * (1 - perc);
      pMatrix.translate(transform2.p.v[0] * dir * perc, transform2.p.v[1] * dir * perc, transform2.p.v[2]);
      rMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);
      rMatrix.rotate(-transform2.r.v * dir * perc);
      rMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);
      sMatrix.translate(-transform2.a.v[0], -transform2.a.v[1], transform2.a.v[2]);
      sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);
      sMatrix.translate(transform2.a.v[0], transform2.a.v[1], transform2.a.v[2]);
    };
    RepeaterModifier.prototype.init = function(elem2, arr, pos, elemsData) {
      this.elem = elem2;
      this.arr = arr;
      this.pos = pos;
      this.elemsData = elemsData;
      this._currentCopies = 0;
      this._elements = [];
      this._groups = [];
      this.frameId = -1;
      this.initDynamicPropertyContainer(elem2);
      this.initModifierProperties(elem2, arr[pos]);
      while (pos > 0) {
        pos -= 1;
        this._elements.unshift(arr[pos]);
      }
      if (this.dynamicProperties.length) {
        this.k = true;
      } else {
        this.getValue(true);
      }
    };
    RepeaterModifier.prototype.resetElements = function(elements) {
      var i;
      var len = elements.length;
      for (i = 0; i < len; i += 1) {
        elements[i]._processed = false;
        if (elements[i].ty === "gr") {
          this.resetElements(elements[i].it);
        }
      }
    };
    RepeaterModifier.prototype.cloneElements = function(elements) {
      var newElements = JSON.parse(JSON.stringify(elements));
      this.resetElements(newElements);
      return newElements;
    };
    RepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {
      var i;
      var len = elements.length;
      for (i = 0; i < len; i += 1) {
        elements[i]._render = renderFlag;
        if (elements[i].ty === "gr") {
          this.changeGroupRender(elements[i].it, renderFlag);
        }
      }
    };
    RepeaterModifier.prototype.processShapes = function(_isFirstFrame) {
      var items;
      var itemsTransform;
      var i;
      var dir;
      var cont;
      var hasReloaded = false;
      if (this._mdf || _isFirstFrame) {
        var copies = Math.ceil(this.c.v);
        if (this._groups.length < copies) {
          while (this._groups.length < copies) {
            var group = {
              it: this.cloneElements(this._elements),
              ty: "gr"
            };
            group.it.push({
              a: {
                a: 0,
                ix: 1,
                k: [0, 0]
              },
              nm: "Transform",
              o: {
                a: 0,
                ix: 7,
                k: 100
              },
              p: {
                a: 0,
                ix: 2,
                k: [0, 0]
              },
              r: {
                a: 1,
                ix: 6,
                k: [{
                  s: 0,
                  e: 0,
                  t: 0
                }, {
                  s: 0,
                  e: 0,
                  t: 1
                }]
              },
              s: {
                a: 0,
                ix: 3,
                k: [100, 100]
              },
              sa: {
                a: 0,
                ix: 5,
                k: 0
              },
              sk: {
                a: 0,
                ix: 4,
                k: 0
              },
              ty: "tr"
            });
            this.arr.splice(0, 0, group);
            this._groups.splice(0, 0, group);
            this._currentCopies += 1;
          }
          this.elem.reloadShapes();
          hasReloaded = true;
        }
        cont = 0;
        var renderFlag;
        for (i = 0; i <= this._groups.length - 1; i += 1) {
          renderFlag = cont < copies;
          this._groups[i]._render = renderFlag;
          this.changeGroupRender(this._groups[i].it, renderFlag);
          if (!renderFlag) {
            var elems = this.elemsData[i].it;
            var transformData = elems[elems.length - 1];
            if (transformData.transform.op.v !== 0) {
              transformData.transform.op._mdf = true;
              transformData.transform.op.v = 0;
            } else {
              transformData.transform.op._mdf = false;
            }
          }
          cont += 1;
        }
        this._currentCopies = copies;
        var offset = this.o.v;
        var offsetModulo = offset % 1;
        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);
        var pProps = this.pMatrix.props;
        var rProps = this.rMatrix.props;
        var sProps = this.sMatrix.props;
        this.pMatrix.reset();
        this.rMatrix.reset();
        this.sMatrix.reset();
        this.tMatrix.reset();
        this.matrix.reset();
        var iteration = 0;
        if (offset > 0) {
          while (iteration < roundOffset) {
            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
            iteration += 1;
          }
          if (offsetModulo) {
            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);
            iteration += offsetModulo;
          }
        } else if (offset < 0) {
          while (iteration > roundOffset) {
            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);
            iteration -= 1;
          }
          if (offsetModulo) {
            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);
            iteration -= offsetModulo;
          }
        }
        i = this.data.m === 1 ? 0 : this._currentCopies - 1;
        dir = this.data.m === 1 ? 1 : -1;
        cont = this._currentCopies;
        var j;
        var jLen;
        while (cont) {
          items = this.elemsData[i].it;
          itemsTransform = items[items.length - 1].transform.mProps.v.props;
          jLen = itemsTransform.length;
          items[items.length - 1].transform.mProps._mdf = true;
          items[items.length - 1].transform.op._mdf = true;
          items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
          if (iteration !== 0) {
            if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {
              this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);
            }
            this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);
            this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);
            this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);
            for (j = 0; j < jLen; j += 1) {
              itemsTransform[j] = this.matrix.props[j];
            }
            this.matrix.reset();
          } else {
            this.matrix.reset();
            for (j = 0; j < jLen; j += 1) {
              itemsTransform[j] = this.matrix.props[j];
            }
          }
          iteration += 1;
          cont -= 1;
          i += dir;
        }
      } else {
        cont = this._currentCopies;
        i = 0;
        dir = 1;
        while (cont) {
          items = this.elemsData[i].it;
          itemsTransform = items[items.length - 1].transform.mProps.v.props;
          items[items.length - 1].transform.mProps._mdf = false;
          items[items.length - 1].transform.op._mdf = false;
          cont -= 1;
          i += dir;
        }
      }
      return hasReloaded;
    };
    RepeaterModifier.prototype.addShape = function() {
    };
    function RoundCornersModifier() {
    }
    extendPrototype([ShapeModifier], RoundCornersModifier);
    RoundCornersModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.getValue = this.processKeys;
      this.rd = PropertyFactory.getProp(elem2, data2.r, 0, null, this);
      this._isAnimated = !!this.rd.effectsSequence.length;
    };
    RoundCornersModifier.prototype.processPath = function(path, round) {
      var clonedPath = shapePool.newElement();
      clonedPath.c = path.c;
      var i;
      var len = path._length;
      var currentV;
      var currentI;
      var currentO;
      var closerV;
      var distance;
      var newPosPerc;
      var index2 = 0;
      var vX;
      var vY;
      var oX;
      var oY;
      var iX;
      var iY;
      for (i = 0; i < len; i += 1) {
        currentV = path.v[i];
        currentO = path.o[i];
        currentI = path.i[i];
        if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {
          if ((i === 0 || i === len - 1) && !path.c) {
            clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);
            index2 += 1;
          } else {
            if (i === 0) {
              closerV = path.v[len - 1];
            } else {
              closerV = path.v[i - 1];
            }
            distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
            newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
            iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
            vX = iX;
            iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
            vY = iY;
            oX = vX - (vX - currentV[0]) * roundCorner;
            oY = vY - (vY - currentV[1]) * roundCorner;
            clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
            index2 += 1;
            if (i === len - 1) {
              closerV = path.v[0];
            } else {
              closerV = path.v[i + 1];
            }
            distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));
            newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;
            oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
            vX = oX;
            oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
            vY = oY;
            iX = vX - (vX - currentV[0]) * roundCorner;
            iY = vY - (vY - currentV[1]) * roundCorner;
            clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);
            index2 += 1;
          }
        } else {
          clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index2);
          index2 += 1;
        }
      }
      return clonedPath;
    };
    RoundCornersModifier.prototype.processShapes = function(_isFirstFrame) {
      var shapePaths;
      var i;
      var len = this.shapes.length;
      var j;
      var jLen;
      var rd2 = this.rd.v;
      if (rd2 !== 0) {
        var shapeData;
        var localShapeCollection;
        for (i = 0; i < len; i += 1) {
          shapeData = this.shapes[i];
          localShapeCollection = shapeData.localShapeCollection;
          if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
            localShapeCollection.releaseShapes();
            shapeData.shape._mdf = true;
            shapePaths = shapeData.shape.paths.shapes;
            jLen = shapeData.shape.paths._length;
            for (j = 0; j < jLen; j += 1) {
              localShapeCollection.addShape(this.processPath(shapePaths[j], rd2));
            }
          }
          shapeData.shape.paths = shapeData.localShapeCollection;
        }
      }
      if (!this.dynamicProperties.length) {
        this._mdf = false;
      }
    };
    function floatEqual(a, b) {
      return Math.abs(a - b) * 1e5 <= Math.min(Math.abs(a), Math.abs(b));
    }
    function floatZero(f2) {
      return Math.abs(f2) <= 1e-5;
    }
    function lerp(p0, p1, amount) {
      return p0 * (1 - amount) + p1 * amount;
    }
    function lerpPoint(p0, p1, amount) {
      return [lerp(p0[0], p1[0], amount), lerp(p0[1], p1[1], amount)];
    }
    function quadRoots(a, b, c) {
      if (a === 0)
        return [];
      var s = b * b - 4 * a * c;
      if (s < 0)
        return [];
      var singleRoot = -b / (2 * a);
      if (s === 0)
        return [singleRoot];
      var delta = Math.sqrt(s) / (2 * a);
      return [singleRoot - delta, singleRoot + delta];
    }
    function polynomialCoefficients(p0, p1, p2, p3) {
      return [-p0 + 3 * p1 - 3 * p2 + p3, 3 * p0 - 6 * p1 + 3 * p2, -3 * p0 + 3 * p1, p0];
    }
    function singlePoint(p2) {
      return new PolynomialBezier(p2, p2, p2, p2, false);
    }
    function PolynomialBezier(p0, p1, p2, p3, linearize) {
      if (linearize && pointEqual(p0, p1)) {
        p1 = lerpPoint(p0, p3, 1 / 3);
      }
      if (linearize && pointEqual(p2, p3)) {
        p2 = lerpPoint(p0, p3, 2 / 3);
      }
      var coeffx = polynomialCoefficients(p0[0], p1[0], p2[0], p3[0]);
      var coeffy = polynomialCoefficients(p0[1], p1[1], p2[1], p3[1]);
      this.a = [coeffx[0], coeffy[0]];
      this.b = [coeffx[1], coeffy[1]];
      this.c = [coeffx[2], coeffy[2]];
      this.d = [coeffx[3], coeffy[3]];
      this.points = [p0, p1, p2, p3];
    }
    PolynomialBezier.prototype.point = function(t2) {
      return [((this.a[0] * t2 + this.b[0]) * t2 + this.c[0]) * t2 + this.d[0], ((this.a[1] * t2 + this.b[1]) * t2 + this.c[1]) * t2 + this.d[1]];
    };
    PolynomialBezier.prototype.derivative = function(t2) {
      return [(3 * t2 * this.a[0] + 2 * this.b[0]) * t2 + this.c[0], (3 * t2 * this.a[1] + 2 * this.b[1]) * t2 + this.c[1]];
    };
    PolynomialBezier.prototype.tangentAngle = function(t2) {
      var p2 = this.derivative(t2);
      return Math.atan2(p2[1], p2[0]);
    };
    PolynomialBezier.prototype.normalAngle = function(t2) {
      var p2 = this.derivative(t2);
      return Math.atan2(p2[0], p2[1]);
    };
    PolynomialBezier.prototype.inflectionPoints = function() {
      var denom = this.a[1] * this.b[0] - this.a[0] * this.b[1];
      if (floatZero(denom))
        return [];
      var tcusp = -0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1]) / denom;
      var square = tcusp * tcusp - 1 / 3 * (this.b[1] * this.c[0] - this.b[0] * this.c[1]) / denom;
      if (square < 0)
        return [];
      var root = Math.sqrt(square);
      if (floatZero(root)) {
        if (root > 0 && root < 1)
          return [tcusp];
        return [];
      }
      return [tcusp - root, tcusp + root].filter(function(r2) {
        return r2 > 0 && r2 < 1;
      });
    };
    PolynomialBezier.prototype.split = function(t2) {
      if (t2 <= 0)
        return [singlePoint(this.points[0]), this];
      if (t2 >= 1)
        return [this, singlePoint(this.points[this.points.length - 1])];
      var p10 = lerpPoint(this.points[0], this.points[1], t2);
      var p11 = lerpPoint(this.points[1], this.points[2], t2);
      var p12 = lerpPoint(this.points[2], this.points[3], t2);
      var p20 = lerpPoint(p10, p11, t2);
      var p21 = lerpPoint(p11, p12, t2);
      var p3 = lerpPoint(p20, p21, t2);
      return [new PolynomialBezier(this.points[0], p10, p20, p3, true), new PolynomialBezier(p3, p21, p12, this.points[3], true)];
    };
    function extrema(bez2, comp2) {
      var min = bez2.points[0][comp2];
      var max = bez2.points[bez2.points.length - 1][comp2];
      if (min > max) {
        var e = max;
        max = min;
        min = e;
      }
      var f2 = quadRoots(3 * bez2.a[comp2], 2 * bez2.b[comp2], bez2.c[comp2]);
      for (var i = 0; i < f2.length; i += 1) {
        if (f2[i] > 0 && f2[i] < 1) {
          var val2 = bez2.point(f2[i])[comp2];
          if (val2 < min)
            min = val2;
          else if (val2 > max)
            max = val2;
        }
      }
      return {
        min,
        max
      };
    }
    PolynomialBezier.prototype.bounds = function() {
      return {
        x: extrema(this, 0),
        y: extrema(this, 1)
      };
    };
    PolynomialBezier.prototype.boundingBox = function() {
      var bounds = this.bounds();
      return {
        left: bounds.x.min,
        right: bounds.x.max,
        top: bounds.y.min,
        bottom: bounds.y.max,
        width: bounds.x.max - bounds.x.min,
        height: bounds.y.max - bounds.y.min,
        cx: (bounds.x.max + bounds.x.min) / 2,
        cy: (bounds.y.max + bounds.y.min) / 2
      };
    };
    function intersectData(bez2, t1, t2) {
      var box = bez2.boundingBox();
      return {
        cx: box.cx,
        cy: box.cy,
        width: box.width,
        height: box.height,
        bez: bez2,
        t: (t1 + t2) / 2,
        t1,
        t2
      };
    }
    function splitData(data2) {
      var split = data2.bez.split(0.5);
      return [intersectData(split[0], data2.t1, data2.t), intersectData(split[1], data2.t, data2.t2)];
    }
    function boxIntersect(b1, b2) {
      return Math.abs(b1.cx - b2.cx) * 2 < b1.width + b2.width && Math.abs(b1.cy - b2.cy) * 2 < b1.height + b2.height;
    }
    function intersectsImpl(d1, d2, depth, tolerance, intersections, maxRecursion) {
      if (!boxIntersect(d1, d2))
        return;
      if (depth >= maxRecursion || d1.width <= tolerance && d1.height <= tolerance && d2.width <= tolerance && d2.height <= tolerance) {
        intersections.push([d1.t, d2.t]);
        return;
      }
      var d1s = splitData(d1);
      var d2s = splitData(d2);
      intersectsImpl(d1s[0], d2s[0], depth + 1, tolerance, intersections, maxRecursion);
      intersectsImpl(d1s[0], d2s[1], depth + 1, tolerance, intersections, maxRecursion);
      intersectsImpl(d1s[1], d2s[0], depth + 1, tolerance, intersections, maxRecursion);
      intersectsImpl(d1s[1], d2s[1], depth + 1, tolerance, intersections, maxRecursion);
    }
    PolynomialBezier.prototype.intersections = function(other, tolerance, maxRecursion) {
      if (tolerance === void 0)
        tolerance = 2;
      if (maxRecursion === void 0)
        maxRecursion = 7;
      var intersections = [];
      intersectsImpl(intersectData(this, 0, 1), intersectData(other, 0, 1), 0, tolerance, intersections, maxRecursion);
      return intersections;
    };
    PolynomialBezier.shapeSegment = function(shapePath, index2) {
      var nextIndex = (index2 + 1) % shapePath.length();
      return new PolynomialBezier(shapePath.v[index2], shapePath.o[index2], shapePath.i[nextIndex], shapePath.v[nextIndex], true);
    };
    PolynomialBezier.shapeSegmentInverted = function(shapePath, index2) {
      var nextIndex = (index2 + 1) % shapePath.length();
      return new PolynomialBezier(shapePath.v[nextIndex], shapePath.i[nextIndex], shapePath.o[index2], shapePath.v[index2], true);
    };
    function crossProduct(a, b) {
      return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
    }
    function lineIntersection(start1, end1, start2, end2) {
      var v1 = [start1[0], start1[1], 1];
      var v2 = [end1[0], end1[1], 1];
      var v3 = [start2[0], start2[1], 1];
      var v4 = [end2[0], end2[1], 1];
      var r2 = crossProduct(crossProduct(v1, v2), crossProduct(v3, v4));
      if (floatZero(r2[2]))
        return null;
      return [r2[0] / r2[2], r2[1] / r2[2]];
    }
    function polarOffset(p2, angle, length2) {
      return [p2[0] + Math.cos(angle) * length2, p2[1] - Math.sin(angle) * length2];
    }
    function pointDistance(p1, p2) {
      return Math.hypot(p1[0] - p2[0], p1[1] - p2[1]);
    }
    function pointEqual(p1, p2) {
      return floatEqual(p1[0], p2[0]) && floatEqual(p1[1], p2[1]);
    }
    function ZigZagModifier() {
    }
    extendPrototype([ShapeModifier], ZigZagModifier);
    ZigZagModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.getValue = this.processKeys;
      this.amplitude = PropertyFactory.getProp(elem2, data2.s, 0, null, this);
      this.frequency = PropertyFactory.getProp(elem2, data2.r, 0, null, this);
      this.pointsType = PropertyFactory.getProp(elem2, data2.pt, 0, null, this);
      this._isAnimated = this.amplitude.effectsSequence.length !== 0 || this.frequency.effectsSequence.length !== 0 || this.pointsType.effectsSequence.length !== 0;
    };
    function setPoint(outputBezier, point, angle, direction, amplitude, outAmplitude, inAmplitude) {
      var angO = angle - Math.PI / 2;
      var angI = angle + Math.PI / 2;
      var px = point[0] + Math.cos(angle) * direction * amplitude;
      var py = point[1] - Math.sin(angle) * direction * amplitude;
      outputBezier.setTripleAt(px, py, px + Math.cos(angO) * outAmplitude, py - Math.sin(angO) * outAmplitude, px + Math.cos(angI) * inAmplitude, py - Math.sin(angI) * inAmplitude, outputBezier.length());
    }
    function getPerpendicularVector(pt1, pt2) {
      var vector = [pt2[0] - pt1[0], pt2[1] - pt1[1]];
      var rot = -Math.PI * 0.5;
      var rotatedVector = [Math.cos(rot) * vector[0] - Math.sin(rot) * vector[1], Math.sin(rot) * vector[0] + Math.cos(rot) * vector[1]];
      return rotatedVector;
    }
    function getProjectingAngle(path, cur) {
      var prevIndex = cur === 0 ? path.length() - 1 : cur - 1;
      var nextIndex = (cur + 1) % path.length();
      var prevPoint = path.v[prevIndex];
      var nextPoint = path.v[nextIndex];
      var pVector = getPerpendicularVector(prevPoint, nextPoint);
      return Math.atan2(0, 1) - Math.atan2(pVector[1], pVector[0]);
    }
    function zigZagCorner(outputBezier, path, cur, amplitude, frequency, pointType, direction) {
      var angle = getProjectingAngle(path, cur);
      var point = path.v[cur % path._length];
      var prevPoint = path.v[cur === 0 ? path._length - 1 : cur - 1];
      var nextPoint = path.v[(cur + 1) % path._length];
      var prevDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - prevPoint[0], 2) + Math.pow(point[1] - prevPoint[1], 2)) : 0;
      var nextDist = pointType === 2 ? Math.sqrt(Math.pow(point[0] - nextPoint[0], 2) + Math.pow(point[1] - nextPoint[1], 2)) : 0;
      setPoint(outputBezier, path.v[cur % path._length], angle, direction, amplitude, nextDist / ((frequency + 1) * 2), prevDist / ((frequency + 1) * 2));
    }
    function zigZagSegment(outputBezier, segment, amplitude, frequency, pointType, direction) {
      for (var i = 0; i < frequency; i += 1) {
        var t2 = (i + 1) / (frequency + 1);
        var dist = pointType === 2 ? Math.sqrt(Math.pow(segment.points[3][0] - segment.points[0][0], 2) + Math.pow(segment.points[3][1] - segment.points[0][1], 2)) : 0;
        var angle = segment.normalAngle(t2);
        var point = segment.point(t2);
        setPoint(outputBezier, point, angle, direction, amplitude, dist / ((frequency + 1) * 2), dist / ((frequency + 1) * 2));
        direction = -direction;
      }
      return direction;
    }
    ZigZagModifier.prototype.processPath = function(path, amplitude, frequency, pointType) {
      var count = path._length;
      var clonedPath = shapePool.newElement();
      clonedPath.c = path.c;
      if (!path.c) {
        count -= 1;
      }
      if (count === 0)
        return clonedPath;
      var direction = -1;
      var segment = PolynomialBezier.shapeSegment(path, 0);
      zigZagCorner(clonedPath, path, 0, amplitude, frequency, pointType, direction);
      for (var i = 0; i < count; i += 1) {
        direction = zigZagSegment(clonedPath, segment, amplitude, frequency, pointType, -direction);
        if (i === count - 1 && !path.c) {
          segment = null;
        } else {
          segment = PolynomialBezier.shapeSegment(path, (i + 1) % count);
        }
        zigZagCorner(clonedPath, path, i + 1, amplitude, frequency, pointType, direction);
      }
      return clonedPath;
    };
    ZigZagModifier.prototype.processShapes = function(_isFirstFrame) {
      var shapePaths;
      var i;
      var len = this.shapes.length;
      var j;
      var jLen;
      var amplitude = this.amplitude.v;
      var frequency = Math.max(0, Math.round(this.frequency.v));
      var pointType = this.pointsType.v;
      if (amplitude !== 0) {
        var shapeData;
        var localShapeCollection;
        for (i = 0; i < len; i += 1) {
          shapeData = this.shapes[i];
          localShapeCollection = shapeData.localShapeCollection;
          if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
            localShapeCollection.releaseShapes();
            shapeData.shape._mdf = true;
            shapePaths = shapeData.shape.paths.shapes;
            jLen = shapeData.shape.paths._length;
            for (j = 0; j < jLen; j += 1) {
              localShapeCollection.addShape(this.processPath(shapePaths[j], amplitude, frequency, pointType));
            }
          }
          shapeData.shape.paths = shapeData.localShapeCollection;
        }
      }
      if (!this.dynamicProperties.length) {
        this._mdf = false;
      }
    };
    function linearOffset(p1, p2, amount) {
      var angle = Math.atan2(p2[0] - p1[0], p2[1] - p1[1]);
      return [polarOffset(p1, angle, amount), polarOffset(p2, angle, amount)];
    }
    function offsetSegment(segment, amount) {
      var p0;
      var p1a;
      var p1b;
      var p2b;
      var p2a;
      var p3;
      var e;
      e = linearOffset(segment.points[0], segment.points[1], amount);
      p0 = e[0];
      p1a = e[1];
      e = linearOffset(segment.points[1], segment.points[2], amount);
      p1b = e[0];
      p2b = e[1];
      e = linearOffset(segment.points[2], segment.points[3], amount);
      p2a = e[0];
      p3 = e[1];
      var p1 = lineIntersection(p0, p1a, p1b, p2b);
      if (p1 === null)
        p1 = p1a;
      var p2 = lineIntersection(p2a, p3, p1b, p2b);
      if (p2 === null)
        p2 = p2a;
      return new PolynomialBezier(p0, p1, p2, p3);
    }
    function joinLines(outputBezier, seg1, seg2, lineJoin, miterLimit) {
      var p0 = seg1.points[3];
      var p1 = seg2.points[0];
      if (lineJoin === 3)
        return p0;
      if (pointEqual(p0, p1))
        return p0;
      if (lineJoin === 2) {
        var angleOut = -seg1.tangentAngle(1);
        var angleIn = -seg2.tangentAngle(0) + Math.PI;
        var center = lineIntersection(p0, polarOffset(p0, angleOut + Math.PI / 2, 100), p1, polarOffset(p1, angleOut + Math.PI / 2, 100));
        var radius = center ? pointDistance(center, p0) : pointDistance(p0, p1) / 2;
        var tan = polarOffset(p0, angleOut, 2 * radius * roundCorner);
        outputBezier.setXYAt(tan[0], tan[1], "o", outputBezier.length() - 1);
        tan = polarOffset(p1, angleIn, 2 * radius * roundCorner);
        outputBezier.setTripleAt(p1[0], p1[1], p1[0], p1[1], tan[0], tan[1], outputBezier.length());
        return p1;
      }
      var t0 = pointEqual(p0, seg1.points[2]) ? seg1.points[0] : seg1.points[2];
      var t1 = pointEqual(p1, seg2.points[1]) ? seg2.points[3] : seg2.points[1];
      var intersection = lineIntersection(t0, p0, p1, t1);
      if (intersection && pointDistance(intersection, p0) < miterLimit) {
        outputBezier.setTripleAt(intersection[0], intersection[1], intersection[0], intersection[1], intersection[0], intersection[1], outputBezier.length());
        return intersection;
      }
      return p0;
    }
    function getIntersection(a, b) {
      var intersect = a.intersections(b);
      if (intersect.length && floatEqual(intersect[0][0], 1))
        intersect.shift();
      if (intersect.length)
        return intersect[0];
      return null;
    }
    function pruneSegmentIntersection(a, b) {
      var outa = a.slice();
      var outb = b.slice();
      var intersect = getIntersection(a[a.length - 1], b[0]);
      if (intersect) {
        outa[a.length - 1] = a[a.length - 1].split(intersect[0])[0];
        outb[0] = b[0].split(intersect[1])[1];
      }
      if (a.length > 1 && b.length > 1) {
        intersect = getIntersection(a[0], b[b.length - 1]);
        if (intersect) {
          return [[a[0].split(intersect[0])[0]], [b[b.length - 1].split(intersect[1])[1]]];
        }
      }
      return [outa, outb];
    }
    function pruneIntersections(segments) {
      var e;
      for (var i = 1; i < segments.length; i += 1) {
        e = pruneSegmentIntersection(segments[i - 1], segments[i]);
        segments[i - 1] = e[0];
        segments[i] = e[1];
      }
      if (segments.length > 1) {
        e = pruneSegmentIntersection(segments[segments.length - 1], segments[0]);
        segments[segments.length - 1] = e[0];
        segments[0] = e[1];
      }
      return segments;
    }
    function offsetSegmentSplit(segment, amount) {
      var flex = segment.inflectionPoints();
      var left;
      var right;
      var split;
      var mid;
      if (flex.length === 0) {
        return [offsetSegment(segment, amount)];
      }
      if (flex.length === 1 || floatEqual(flex[1], 1)) {
        split = segment.split(flex[0]);
        left = split[0];
        right = split[1];
        return [offsetSegment(left, amount), offsetSegment(right, amount)];
      }
      split = segment.split(flex[0]);
      left = split[0];
      var t2 = (flex[1] - flex[0]) / (1 - flex[0]);
      split = split[1].split(t2);
      mid = split[0];
      right = split[1];
      return [offsetSegment(left, amount), offsetSegment(mid, amount), offsetSegment(right, amount)];
    }
    function OffsetPathModifier() {
    }
    extendPrototype([ShapeModifier], OffsetPathModifier);
    OffsetPathModifier.prototype.initModifierProperties = function(elem2, data2) {
      this.getValue = this.processKeys;
      this.amount = PropertyFactory.getProp(elem2, data2.a, 0, null, this);
      this.miterLimit = PropertyFactory.getProp(elem2, data2.ml, 0, null, this);
      this.lineJoin = data2.lj;
      this._isAnimated = this.amount.effectsSequence.length !== 0;
    };
    OffsetPathModifier.prototype.processPath = function(inputBezier, amount, lineJoin, miterLimit) {
      var outputBezier = shapePool.newElement();
      outputBezier.c = inputBezier.c;
      var count = inputBezier.length();
      if (!inputBezier.c) {
        count -= 1;
      }
      var i;
      var j;
      var segment;
      var multiSegments = [];
      for (i = 0; i < count; i += 1) {
        segment = PolynomialBezier.shapeSegment(inputBezier, i);
        multiSegments.push(offsetSegmentSplit(segment, amount));
      }
      if (!inputBezier.c) {
        for (i = count - 1; i >= 0; i -= 1) {
          segment = PolynomialBezier.shapeSegmentInverted(inputBezier, i);
          multiSegments.push(offsetSegmentSplit(segment, amount));
        }
      }
      multiSegments = pruneIntersections(multiSegments);
      var lastPoint = null;
      var lastSeg = null;
      for (i = 0; i < multiSegments.length; i += 1) {
        var multiSegment = multiSegments[i];
        if (lastSeg)
          lastPoint = joinLines(outputBezier, lastSeg, multiSegment[0], lineJoin, miterLimit);
        lastSeg = multiSegment[multiSegment.length - 1];
        for (j = 0; j < multiSegment.length; j += 1) {
          segment = multiSegment[j];
          if (lastPoint && pointEqual(segment.points[0], lastPoint)) {
            outputBezier.setXYAt(segment.points[1][0], segment.points[1][1], "o", outputBezier.length() - 1);
          } else {
            outputBezier.setTripleAt(segment.points[0][0], segment.points[0][1], segment.points[1][0], segment.points[1][1], segment.points[0][0], segment.points[0][1], outputBezier.length());
          }
          outputBezier.setTripleAt(segment.points[3][0], segment.points[3][1], segment.points[3][0], segment.points[3][1], segment.points[2][0], segment.points[2][1], outputBezier.length());
          lastPoint = segment.points[3];
        }
      }
      if (multiSegments.length)
        joinLines(outputBezier, lastSeg, multiSegments[0][0], lineJoin, miterLimit);
      return outputBezier;
    };
    OffsetPathModifier.prototype.processShapes = function(_isFirstFrame) {
      var shapePaths;
      var i;
      var len = this.shapes.length;
      var j;
      var jLen;
      var amount = this.amount.v;
      var miterLimit = this.miterLimit.v;
      var lineJoin = this.lineJoin;
      if (amount !== 0) {
        var shapeData;
        var localShapeCollection;
        for (i = 0; i < len; i += 1) {
          shapeData = this.shapes[i];
          localShapeCollection = shapeData.localShapeCollection;
          if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {
            localShapeCollection.releaseShapes();
            shapeData.shape._mdf = true;
            shapePaths = shapeData.shape.paths.shapes;
            jLen = shapeData.shape.paths._length;
            for (j = 0; j < jLen; j += 1) {
              localShapeCollection.addShape(this.processPath(shapePaths[j], amount, lineJoin, miterLimit));
            }
          }
          shapeData.shape.paths = shapeData.localShapeCollection;
        }
      }
      if (!this.dynamicProperties.length) {
        this._mdf = false;
      }
    };
    function getFontProperties(fontData) {
      var styles = fontData.fStyle ? fontData.fStyle.split(" ") : [];
      var fWeight = "normal";
      var fStyle = "normal";
      var len = styles.length;
      var styleName;
      for (var i = 0; i < len; i += 1) {
        styleName = styles[i].toLowerCase();
        switch (styleName) {
          case "italic":
            fStyle = "italic";
            break;
          case "bold":
            fWeight = "700";
            break;
          case "black":
            fWeight = "900";
            break;
          case "medium":
            fWeight = "500";
            break;
          case "regular":
          case "normal":
            fWeight = "400";
            break;
          case "light":
          case "thin":
            fWeight = "200";
            break;
        }
      }
      return {
        style: fStyle,
        weight: fontData.fWeight || fWeight
      };
    }
    var FontManager = function() {
      var maxWaitingTime = 5e3;
      var emptyChar = {
        w: 0,
        size: 0,
        shapes: [],
        data: {
          shapes: []
        }
      };
      var combinedCharacters = [];
      combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
      var surrogateModifiers = ["d83cdffb", "d83cdffc", "d83cdffd", "d83cdffe", "d83cdfff"];
      var zeroWidthJoiner = [65039, 8205];
      function trimFontOptions(font) {
        var familyArray = font.split(",");
        var i;
        var len = familyArray.length;
        var enabledFamilies = [];
        for (i = 0; i < len; i += 1) {
          if (familyArray[i] !== "sans-serif" && familyArray[i] !== "monospace") {
            enabledFamilies.push(familyArray[i]);
          }
        }
        return enabledFamilies.join(",");
      }
      function setUpNode(font, family) {
        var parentNode = createTag("span");
        parentNode.setAttribute("aria-hidden", true);
        parentNode.style.fontFamily = family;
        var node = createTag("span");
        node.innerText = "giItT1WQy@!-/#";
        parentNode.style.position = "absolute";
        parentNode.style.left = "-10000px";
        parentNode.style.top = "-10000px";
        parentNode.style.fontSize = "300px";
        parentNode.style.fontVariant = "normal";
        parentNode.style.fontStyle = "normal";
        parentNode.style.fontWeight = "normal";
        parentNode.style.letterSpacing = "0";
        parentNode.appendChild(node);
        document.body.appendChild(parentNode);
        var width2 = node.offsetWidth;
        node.style.fontFamily = trimFontOptions(font) + ", " + family;
        return {
          node,
          w: width2,
          parent: parentNode
        };
      }
      function checkLoadedFonts() {
        var i;
        var len = this.fonts.length;
        var node;
        var w2;
        var loadedCount = len;
        for (i = 0; i < len; i += 1) {
          if (this.fonts[i].loaded) {
            loadedCount -= 1;
          } else if (this.fonts[i].fOrigin === "n" || this.fonts[i].origin === 0) {
            this.fonts[i].loaded = true;
          } else {
            node = this.fonts[i].monoCase.node;
            w2 = this.fonts[i].monoCase.w;
            if (node.offsetWidth !== w2) {
              loadedCount -= 1;
              this.fonts[i].loaded = true;
            } else {
              node = this.fonts[i].sansCase.node;
              w2 = this.fonts[i].sansCase.w;
              if (node.offsetWidth !== w2) {
                loadedCount -= 1;
                this.fonts[i].loaded = true;
              }
            }
            if (this.fonts[i].loaded) {
              this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);
              this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);
            }
          }
        }
        if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {
          setTimeout(this.checkLoadedFontsBinded, 20);
        } else {
          setTimeout(this.setIsLoadedBinded, 10);
        }
      }
      function createHelper(fontData, def) {
        var engine = document.body && def ? "svg" : "canvas";
        var helper;
        var fontProps = getFontProperties(fontData);
        if (engine === "svg") {
          var tHelper = createNS("text");
          tHelper.style.fontSize = "100px";
          tHelper.setAttribute("font-family", fontData.fFamily);
          tHelper.setAttribute("font-style", fontProps.style);
          tHelper.setAttribute("font-weight", fontProps.weight);
          tHelper.textContent = "1";
          if (fontData.fClass) {
            tHelper.style.fontFamily = "inherit";
            tHelper.setAttribute("class", fontData.fClass);
          } else {
            tHelper.style.fontFamily = fontData.fFamily;
          }
          def.appendChild(tHelper);
          helper = tHelper;
        } else {
          var tCanvasHelper = new OffscreenCanvas(500, 500).getContext("2d");
          tCanvasHelper.font = fontProps.style + " " + fontProps.weight + " 100px " + fontData.fFamily;
          helper = tCanvasHelper;
        }
        function measure(text2) {
          if (engine === "svg") {
            helper.textContent = text2;
            return helper.getComputedTextLength();
          }
          return helper.measureText(text2).width;
        }
        return {
          measureText: measure
        };
      }
      function addFonts(fontData, defs) {
        if (!fontData) {
          this.isLoaded = true;
          return;
        }
        if (this.chars) {
          this.isLoaded = true;
          this.fonts = fontData.list;
          return;
        }
        if (!document.body) {
          this.isLoaded = true;
          fontData.list.forEach(function(data2) {
            data2.helper = createHelper(data2);
            data2.cache = {};
          });
          this.fonts = fontData.list;
          return;
        }
        var fontArr = fontData.list;
        var i;
        var len = fontArr.length;
        var _pendingFonts = len;
        for (i = 0; i < len; i += 1) {
          var shouldLoadFont = true;
          var loadedSelector;
          var j;
          fontArr[i].loaded = false;
          fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, "monospace");
          fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, "sans-serif");
          if (!fontArr[i].fPath) {
            fontArr[i].loaded = true;
            _pendingFonts -= 1;
          } else if (fontArr[i].fOrigin === "p" || fontArr[i].origin === 3) {
            loadedSelector = document.querySelectorAll('style[f-forigin="p"][f-family="' + fontArr[i].fFamily + '"], style[f-origin="3"][f-family="' + fontArr[i].fFamily + '"]');
            if (loadedSelector.length > 0) {
              shouldLoadFont = false;
            }
            if (shouldLoadFont) {
              var s = createTag("style");
              s.setAttribute("f-forigin", fontArr[i].fOrigin);
              s.setAttribute("f-origin", fontArr[i].origin);
              s.setAttribute("f-family", fontArr[i].fFamily);
              s.type = "text/css";
              s.innerText = "@font-face {font-family: " + fontArr[i].fFamily + "; font-style: normal; src: url('" + fontArr[i].fPath + "');}";
              defs.appendChild(s);
            }
          } else if (fontArr[i].fOrigin === "g" || fontArr[i].origin === 1) {
            loadedSelector = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]');
            for (j = 0; j < loadedSelector.length; j += 1) {
              if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {
                shouldLoadFont = false;
              }
            }
            if (shouldLoadFont) {
              var l2 = createTag("link");
              l2.setAttribute("f-forigin", fontArr[i].fOrigin);
              l2.setAttribute("f-origin", fontArr[i].origin);
              l2.type = "text/css";
              l2.rel = "stylesheet";
              l2.href = fontArr[i].fPath;
              document.body.appendChild(l2);
            }
          } else if (fontArr[i].fOrigin === "t" || fontArr[i].origin === 2) {
            loadedSelector = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]');
            for (j = 0; j < loadedSelector.length; j += 1) {
              if (fontArr[i].fPath === loadedSelector[j].src) {
                shouldLoadFont = false;
              }
            }
            if (shouldLoadFont) {
              var sc2 = createTag("link");
              sc2.setAttribute("f-forigin", fontArr[i].fOrigin);
              sc2.setAttribute("f-origin", fontArr[i].origin);
              sc2.setAttribute("rel", "stylesheet");
              sc2.setAttribute("href", fontArr[i].fPath);
              defs.appendChild(sc2);
            }
          }
          fontArr[i].helper = createHelper(fontArr[i], defs);
          fontArr[i].cache = {};
          this.fonts.push(fontArr[i]);
        }
        if (_pendingFonts === 0) {
          this.isLoaded = true;
        } else {
          setTimeout(this.checkLoadedFonts.bind(this), 100);
        }
      }
      function addChars(chars) {
        if (!chars) {
          return;
        }
        if (!this.chars) {
          this.chars = [];
        }
        var i;
        var len = chars.length;
        var j;
        var jLen = this.chars.length;
        var found;
        for (i = 0; i < len; i += 1) {
          j = 0;
          found = false;
          while (j < jLen) {
            if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {
              found = true;
            }
            j += 1;
          }
          if (!found) {
            this.chars.push(chars[i]);
            jLen += 1;
          }
        }
      }
      function getCharData(_char, style, font) {
        var i = 0;
        var len = this.chars.length;
        while (i < len) {
          if (this.chars[i].ch === _char && this.chars[i].style === style && this.chars[i].fFamily === font) {
            return this.chars[i];
          }
          i += 1;
        }
        if ((typeof _char === "string" && _char.charCodeAt(0) !== 13 || !_char) && console && console.warn && !this._warned) {
          this._warned = true;
          console.warn("Missing character from exported characters list: ", _char, style, font);
        }
        return emptyChar;
      }
      function measureText(_char2, fontName, size) {
        var fontData = this.getFontByName(fontName);
        var index2 = _char2.charCodeAt(0);
        if (!fontData.cache[index2 + 1]) {
          var tHelper = fontData.helper;
          if (_char2 === " ") {
            var doubleSize = tHelper.measureText("|" + _char2 + "|");
            var singleSize = tHelper.measureText("||");
            fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;
          } else {
            fontData.cache[index2 + 1] = tHelper.measureText(_char2) / 100;
          }
        }
        return fontData.cache[index2 + 1] * size;
      }
      function getFontByName(name2) {
        var i = 0;
        var len = this.fonts.length;
        while (i < len) {
          if (this.fonts[i].fName === name2) {
            return this.fonts[i];
          }
          i += 1;
        }
        return this.fonts[0];
      }
      function isModifier(firstCharCode, secondCharCode) {
        var sum2 = firstCharCode.toString(16) + secondCharCode.toString(16);
        return surrogateModifiers.indexOf(sum2) !== -1;
      }
      function isZeroWidthJoiner(firstCharCode, secondCharCode) {
        if (!secondCharCode) {
          return firstCharCode === zeroWidthJoiner[1];
        }
        return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];
      }
      function isCombinedCharacter(_char3) {
        return combinedCharacters.indexOf(_char3) !== -1;
      }
      function setIsLoaded() {
        this.isLoaded = true;
      }
      var Font = function Font2() {
        this.fonts = [];
        this.chars = null;
        this.typekitLoaded = 0;
        this.isLoaded = false;
        this._warned = false;
        this.initTime = Date.now();
        this.setIsLoadedBinded = this.setIsLoaded.bind(this);
        this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);
      };
      Font.isModifier = isModifier;
      Font.isZeroWidthJoiner = isZeroWidthJoiner;
      Font.isCombinedCharacter = isCombinedCharacter;
      var fontPrototype = {
        addChars,
        addFonts,
        getCharData,
        getFontByName,
        measureText,
        checkLoadedFonts,
        setIsLoaded
      };
      Font.prototype = fontPrototype;
      return Font;
    }();
    function RenderableElement() {
    }
    RenderableElement.prototype = {
      initRenderable: function initRenderable() {
        this.isInRange = false;
        this.hidden = false;
        this.isTransparent = false;
        this.renderableComponents = [];
      },
      addRenderableComponent: function addRenderableComponent(component) {
        if (this.renderableComponents.indexOf(component) === -1) {
          this.renderableComponents.push(component);
        }
      },
      removeRenderableComponent: function removeRenderableComponent(component) {
        if (this.renderableComponents.indexOf(component) !== -1) {
          this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);
        }
      },
      prepareRenderableFrame: function prepareRenderableFrame(num) {
        this.checkLayerLimits(num);
      },
      checkTransparency: function checkTransparency() {
        if (this.finalTransform.mProp.o.v <= 0) {
          if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {
            this.isTransparent = true;
            this.hide();
          }
        } else if (this.isTransparent) {
          this.isTransparent = false;
          this.show();
        }
      },
      /**
         * @function
         * Initializes frame related properties.
         *
         * @param {number} num
         * current frame number in Layer's time
         *
         */
      checkLayerLimits: function checkLayerLimits(num) {
        if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {
          if (this.isInRange !== true) {
            this.globalData._mdf = true;
            this._mdf = true;
            this.isInRange = true;
            this.show();
          }
        } else if (this.isInRange !== false) {
          this.globalData._mdf = true;
          this.isInRange = false;
          this.hide();
        }
      },
      renderRenderable: function renderRenderable() {
        var i;
        var len = this.renderableComponents.length;
        for (i = 0; i < len; i += 1) {
          this.renderableComponents[i].renderFrame(this._isFirstFrame);
        }
      },
      sourceRectAtTime: function sourceRectAtTime2() {
        return {
          top: 0,
          left: 0,
          width: 100,
          height: 100
        };
      },
      getLayerSize: function getLayerSize() {
        if (this.data.ty === 5) {
          return {
            w: this.data.textData.width,
            h: this.data.textData.height
          };
        }
        return {
          w: this.data.width,
          h: this.data.height
        };
      }
    };
    var getBlendMode = function() {
      var blendModeEnums = {
        0: "source-over",
        1: "multiply",
        2: "screen",
        3: "overlay",
        4: "darken",
        5: "lighten",
        6: "color-dodge",
        7: "color-burn",
        8: "hard-light",
        9: "soft-light",
        10: "difference",
        11: "exclusion",
        12: "hue",
        13: "saturation",
        14: "color",
        15: "luminosity"
      };
      return function(mode) {
        return blendModeEnums[mode] || "";
      };
    }();
    function SliderEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
    }
    function AngleEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
    }
    function ColorEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);
    }
    function PointEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 1, 0, container);
    }
    function LayerIndexEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
    }
    function MaskIndexEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
    }
    function CheckboxEffect(data2, elem2, container) {
      this.p = PropertyFactory.getProp(elem2, data2.v, 0, 0, container);
    }
    function NoValueEffect() {
      this.p = {};
    }
    function EffectsManager(data2, element) {
      var effects = data2.ef || [];
      this.effectElements = [];
      var i;
      var len = effects.length;
      var effectItem;
      for (i = 0; i < len; i += 1) {
        effectItem = new GroupEffect(effects[i], element);
        this.effectElements.push(effectItem);
      }
    }
    function GroupEffect(data2, element) {
      this.init(data2, element);
    }
    extendPrototype([DynamicPropertyContainer], GroupEffect);
    GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;
    GroupEffect.prototype.init = function(data2, element) {
      this.data = data2;
      this.effectElements = [];
      this.initDynamicPropertyContainer(element);
      var i;
      var len = this.data.ef.length;
      var eff;
      var effects = this.data.ef;
      for (i = 0; i < len; i += 1) {
        eff = null;
        switch (effects[i].ty) {
          case 0:
            eff = new SliderEffect(effects[i], element, this);
            break;
          case 1:
            eff = new AngleEffect(effects[i], element, this);
            break;
          case 2:
            eff = new ColorEffect(effects[i], element, this);
            break;
          case 3:
            eff = new PointEffect(effects[i], element, this);
            break;
          case 4:
          case 7:
            eff = new CheckboxEffect(effects[i], element, this);
            break;
          case 10:
            eff = new LayerIndexEffect(effects[i], element, this);
            break;
          case 11:
            eff = new MaskIndexEffect(effects[i], element, this);
            break;
          case 5:
            eff = new EffectsManager(effects[i], element);
            break;
          default:
            eff = new NoValueEffect(effects[i]);
            break;
        }
        if (eff) {
          this.effectElements.push(eff);
        }
      }
    };
    function BaseElement() {
    }
    BaseElement.prototype = {
      checkMasks: function checkMasks() {
        if (!this.data.hasMask) {
          return false;
        }
        var i = 0;
        var len = this.data.masksProperties.length;
        while (i < len) {
          if (this.data.masksProperties[i].mode !== "n" && this.data.masksProperties[i].cl !== false) {
            return true;
          }
          i += 1;
        }
        return false;
      },
      initExpressions: function initExpressions() {
        var expressionsInterfaces2 = getExpressionInterfaces();
        if (!expressionsInterfaces2) {
          return;
        }
        var LayerExpressionInterface2 = expressionsInterfaces2("layer");
        var EffectsExpressionInterface2 = expressionsInterfaces2("effects");
        var ShapeExpressionInterface2 = expressionsInterfaces2("shape");
        var TextExpressionInterface2 = expressionsInterfaces2("text");
        var CompExpressionInterface2 = expressionsInterfaces2("comp");
        this.layerInterface = LayerExpressionInterface2(this);
        if (this.data.hasMask && this.maskManager) {
          this.layerInterface.registerMaskInterface(this.maskManager);
        }
        var effectsInterface = EffectsExpressionInterface2.createEffectsInterface(this, this.layerInterface);
        this.layerInterface.registerEffectsInterface(effectsInterface);
        if (this.data.ty === 0 || this.data.xt) {
          this.compInterface = CompExpressionInterface2(this);
        } else if (this.data.ty === 4) {
          this.layerInterface.shapeInterface = ShapeExpressionInterface2(this.shapesData, this.itemsData, this.layerInterface);
          this.layerInterface.content = this.layerInterface.shapeInterface;
        } else if (this.data.ty === 5) {
          this.layerInterface.textInterface = TextExpressionInterface2(this);
          this.layerInterface.text = this.layerInterface.textInterface;
        }
      },
      setBlendMode: function setBlendMode() {
        var blendModeValue = getBlendMode(this.data.bm);
        var elem2 = this.baseElement || this.layerElement;
        elem2.style["mix-blend-mode"] = blendModeValue;
      },
      initBaseData: function initBaseData(data2, globalData2, comp2) {
        this.globalData = globalData2;
        this.comp = comp2;
        this.data = data2;
        this.layerId = createElementID();
        if (!this.data.sr) {
          this.data.sr = 1;
        }
        this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);
      },
      getType: function getType() {
        return this.type;
      },
      sourceRectAtTime: function sourceRectAtTime2() {
      }
    };
    function FrameElement() {
    }
    FrameElement.prototype = {
      /**
         * @function
         * Initializes frame related properties.
         *
         */
      initFrame: function initFrame() {
        this._isFirstFrame = false;
        this.dynamicProperties = [];
        this._mdf = false;
      },
      /**
         * @function
         * Calculates all dynamic values
         *
         * @param {number} num
         * current frame number in Layer's time
         * @param {boolean} isVisible
         * if layers is currently in range
         *
         */
      prepareProperties: function prepareProperties(num, isVisible) {
        var i;
        var len = this.dynamicProperties.length;
        for (i = 0; i < len; i += 1) {
          if (isVisible || this._isParent && this.dynamicProperties[i].propType === "transform") {
            this.dynamicProperties[i].getValue();
            if (this.dynamicProperties[i]._mdf) {
              this.globalData._mdf = true;
              this._mdf = true;
            }
          }
        }
      },
      addDynamicProperty: function addDynamicProperty(prop) {
        if (this.dynamicProperties.indexOf(prop) === -1) {
          this.dynamicProperties.push(prop);
        }
      }
    };
    function FootageElement(data2, globalData2, comp2) {
      this.initFrame();
      this.initRenderable();
      this.assetData = globalData2.getAssetData(data2.refId);
      this.footageData = globalData2.imageLoader.getAsset(this.assetData);
      this.initBaseData(data2, globalData2, comp2);
    }
    FootageElement.prototype.prepareFrame = function() {
    };
    extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);
    FootageElement.prototype.getBaseElement = function() {
      return null;
    };
    FootageElement.prototype.renderFrame = function() {
    };
    FootageElement.prototype.destroy = function() {
    };
    FootageElement.prototype.initExpressions = function() {
      var expressionsInterfaces2 = getExpressionInterfaces();
      if (!expressionsInterfaces2) {
        return;
      }
      var FootageInterface2 = expressionsInterfaces2("footage");
      this.layerInterface = FootageInterface2(this);
    };
    FootageElement.prototype.getFootageData = function() {
      return this.footageData;
    };
    function AudioElement(data2, globalData2, comp2) {
      this.initFrame();
      this.initRenderable();
      this.assetData = globalData2.getAssetData(data2.refId);
      this.initBaseData(data2, globalData2, comp2);
      this._isPlaying = false;
      this._canPlay = false;
      var assetPath = this.globalData.getAssetsPath(this.assetData);
      this.audio = this.globalData.audioController.createAudio(assetPath);
      this._currentTime = 0;
      this.globalData.audioController.addAudio(this);
      this._volumeMultiplier = 1;
      this._volume = 1;
      this._previousVolume = null;
      this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {
        _placeholder: true
      };
      this.lv = PropertyFactory.getProp(this, data2.au && data2.au.lv ? data2.au.lv : {
        k: [100]
      }, 1, 0.01, this);
    }
    AudioElement.prototype.prepareFrame = function(num) {
      this.prepareRenderableFrame(num, true);
      this.prepareProperties(num, true);
      if (!this.tm._placeholder) {
        var timeRemapped = this.tm.v;
        this._currentTime = timeRemapped;
      } else {
        this._currentTime = num / this.data.sr;
      }
      this._volume = this.lv.v[0];
      var totalVolume = this._volume * this._volumeMultiplier;
      if (this._previousVolume !== totalVolume) {
        this._previousVolume = totalVolume;
        this.audio.volume(totalVolume);
      }
    };
    extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);
    AudioElement.prototype.renderFrame = function() {
      if (this.isInRange && this._canPlay) {
        if (!this._isPlaying) {
          this.audio.play();
          this.audio.seek(this._currentTime / this.globalData.frameRate);
          this._isPlaying = true;
        } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {
          this.audio.seek(this._currentTime / this.globalData.frameRate);
        }
      }
    };
    AudioElement.prototype.show = function() {
    };
    AudioElement.prototype.hide = function() {
      this.audio.pause();
      this._isPlaying = false;
    };
    AudioElement.prototype.pause = function() {
      this.audio.pause();
      this._isPlaying = false;
      this._canPlay = false;
    };
    AudioElement.prototype.resume = function() {
      this._canPlay = true;
    };
    AudioElement.prototype.setRate = function(rateValue) {
      this.audio.rate(rateValue);
    };
    AudioElement.prototype.volume = function(volumeValue) {
      this._volumeMultiplier = volumeValue;
      this._previousVolume = volumeValue * this._volume;
      this.audio.volume(this._previousVolume);
    };
    AudioElement.prototype.getBaseElement = function() {
      return null;
    };
    AudioElement.prototype.destroy = function() {
    };
    AudioElement.prototype.sourceRectAtTime = function() {
    };
    AudioElement.prototype.initExpressions = function() {
    };
    function BaseRenderer() {
    }
    BaseRenderer.prototype.checkLayers = function(num) {
      var i;
      var len = this.layers.length;
      var data2;
      this.completeLayers = true;
      for (i = len - 1; i >= 0; i -= 1) {
        if (!this.elements[i]) {
          data2 = this.layers[i];
          if (data2.ip - data2.st <= num - this.layers[i].st && data2.op - data2.st > num - this.layers[i].st) {
            this.buildItem(i);
          }
        }
        this.completeLayers = this.elements[i] ? this.completeLayers : false;
      }
      this.checkPendingElements();
    };
    BaseRenderer.prototype.createItem = function(layer) {
      switch (layer.ty) {
        case 2:
          return this.createImage(layer);
        case 0:
          return this.createComp(layer);
        case 1:
          return this.createSolid(layer);
        case 3:
          return this.createNull(layer);
        case 4:
          return this.createShape(layer);
        case 5:
          return this.createText(layer);
        case 6:
          return this.createAudio(layer);
        case 13:
          return this.createCamera(layer);
        case 15:
          return this.createFootage(layer);
        default:
          return this.createNull(layer);
      }
    };
    BaseRenderer.prototype.createCamera = function() {
      throw new Error("You're using a 3d camera. Try the html renderer.");
    };
    BaseRenderer.prototype.createAudio = function(data2) {
      return new AudioElement(data2, this.globalData, this);
    };
    BaseRenderer.prototype.createFootage = function(data2) {
      return new FootageElement(data2, this.globalData, this);
    };
    BaseRenderer.prototype.buildAllItems = function() {
      var i;
      var len = this.layers.length;
      for (i = 0; i < len; i += 1) {
        this.buildItem(i);
      }
      this.checkPendingElements();
    };
    BaseRenderer.prototype.includeLayers = function(newLayers) {
      this.completeLayers = false;
      var i;
      var len = newLayers.length;
      var j;
      var jLen = this.layers.length;
      for (i = 0; i < len; i += 1) {
        j = 0;
        while (j < jLen) {
          if (this.layers[j].id === newLayers[i].id) {
            this.layers[j] = newLayers[i];
            break;
          }
          j += 1;
        }
      }
    };
    BaseRenderer.prototype.setProjectInterface = function(pInterface) {
      this.globalData.projectInterface = pInterface;
    };
    BaseRenderer.prototype.initItems = function() {
      if (!this.globalData.progressiveLoad) {
        this.buildAllItems();
      }
    };
    BaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {
      var elements = this.elements;
      var layers2 = this.layers;
      var i = 0;
      var len = layers2.length;
      while (i < len) {
        if (layers2[i].ind == parentName) {
          if (!elements[i] || elements[i] === true) {
            this.buildItem(i);
            this.addPendingElement(element);
          } else {
            hierarchy.push(elements[i]);
            elements[i].setAsParent();
            if (layers2[i].parent !== void 0) {
              this.buildElementParenting(element, layers2[i].parent, hierarchy);
            } else {
              element.setHierarchy(hierarchy);
            }
          }
        }
        i += 1;
      }
    };
    BaseRenderer.prototype.addPendingElement = function(element) {
      this.pendingElements.push(element);
    };
    BaseRenderer.prototype.searchExtraCompositions = function(assets2) {
      var i;
      var len = assets2.length;
      for (i = 0; i < len; i += 1) {
        if (assets2[i].xt) {
          var comp2 = this.createComp(assets2[i]);
          comp2.initExpressions();
          this.globalData.projectInterface.registerComposition(comp2);
        }
      }
    };
    BaseRenderer.prototype.getElementById = function(ind) {
      var i;
      var len = this.elements.length;
      for (i = 0; i < len; i += 1) {
        if (this.elements[i].data.ind === ind) {
          return this.elements[i];
        }
      }
      return null;
    };
    BaseRenderer.prototype.getElementByPath = function(path) {
      var pathValue = path.shift();
      var element;
      if (typeof pathValue === "number") {
        element = this.elements[pathValue];
      } else {
        var i;
        var len = this.elements.length;
        for (i = 0; i < len; i += 1) {
          if (this.elements[i].data.nm === pathValue) {
            element = this.elements[i];
            break;
          }
        }
      }
      if (path.length === 0) {
        return element;
      }
      return element.getElementByPath(path);
    };
    BaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {
      this.globalData.fontManager = new FontManager();
      this.globalData.fontManager.addChars(animData.chars);
      this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);
      this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);
      this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);
      this.globalData.imageLoader = this.animationItem.imagePreloader;
      this.globalData.audioController = this.animationItem.audioController;
      this.globalData.frameId = 0;
      this.globalData.frameRate = animData.fr;
      this.globalData.nm = animData.nm;
      this.globalData.compSize = {
        w: animData.w,
        h: animData.h
      };
    };
    function TransformElement() {
    }
    TransformElement.prototype = {
      initTransform: function initTransform() {
        this.finalTransform = {
          mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {
            o: 0
          },
          _matMdf: false,
          _opMdf: false,
          mat: new Matrix()
        };
        if (this.data.ao) {
          this.finalTransform.mProp.autoOriented = true;
        }
        if (this.data.ty !== 11)
          ;
      },
      renderTransform: function renderTransform() {
        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;
        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;
        if (this.hierarchy) {
          var mat;
          var finalMat = this.finalTransform.mat;
          var i = 0;
          var len = this.hierarchy.length;
          if (!this.finalTransform._matMdf) {
            while (i < len) {
              if (this.hierarchy[i].finalTransform.mProp._mdf) {
                this.finalTransform._matMdf = true;
                break;
              }
              i += 1;
            }
          }
          if (this.finalTransform._matMdf) {
            mat = this.finalTransform.mProp.v.props;
            finalMat.cloneFromProps(mat);
            for (i = 0; i < len; i += 1) {
              mat = this.hierarchy[i].finalTransform.mProp.v.props;
              finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);
            }
          }
        }
      },
      globalToLocal: function globalToLocal(pt) {
        var transforms = [];
        transforms.push(this.finalTransform);
        var flag = true;
        var comp2 = this.comp;
        while (flag) {
          if (comp2.finalTransform) {
            if (comp2.data.hasMask) {
              transforms.splice(0, 0, comp2.finalTransform);
            }
            comp2 = comp2.comp;
          } else {
            flag = false;
          }
        }
        var i;
        var len = transforms.length;
        var ptNew;
        for (i = 0; i < len; i += 1) {
          ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
          pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
        }
        return pt;
      },
      mHelper: new Matrix()
    };
    function MaskElement(data2, element, globalData2) {
      this.data = data2;
      this.element = element;
      this.globalData = globalData2;
      this.storedData = [];
      this.masksProperties = this.data.masksProperties || [];
      this.maskElement = null;
      var defs = this.globalData.defs;
      var i;
      var len = this.masksProperties ? this.masksProperties.length : 0;
      this.viewData = createSizedArray(len);
      this.solidPath = "";
      var path;
      var properties = this.masksProperties;
      var count = 0;
      var currentMasks = [];
      var j;
      var jLen;
      var layerId = createElementID();
      var rect;
      var expansor;
      var feMorph;
      var x2;
      var maskType = "clipPath";
      var maskRef = "clip-path";
      for (i = 0; i < len; i += 1) {
        if (properties[i].mode !== "a" && properties[i].mode !== "n" || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {
          maskType = "mask";
          maskRef = "mask";
        }
        if ((properties[i].mode === "s" || properties[i].mode === "i") && count === 0) {
          rect = createNS("rect");
          rect.setAttribute("fill", "#ffffff");
          rect.setAttribute("width", this.element.comp.data.w || 0);
          rect.setAttribute("height", this.element.comp.data.h || 0);
          currentMasks.push(rect);
        } else {
          rect = null;
        }
        path = createNS("path");
        if (properties[i].mode === "n") {
          this.viewData[i] = {
            op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
            prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
            elem: path,
            lastPath: ""
          };
          defs.appendChild(path);
        } else {
          count += 1;
          path.setAttribute("fill", properties[i].mode === "s" ? "#000000" : "#ffffff");
          path.setAttribute("clip-rule", "nonzero");
          var filterID;
          if (properties[i].x.k !== 0) {
            maskType = "mask";
            maskRef = "mask";
            x2 = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);
            filterID = createElementID();
            expansor = createNS("filter");
            expansor.setAttribute("id", filterID);
            feMorph = createNS("feMorphology");
            feMorph.setAttribute("operator", "erode");
            feMorph.setAttribute("in", "SourceGraphic");
            feMorph.setAttribute("radius", "0");
            expansor.appendChild(feMorph);
            defs.appendChild(expansor);
            path.setAttribute("stroke", properties[i].mode === "s" ? "#000000" : "#ffffff");
          } else {
            feMorph = null;
            x2 = null;
          }
          this.storedData[i] = {
            elem: path,
            x: x2,
            expan: feMorph,
            lastPath: "",
            lastOperator: "",
            filterId: filterID,
            lastRadius: 0
          };
          if (properties[i].mode === "i") {
            jLen = currentMasks.length;
            var g = createNS("g");
            for (j = 0; j < jLen; j += 1) {
              g.appendChild(currentMasks[j]);
            }
            var mask2 = createNS("mask");
            mask2.setAttribute("mask-type", "alpha");
            mask2.setAttribute("id", layerId + "_" + count);
            mask2.appendChild(path);
            defs.appendChild(mask2);
            g.setAttribute("mask", "url(" + getLocationHref() + "#" + layerId + "_" + count + ")");
            currentMasks.length = 0;
            currentMasks.push(g);
          } else {
            currentMasks.push(path);
          }
          if (properties[i].inv && !this.solidPath) {
            this.solidPath = this.createLayerSolidPath();
          }
          this.viewData[i] = {
            elem: path,
            lastPath: "",
            op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),
            prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),
            invRect: rect
          };
          if (!this.viewData[i].prop.k) {
            this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);
          }
        }
      }
      this.maskElement = createNS(maskType);
      len = currentMasks.length;
      for (i = 0; i < len; i += 1) {
        this.maskElement.appendChild(currentMasks[i]);
      }
      if (count > 0) {
        this.maskElement.setAttribute("id", layerId);
        this.element.maskedElement.setAttribute(maskRef, "url(" + getLocationHref() + "#" + layerId + ")");
        defs.appendChild(this.maskElement);
      }
      if (this.viewData.length) {
        this.element.addRenderableComponent(this);
      }
    }
    MaskElement.prototype.getMaskProperty = function(pos) {
      return this.viewData[pos].prop;
    };
    MaskElement.prototype.renderFrame = function(isFirstFrame) {
      var finalMat = this.element.finalTransform.mat;
      var i;
      var len = this.masksProperties.length;
      for (i = 0; i < len; i += 1) {
        if (this.viewData[i].prop._mdf || isFirstFrame) {
          this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);
        }
        if (this.viewData[i].op._mdf || isFirstFrame) {
          this.viewData[i].elem.setAttribute("fill-opacity", this.viewData[i].op.v);
        }
        if (this.masksProperties[i].mode !== "n") {
          if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {
            this.viewData[i].invRect.setAttribute("transform", finalMat.getInverseMatrix().to2dCSS());
          }
          if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {
            var feMorph = this.storedData[i].expan;
            if (this.storedData[i].x.v < 0) {
              if (this.storedData[i].lastOperator !== "erode") {
                this.storedData[i].lastOperator = "erode";
                this.storedData[i].elem.setAttribute("filter", "url(" + getLocationHref() + "#" + this.storedData[i].filterId + ")");
              }
              feMorph.setAttribute("radius", -this.storedData[i].x.v);
            } else {
              if (this.storedData[i].lastOperator !== "dilate") {
                this.storedData[i].lastOperator = "dilate";
                this.storedData[i].elem.setAttribute("filter", null);
              }
              this.storedData[i].elem.setAttribute("stroke-width", this.storedData[i].x.v * 2);
            }
          }
        }
      }
    };
    MaskElement.prototype.getMaskelement = function() {
      return this.maskElement;
    };
    MaskElement.prototype.createLayerSolidPath = function() {
      var path = "M0,0 ";
      path += " h" + this.globalData.compSize.w;
      path += " v" + this.globalData.compSize.h;
      path += " h-" + this.globalData.compSize.w;
      path += " v-" + this.globalData.compSize.h + " ";
      return path;
    };
    MaskElement.prototype.drawPath = function(pathData, pathNodes, viewData) {
      var pathString = " M" + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
      var i;
      var len;
      len = pathNodes._length;
      for (i = 1; i < len; i += 1) {
        pathString += " C" + pathNodes.o[i - 1][0] + "," + pathNodes.o[i - 1][1] + " " + pathNodes.i[i][0] + "," + pathNodes.i[i][1] + " " + pathNodes.v[i][0] + "," + pathNodes.v[i][1];
      }
      if (pathNodes.c && len > 1) {
        pathString += " C" + pathNodes.o[i - 1][0] + "," + pathNodes.o[i - 1][1] + " " + pathNodes.i[0][0] + "," + pathNodes.i[0][1] + " " + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
      }
      if (viewData.lastPath !== pathString) {
        var pathShapeValue = "";
        if (viewData.elem) {
          if (pathNodes.c) {
            pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;
          }
          viewData.elem.setAttribute("d", pathShapeValue);
        }
        viewData.lastPath = pathString;
      }
    };
    MaskElement.prototype.destroy = function() {
      this.element = null;
      this.globalData = null;
      this.maskElement = null;
      this.data = null;
      this.masksProperties = null;
    };
    var filtersFactory = function() {
      var ob2 = {};
      ob2.createFilter = createFilter;
      ob2.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;
      function createFilter(filId, skipCoordinates) {
        var fil = createNS("filter");
        fil.setAttribute("id", filId);
        if (skipCoordinates !== true) {
          fil.setAttribute("filterUnits", "objectBoundingBox");
          fil.setAttribute("x", "0%");
          fil.setAttribute("y", "0%");
          fil.setAttribute("width", "100%");
          fil.setAttribute("height", "100%");
        }
        return fil;
      }
      function createAlphaToLuminanceFilter() {
        var feColorMatrix = createNS("feColorMatrix");
        feColorMatrix.setAttribute("type", "matrix");
        feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
        feColorMatrix.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1");
        return feColorMatrix;
      }
      return ob2;
    }();
    var featureSupport = function() {
      var ob2 = {
        maskType: true,
        svgLumaHidden: true,
        offscreenCanvas: typeof OffscreenCanvas !== "undefined"
      };
      if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) {
        ob2.maskType = false;
      }
      if (/firefox/i.test(navigator.userAgent)) {
        ob2.svgLumaHidden = false;
      }
      return ob2;
    }();
    var registeredEffects = {};
    var idPrefix = "filter_result_";
    function SVGEffects(elem2) {
      var i;
      var source = "SourceGraphic";
      var len = elem2.data.ef ? elem2.data.ef.length : 0;
      var filId = createElementID();
      var fil = filtersFactory.createFilter(filId, true);
      var count = 0;
      this.filters = [];
      var filterManager;
      for (i = 0; i < len; i += 1) {
        filterManager = null;
        var type = elem2.data.ef[i].ty;
        if (registeredEffects[type]) {
          var Effect = registeredEffects[type].effect;
          filterManager = new Effect(fil, elem2.effectsManager.effectElements[i], elem2, idPrefix + count, source);
          source = idPrefix + count;
          if (registeredEffects[type].countsAsEffect) {
            count += 1;
          }
        }
        if (filterManager) {
          this.filters.push(filterManager);
        }
      }
      if (count) {
        elem2.globalData.defs.appendChild(fil);
        elem2.layerElement.setAttribute("filter", "url(" + getLocationHref() + "#" + filId + ")");
      }
      if (this.filters.length) {
        elem2.addRenderableComponent(this);
      }
    }
    SVGEffects.prototype.renderFrame = function(_isFirstFrame) {
      var i;
      var len = this.filters.length;
      for (i = 0; i < len; i += 1) {
        this.filters[i].renderFrame(_isFirstFrame);
      }
    };
    function registerEffect(id2, effect2, countsAsEffect) {
      registeredEffects[id2] = {
        effect: effect2,
        countsAsEffect
      };
    }
    function SVGBaseElement() {
    }
    SVGBaseElement.prototype = {
      initRendererElement: function initRendererElement() {
        this.layerElement = createNS("g");
      },
      createContainerElements: function createContainerElements() {
        this.matteElement = createNS("g");
        this.transformedElement = this.layerElement;
        this.maskedElement = this.layerElement;
        this._sizeChanged = false;
        var layerElementParent = null;
        if (this.data.td) {
          this.matteMasks = {};
          var gg2 = createNS("g");
          gg2.setAttribute("id", this.layerId);
          gg2.appendChild(this.layerElement);
          layerElementParent = gg2;
          this.globalData.defs.appendChild(gg2);
        } else if (this.data.tt) {
          this.matteElement.appendChild(this.layerElement);
          layerElementParent = this.matteElement;
          this.baseElement = this.matteElement;
        } else {
          this.baseElement = this.layerElement;
        }
        if (this.data.ln) {
          this.layerElement.setAttribute("id", this.data.ln);
        }
        if (this.data.cl) {
          this.layerElement.setAttribute("class", this.data.cl);
        }
        if (this.data.ty === 0 && !this.data.hd) {
          var cp = createNS("clipPath");
          var pt = createNS("path");
          pt.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
          var clipId = createElementID();
          cp.setAttribute("id", clipId);
          cp.appendChild(pt);
          this.globalData.defs.appendChild(cp);
          if (this.checkMasks()) {
            var cpGroup = createNS("g");
            cpGroup.setAttribute("clip-path", "url(" + getLocationHref() + "#" + clipId + ")");
            cpGroup.appendChild(this.layerElement);
            this.transformedElement = cpGroup;
            if (layerElementParent) {
              layerElementParent.appendChild(this.transformedElement);
            } else {
              this.baseElement = this.transformedElement;
            }
          } else {
            this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + clipId + ")");
          }
        }
        if (this.data.bm !== 0) {
          this.setBlendMode();
        }
      },
      renderElement: function renderElement() {
        if (this.finalTransform._matMdf) {
          this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS());
        }
        if (this.finalTransform._opMdf) {
          this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
        }
      },
      destroyBaseElement: function destroyBaseElement() {
        this.layerElement = null;
        this.matteElement = null;
        this.maskManager.destroy();
      },
      getBaseElement: function getBaseElement() {
        if (this.data.hd) {
          return null;
        }
        return this.baseElement;
      },
      createRenderableComponents: function createRenderableComponents() {
        this.maskManager = new MaskElement(this.data, this, this.globalData);
        this.renderableEffectsManager = new SVGEffects(this);
      },
      getMatte: function getMatte(matteType) {
        if (!this.matteMasks) {
          this.matteMasks = {};
        }
        if (!this.matteMasks[matteType]) {
          var id2 = this.layerId + "_" + matteType;
          var filId;
          var fil;
          var useElement;
          var gg2;
          if (matteType === 1 || matteType === 3) {
            var masker = createNS("mask");
            masker.setAttribute("id", id2);
            masker.setAttribute("mask-type", matteType === 3 ? "luminance" : "alpha");
            useElement = createNS("use");
            useElement.setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId);
            masker.appendChild(useElement);
            this.globalData.defs.appendChild(masker);
            if (!featureSupport.maskType && matteType === 1) {
              masker.setAttribute("mask-type", "luminance");
              filId = createElementID();
              fil = filtersFactory.createFilter(filId);
              this.globalData.defs.appendChild(fil);
              fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
              gg2 = createNS("g");
              gg2.appendChild(useElement);
              masker.appendChild(gg2);
              gg2.setAttribute("filter", "url(" + getLocationHref() + "#" + filId + ")");
            }
          } else if (matteType === 2) {
            var maskGroup = createNS("mask");
            maskGroup.setAttribute("id", id2);
            maskGroup.setAttribute("mask-type", "alpha");
            var maskGrouper = createNS("g");
            maskGroup.appendChild(maskGrouper);
            filId = createElementID();
            fil = filtersFactory.createFilter(filId);
            var feCTr = createNS("feComponentTransfer");
            feCTr.setAttribute("in", "SourceGraphic");
            fil.appendChild(feCTr);
            var feFunc = createNS("feFuncA");
            feFunc.setAttribute("type", "table");
            feFunc.setAttribute("tableValues", "1.0 0.0");
            feCTr.appendChild(feFunc);
            this.globalData.defs.appendChild(fil);
            var alphaRect = createNS("rect");
            alphaRect.setAttribute("width", this.comp.data.w);
            alphaRect.setAttribute("height", this.comp.data.h);
            alphaRect.setAttribute("x", "0");
            alphaRect.setAttribute("y", "0");
            alphaRect.setAttribute("fill", "#ffffff");
            alphaRect.setAttribute("opacity", "0");
            maskGrouper.setAttribute("filter", "url(" + getLocationHref() + "#" + filId + ")");
            maskGrouper.appendChild(alphaRect);
            useElement = createNS("use");
            useElement.setAttributeNS("http://www.w3.org/1999/xlink", "href", "#" + this.layerId);
            maskGrouper.appendChild(useElement);
            if (!featureSupport.maskType) {
              maskGroup.setAttribute("mask-type", "luminance");
              fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());
              gg2 = createNS("g");
              maskGrouper.appendChild(alphaRect);
              gg2.appendChild(this.layerElement);
              maskGrouper.appendChild(gg2);
            }
            this.globalData.defs.appendChild(maskGroup);
          }
          this.matteMasks[matteType] = id2;
        }
        return this.matteMasks[matteType];
      },
      setMatte: function setMatte(id2) {
        if (!this.matteElement) {
          return;
        }
        this.matteElement.setAttribute("mask", "url(" + getLocationHref() + "#" + id2 + ")");
      }
    };
    function HierarchyElement() {
    }
    HierarchyElement.prototype = {
      /**
         * @function
         * Initializes hierarchy properties
         *
         */
      initHierarchy: function initHierarchy() {
        this.hierarchy = [];
        this._isParent = false;
        this.checkParenting();
      },
      /**
         * @function
         * Sets layer's hierarchy.
         * @param {array} hierarch
         * layer's parent list
         *
         */
      setHierarchy: function setHierarchy(hierarchy) {
        this.hierarchy = hierarchy;
      },
      /**
         * @function
         * Sets layer as parent.
         *
         */
      setAsParent: function setAsParent() {
        this._isParent = true;
      },
      /**
         * @function
         * Searches layer's parenting chain
         *
         */
      checkParenting: function checkParenting() {
        if (this.data.parent !== void 0) {
          this.comp.buildElementParenting(this, this.data.parent, []);
        }
      }
    };
    function RenderableDOMElement() {
    }
    (function() {
      var _prototype = {
        initElement: function initElement(data2, globalData2, comp2) {
          this.initFrame();
          this.initBaseData(data2, globalData2, comp2);
          this.initTransform(data2, globalData2, comp2);
          this.initHierarchy();
          this.initRenderable();
          this.initRendererElement();
          this.createContainerElements();
          this.createRenderableComponents();
          this.createContent();
          this.hide();
        },
        hide: function hide() {
          if (!this.hidden && (!this.isInRange || this.isTransparent)) {
            var elem2 = this.baseElement || this.layerElement;
            elem2.style.display = "none";
            this.hidden = true;
          }
        },
        show: function show() {
          if (this.isInRange && !this.isTransparent) {
            if (!this.data.hd) {
              var elem2 = this.baseElement || this.layerElement;
              elem2.style.display = "block";
            }
            this.hidden = false;
            this._isFirstFrame = true;
          }
        },
        renderFrame: function renderFrame() {
          if (this.data.hd || this.hidden) {
            return;
          }
          this.renderTransform();
          this.renderRenderable();
          this.renderElement();
          this.renderInnerContent();
          if (this._isFirstFrame) {
            this._isFirstFrame = false;
          }
        },
        renderInnerContent: function renderInnerContent() {
        },
        prepareFrame: function prepareFrame(num) {
          this._mdf = false;
          this.prepareRenderableFrame(num);
          this.prepareProperties(num, this.isInRange);
          this.checkTransparency();
        },
        destroy: function destroy() {
          this.innerElem = null;
          this.destroyBaseElement();
        }
      };
      extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);
    })();
    function IImageElement(data2, globalData2, comp2) {
      this.assetData = globalData2.getAssetData(data2.refId);
      this.initElement(data2, globalData2, comp2);
      this.sourceRect = {
        top: 0,
        left: 0,
        width: this.assetData.w,
        height: this.assetData.h
      };
    }
    extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);
    IImageElement.prototype.createContent = function() {
      var assetPath = this.globalData.getAssetsPath(this.assetData);
      this.innerElem = createNS("image");
      this.innerElem.setAttribute("width", this.assetData.w + "px");
      this.innerElem.setAttribute("height", this.assetData.h + "px");
      this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);
      this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", assetPath);
      this.layerElement.appendChild(this.innerElem);
    };
    IImageElement.prototype.sourceRectAtTime = function() {
      return this.sourceRect;
    };
    function ProcessedElement(element, position2) {
      this.elem = element;
      this.pos = position2;
    }
    function IShapeElement() {
    }
    IShapeElement.prototype = {
      addShapeToModifiers: function addShapeToModifiers(data2) {
        var i;
        var len = this.shapeModifiers.length;
        for (i = 0; i < len; i += 1) {
          this.shapeModifiers[i].addShape(data2);
        }
      },
      isShapeInAnimatedModifiers: function isShapeInAnimatedModifiers(data2) {
        var i = 0;
        var len = this.shapeModifiers.length;
        while (i < len) {
          if (this.shapeModifiers[i].isAnimatedWithShape(data2)) {
            return true;
          }
        }
        return false;
      },
      renderModifiers: function renderModifiers() {
        if (!this.shapeModifiers.length) {
          return;
        }
        var i;
        var len = this.shapes.length;
        for (i = 0; i < len; i += 1) {
          this.shapes[i].sh.reset();
        }
        len = this.shapeModifiers.length;
        var shouldBreakProcess;
        for (i = len - 1; i >= 0; i -= 1) {
          shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);
          if (shouldBreakProcess) {
            break;
          }
        }
      },
      searchProcessedElement: function searchProcessedElement(elem2) {
        var elements = this.processedElements;
        var i = 0;
        var len = elements.length;
        while (i < len) {
          if (elements[i].elem === elem2) {
            return elements[i].pos;
          }
          i += 1;
        }
        return 0;
      },
      addProcessedElement: function addProcessedElement(elem2, pos) {
        var elements = this.processedElements;
        var i = elements.length;
        while (i) {
          i -= 1;
          if (elements[i].elem === elem2) {
            elements[i].pos = pos;
            return;
          }
        }
        elements.push(new ProcessedElement(elem2, pos));
      },
      prepareFrame: function prepareFrame(num) {
        this.prepareRenderableFrame(num);
        this.prepareProperties(num, this.isInRange);
      }
    };
    var lineCapEnum = {
      1: "butt",
      2: "round",
      3: "square"
    };
    var lineJoinEnum = {
      1: "miter",
      2: "round",
      3: "bevel"
    };
    function SVGShapeData(transformers, level, shape) {
      this.caches = [];
      this.styles = [];
      this.transformers = transformers;
      this.lStr = "";
      this.sh = shape;
      this.lvl = level;
      this._isAnimated = !!shape.k;
      var i = 0;
      var len = transformers.length;
      while (i < len) {
        if (transformers[i].mProps.dynamicProperties.length) {
          this._isAnimated = true;
          break;
        }
        i += 1;
      }
    }
    SVGShapeData.prototype.setAsAnimated = function() {
      this._isAnimated = true;
    };
    function SVGStyleData(data2, level) {
      this.data = data2;
      this.type = data2.ty;
      this.d = "";
      this.lvl = level;
      this._mdf = false;
      this.closed = data2.hd === true;
      this.pElem = createNS("path");
      this.msElem = null;
    }
    SVGStyleData.prototype.reset = function() {
      this.d = "";
      this._mdf = false;
    };
    function DashProperty(elem2, data2, renderer, container) {
      this.elem = elem2;
      this.frameId = -1;
      this.dataProps = createSizedArray(data2.length);
      this.renderer = renderer;
      this.k = false;
      this.dashStr = "";
      this.dashArray = createTypedArray("float32", data2.length ? data2.length - 1 : 0);
      this.dashoffset = createTypedArray("float32", 1);
      this.initDynamicPropertyContainer(container);
      var i;
      var len = data2.length || 0;
      var prop;
      for (i = 0; i < len; i += 1) {
        prop = PropertyFactory.getProp(elem2, data2[i].v, 0, 0, this);
        this.k = prop.k || this.k;
        this.dataProps[i] = {
          n: data2[i].n,
          p: prop
        };
      }
      if (!this.k) {
        this.getValue(true);
      }
      this._isAnimated = this.k;
    }
    DashProperty.prototype.getValue = function(forceRender) {
      if (this.elem.globalData.frameId === this.frameId && !forceRender) {
        return;
      }
      this.frameId = this.elem.globalData.frameId;
      this.iterateDynamicProperties();
      this._mdf = this._mdf || forceRender;
      if (this._mdf) {
        var i = 0;
        var len = this.dataProps.length;
        if (this.renderer === "svg") {
          this.dashStr = "";
        }
        for (i = 0; i < len; i += 1) {
          if (this.dataProps[i].n !== "o") {
            if (this.renderer === "svg") {
              this.dashStr += " " + this.dataProps[i].p.v;
            } else {
              this.dashArray[i] = this.dataProps[i].p.v;
            }
          } else {
            this.dashoffset[0] = this.dataProps[i].p.v;
          }
        }
      }
    };
    extendPrototype([DynamicPropertyContainer], DashProperty);
    function SVGStrokeStyleData(elem2, data2, styleOb) {
      this.initDynamicPropertyContainer(elem2);
      this.getValue = this.iterateDynamicProperties;
      this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
      this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);
      this.d = new DashProperty(elem2, data2.d || {}, "svg", this);
      this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);
      this.style = styleOb;
      this._isAnimated = !!this._isAnimated;
    }
    extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
    function SVGFillStyleData(elem2, data2, styleOb) {
      this.initDynamicPropertyContainer(elem2);
      this.getValue = this.iterateDynamicProperties;
      this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
      this.c = PropertyFactory.getProp(elem2, data2.c, 1, 255, this);
      this.style = styleOb;
    }
    extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
    function SVGNoStyleData(elem2, data2, styleOb) {
      this.initDynamicPropertyContainer(elem2);
      this.getValue = this.iterateDynamicProperties;
      this.style = styleOb;
    }
    extendPrototype([DynamicPropertyContainer], SVGNoStyleData);
    function GradientProperty(elem2, data2, container) {
      this.data = data2;
      this.c = createTypedArray("uint8c", data2.p * 4);
      var cLength = data2.k.k[0].s ? data2.k.k[0].s.length - data2.p * 4 : data2.k.k.length - data2.p * 4;
      this.o = createTypedArray("float32", cLength);
      this._cmdf = false;
      this._omdf = false;
      this._collapsable = this.checkCollapsable();
      this._hasOpacity = cLength;
      this.initDynamicPropertyContainer(container);
      this.prop = PropertyFactory.getProp(elem2, data2.k, 1, null, this);
      this.k = this.prop.k;
      this.getValue(true);
    }
    GradientProperty.prototype.comparePoints = function(values, points) {
      var i = 0;
      var len = this.o.length / 2;
      var diff;
      while (i < len) {
        diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);
        if (diff > 0.01) {
          return false;
        }
        i += 1;
      }
      return true;
    };
    GradientProperty.prototype.checkCollapsable = function() {
      if (this.o.length / 2 !== this.c.length / 4) {
        return false;
      }
      if (this.data.k.k[0].s) {
        var i = 0;
        var len = this.data.k.k.length;
        while (i < len) {
          if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
            return false;
          }
          i += 1;
        }
      } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
        return false;
      }
      return true;
    };
    GradientProperty.prototype.getValue = function(forceRender) {
      this.prop.getValue();
      this._mdf = false;
      this._cmdf = false;
      this._omdf = false;
      if (this.prop._mdf || forceRender) {
        var i;
        var len = this.data.p * 4;
        var mult;
        var val2;
        for (i = 0; i < len; i += 1) {
          mult = i % 4 === 0 ? 100 : 255;
          val2 = Math.round(this.prop.v[i] * mult);
          if (this.c[i] !== val2) {
            this.c[i] = val2;
            this._cmdf = !forceRender;
          }
        }
        if (this.o.length) {
          len = this.prop.v.length;
          for (i = this.data.p * 4; i < len; i += 1) {
            mult = i % 2 === 0 ? 100 : 1;
            val2 = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];
            if (this.o[i - this.data.p * 4] !== val2) {
              this.o[i - this.data.p * 4] = val2;
              this._omdf = !forceRender;
            }
          }
        }
        this._mdf = !forceRender;
      }
    };
    extendPrototype([DynamicPropertyContainer], GradientProperty);
    function SVGGradientFillStyleData(elem2, data2, styleOb) {
      this.initDynamicPropertyContainer(elem2);
      this.getValue = this.iterateDynamicProperties;
      this.initGradientData(elem2, data2, styleOb);
    }
    SVGGradientFillStyleData.prototype.initGradientData = function(elem2, data2, styleOb) {
      this.o = PropertyFactory.getProp(elem2, data2.o, 0, 0.01, this);
      this.s = PropertyFactory.getProp(elem2, data2.s, 1, null, this);
      this.e = PropertyFactory.getProp(elem2, data2.e, 1, null, this);
      this.h = PropertyFactory.getProp(elem2, data2.h || {
        k: 0
      }, 0, 0.01, this);
      this.a = PropertyFactory.getProp(elem2, data2.a || {
        k: 0
      }, 0, degToRads, this);
      this.g = new GradientProperty(elem2, data2.g, this);
      this.style = styleOb;
      this.stops = [];
      this.setGradientData(styleOb.pElem, data2);
      this.setGradientOpacity(data2, styleOb);
      this._isAnimated = !!this._isAnimated;
    };
    SVGGradientFillStyleData.prototype.setGradientData = function(pathElement, data2) {
      var gradientId = createElementID();
      var gfill = createNS(data2.t === 1 ? "linearGradient" : "radialGradient");
      gfill.setAttribute("id", gradientId);
      gfill.setAttribute("spreadMethod", "pad");
      gfill.setAttribute("gradientUnits", "userSpaceOnUse");
      var stops = [];
      var stop;
      var j;
      var jLen;
      jLen = data2.g.p * 4;
      for (j = 0; j < jLen; j += 4) {
        stop = createNS("stop");
        gfill.appendChild(stop);
        stops.push(stop);
      }
      pathElement.setAttribute(data2.ty === "gf" ? "fill" : "stroke", "url(" + getLocationHref() + "#" + gradientId + ")");
      this.gf = gfill;
      this.cst = stops;
    };
    SVGGradientFillStyleData.prototype.setGradientOpacity = function(data2, styleOb) {
      if (this.g._hasOpacity && !this.g._collapsable) {
        var stop;
        var j;
        var jLen;
        var mask2 = createNS("mask");
        var maskElement = createNS("path");
        mask2.appendChild(maskElement);
        var opacityId = createElementID();
        var maskId = createElementID();
        mask2.setAttribute("id", maskId);
        var opFill = createNS(data2.t === 1 ? "linearGradient" : "radialGradient");
        opFill.setAttribute("id", opacityId);
        opFill.setAttribute("spreadMethod", "pad");
        opFill.setAttribute("gradientUnits", "userSpaceOnUse");
        jLen = data2.g.k.k[0].s ? data2.g.k.k[0].s.length : data2.g.k.k.length;
        var stops = this.stops;
        for (j = data2.g.p * 4; j < jLen; j += 2) {
          stop = createNS("stop");
          stop.setAttribute("stop-color", "rgb(255,255,255)");
          opFill.appendChild(stop);
          stops.push(stop);
        }
        maskElement.setAttribute(data2.ty === "gf" ? "fill" : "stroke", "url(" + getLocationHref() + "#" + opacityId + ")");
        if (data2.ty === "gs") {
          maskElement.setAttribute("stroke-linecap", lineCapEnum[data2.lc || 2]);
          maskElement.setAttribute("stroke-linejoin", lineJoinEnum[data2.lj || 2]);
          if (data2.lj === 1) {
            maskElement.setAttribute("stroke-miterlimit", data2.ml);
          }
        }
        this.of = opFill;
        this.ms = mask2;
        this.ost = stops;
        this.maskId = maskId;
        styleOb.msElem = maskElement;
      }
    };
    extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);
    function SVGGradientStrokeStyleData(elem2, data2, styleOb) {
      this.initDynamicPropertyContainer(elem2);
      this.getValue = this.iterateDynamicProperties;
      this.w = PropertyFactory.getProp(elem2, data2.w, 0, null, this);
      this.d = new DashProperty(elem2, data2.d || {}, "svg", this);
      this.initGradientData(elem2, data2, styleOb);
      this._isAnimated = !!this._isAnimated;
    }
    extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
    function ShapeGroupData() {
      this.it = [];
      this.prevViewData = [];
      this.gr = createNS("g");
    }
    function SVGTransformData(mProps, op2, container) {
      this.transform = {
        mProps,
        op: op2,
        container
      };
      this.elements = [];
      this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;
    }
    var buildShapeString = function buildShapeString2(pathNodes, length2, closed, mat) {
      if (length2 === 0) {
        return "";
      }
      var _o = pathNodes.o;
      var _i = pathNodes.i;
      var _v = pathNodes.v;
      var i;
      var shapeString = " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
      for (i = 1; i < length2; i += 1) {
        shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[i][0], _i[i][1]) + " " + mat.applyToPointStringified(_v[i][0], _v[i][1]);
      }
      if (closed && length2) {
        shapeString += " C" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + " " + mat.applyToPointStringified(_i[0][0], _i[0][1]) + " " + mat.applyToPointStringified(_v[0][0], _v[0][1]);
        shapeString += "z";
      }
      return shapeString;
    };
    var SVGElementsRenderer = function() {
      var _identityMatrix = new Matrix();
      var _matrixHelper = new Matrix();
      var ob2 = {
        createRenderFunction
      };
      function createRenderFunction(data2) {
        switch (data2.ty) {
          case "fl":
            return renderFill;
          case "gf":
            return renderGradient;
          case "gs":
            return renderGradientStroke;
          case "st":
            return renderStroke;
          case "sh":
          case "el":
          case "rc":
          case "sr":
            return renderPath;
          case "tr":
            return renderContentTransform;
          case "no":
            return renderNoop;
          default:
            return null;
        }
      }
      function renderContentTransform(styleData, itemData, isFirstFrame) {
        if (isFirstFrame || itemData.transform.op._mdf) {
          itemData.transform.container.setAttribute("opacity", itemData.transform.op.v);
        }
        if (isFirstFrame || itemData.transform.mProps._mdf) {
          itemData.transform.container.setAttribute("transform", itemData.transform.mProps.v.to2dCSS());
        }
      }
      function renderNoop() {
      }
      function renderPath(styleData, itemData, isFirstFrame) {
        var j;
        var jLen;
        var pathStringTransformed;
        var redraw;
        var pathNodes;
        var l2;
        var lLen = itemData.styles.length;
        var lvl = itemData.lvl;
        var paths;
        var mat;
        var props;
        var iterations;
        var k2;
        for (l2 = 0; l2 < lLen; l2 += 1) {
          redraw = itemData.sh._mdf || isFirstFrame;
          if (itemData.styles[l2].lvl < lvl) {
            mat = _matrixHelper.reset();
            iterations = lvl - itemData.styles[l2].lvl;
            k2 = itemData.transformers.length - 1;
            while (!redraw && iterations > 0) {
              redraw = itemData.transformers[k2].mProps._mdf || redraw;
              iterations -= 1;
              k2 -= 1;
            }
            if (redraw) {
              iterations = lvl - itemData.styles[l2].lvl;
              k2 = itemData.transformers.length - 1;
              while (iterations > 0) {
                props = itemData.transformers[k2].mProps.v.props;
                mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
                iterations -= 1;
                k2 -= 1;
              }
            }
          } else {
            mat = _identityMatrix;
          }
          paths = itemData.sh.paths;
          jLen = paths._length;
          if (redraw) {
            pathStringTransformed = "";
            for (j = 0; j < jLen; j += 1) {
              pathNodes = paths.shapes[j];
              if (pathNodes && pathNodes._length) {
                pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);
              }
            }
            itemData.caches[l2] = pathStringTransformed;
          } else {
            pathStringTransformed = itemData.caches[l2];
          }
          itemData.styles[l2].d += styleData.hd === true ? "" : pathStringTransformed;
          itemData.styles[l2]._mdf = redraw || itemData.styles[l2]._mdf;
        }
      }
      function renderFill(styleData, itemData, isFirstFrame) {
        var styleElem = itemData.style;
        if (itemData.c._mdf || isFirstFrame) {
          styleElem.pElem.setAttribute("fill", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
        }
        if (itemData.o._mdf || isFirstFrame) {
          styleElem.pElem.setAttribute("fill-opacity", itemData.o.v);
        }
      }
      function renderGradientStroke(styleData, itemData, isFirstFrame) {
        renderGradient(styleData, itemData, isFirstFrame);
        renderStroke(styleData, itemData, isFirstFrame);
      }
      function renderGradient(styleData, itemData, isFirstFrame) {
        var gfill = itemData.gf;
        var hasOpacity = itemData.g._hasOpacity;
        var pt1 = itemData.s.v;
        var pt2 = itemData.e.v;
        if (itemData.o._mdf || isFirstFrame) {
          var attr = styleData.ty === "gf" ? "fill-opacity" : "stroke-opacity";
          itemData.style.pElem.setAttribute(attr, itemData.o.v);
        }
        if (itemData.s._mdf || isFirstFrame) {
          var attr1 = styleData.t === 1 ? "x1" : "cx";
          var attr2 = attr1 === "x1" ? "y1" : "cy";
          gfill.setAttribute(attr1, pt1[0]);
          gfill.setAttribute(attr2, pt1[1]);
          if (hasOpacity && !itemData.g._collapsable) {
            itemData.of.setAttribute(attr1, pt1[0]);
            itemData.of.setAttribute(attr2, pt1[1]);
          }
        }
        var stops;
        var i;
        var len;
        var stop;
        if (itemData.g._cmdf || isFirstFrame) {
          stops = itemData.cst;
          var cValues = itemData.g.c;
          len = stops.length;
          for (i = 0; i < len; i += 1) {
            stop = stops[i];
            stop.setAttribute("offset", cValues[i * 4] + "%");
            stop.setAttribute("stop-color", "rgb(" + cValues[i * 4 + 1] + "," + cValues[i * 4 + 2] + "," + cValues[i * 4 + 3] + ")");
          }
        }
        if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
          var oValues = itemData.g.o;
          if (itemData.g._collapsable) {
            stops = itemData.cst;
          } else {
            stops = itemData.ost;
          }
          len = stops.length;
          for (i = 0; i < len; i += 1) {
            stop = stops[i];
            if (!itemData.g._collapsable) {
              stop.setAttribute("offset", oValues[i * 2] + "%");
            }
            stop.setAttribute("stop-opacity", oValues[i * 2 + 1]);
          }
        }
        if (styleData.t === 1) {
          if (itemData.e._mdf || isFirstFrame) {
            gfill.setAttribute("x2", pt2[0]);
            gfill.setAttribute("y2", pt2[1]);
            if (hasOpacity && !itemData.g._collapsable) {
              itemData.of.setAttribute("x2", pt2[0]);
              itemData.of.setAttribute("y2", pt2[1]);
            }
          }
        } else {
          var rad;
          if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
            gfill.setAttribute("r", rad);
            if (hasOpacity && !itemData.g._collapsable) {
              itemData.of.setAttribute("r", rad);
            }
          }
          if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {
            if (!rad) {
              rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
            }
            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
            var percent = itemData.h.v;
            if (percent >= 1) {
              percent = 0.99;
            } else if (percent <= -1) {
              percent = -0.99;
            }
            var dist = rad * percent;
            var x2 = Math.cos(ang + itemData.a.v) * dist + pt1[0];
            var y2 = Math.sin(ang + itemData.a.v) * dist + pt1[1];
            gfill.setAttribute("fx", x2);
            gfill.setAttribute("fy", y2);
            if (hasOpacity && !itemData.g._collapsable) {
              itemData.of.setAttribute("fx", x2);
              itemData.of.setAttribute("fy", y2);
            }
          }
        }
      }
      function renderStroke(styleData, itemData, isFirstFrame) {
        var styleElem = itemData.style;
        var d = itemData.d;
        if (d && (d._mdf || isFirstFrame) && d.dashStr) {
          styleElem.pElem.setAttribute("stroke-dasharray", d.dashStr);
          styleElem.pElem.setAttribute("stroke-dashoffset", d.dashoffset[0]);
        }
        if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
          styleElem.pElem.setAttribute("stroke", "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")");
        }
        if (itemData.o._mdf || isFirstFrame) {
          styleElem.pElem.setAttribute("stroke-opacity", itemData.o.v);
        }
        if (itemData.w._mdf || isFirstFrame) {
          styleElem.pElem.setAttribute("stroke-width", itemData.w.v);
          if (styleElem.msElem) {
            styleElem.msElem.setAttribute("stroke-width", itemData.w.v);
          }
        }
      }
      return ob2;
    }();
    function SVGShapeElement(data2, globalData2, comp2) {
      this.shapes = [];
      this.shapesData = data2.shapes;
      this.stylesList = [];
      this.shapeModifiers = [];
      this.itemsData = [];
      this.processedElements = [];
      this.animatedContents = [];
      this.initElement(data2, globalData2, comp2);
      this.prevViewData = [];
    }
    extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);
    SVGShapeElement.prototype.initSecondaryElement = function() {
    };
    SVGShapeElement.prototype.identityMatrix = new Matrix();
    SVGShapeElement.prototype.buildExpressionInterface = function() {
    };
    SVGShapeElement.prototype.createContent = function() {
      this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
      this.filterUniqueShapes();
    };
    SVGShapeElement.prototype.filterUniqueShapes = function() {
      var i;
      var len = this.shapes.length;
      var shape;
      var j;
      var jLen = this.stylesList.length;
      var style;
      var tempShapes = [];
      var areAnimated = false;
      for (j = 0; j < jLen; j += 1) {
        style = this.stylesList[j];
        areAnimated = false;
        tempShapes.length = 0;
        for (i = 0; i < len; i += 1) {
          shape = this.shapes[i];
          if (shape.styles.indexOf(style) !== -1) {
            tempShapes.push(shape);
            areAnimated = shape._isAnimated || areAnimated;
          }
        }
        if (tempShapes.length > 1 && areAnimated) {
          this.setShapesAsAnimated(tempShapes);
        }
      }
    };
    SVGShapeElement.prototype.setShapesAsAnimated = function(shapes) {
      var i;
      var len = shapes.length;
      for (i = 0; i < len; i += 1) {
        shapes[i].setAsAnimated();
      }
    };
    SVGShapeElement.prototype.createStyleElement = function(data2, level) {
      var elementData;
      var styleOb = new SVGStyleData(data2, level);
      var pathElement = styleOb.pElem;
      if (data2.ty === "st") {
        elementData = new SVGStrokeStyleData(this, data2, styleOb);
      } else if (data2.ty === "fl") {
        elementData = new SVGFillStyleData(this, data2, styleOb);
      } else if (data2.ty === "gf" || data2.ty === "gs") {
        var GradientConstructor = data2.ty === "gf" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;
        elementData = new GradientConstructor(this, data2, styleOb);
        this.globalData.defs.appendChild(elementData.gf);
        if (elementData.maskId) {
          this.globalData.defs.appendChild(elementData.ms);
          this.globalData.defs.appendChild(elementData.of);
          pathElement.setAttribute("mask", "url(" + getLocationHref() + "#" + elementData.maskId + ")");
        }
      } else if (data2.ty === "no") {
        elementData = new SVGNoStyleData(this, data2, styleOb);
      }
      if (data2.ty === "st" || data2.ty === "gs") {
        pathElement.setAttribute("stroke-linecap", lineCapEnum[data2.lc || 2]);
        pathElement.setAttribute("stroke-linejoin", lineJoinEnum[data2.lj || 2]);
        pathElement.setAttribute("fill-opacity", "0");
        if (data2.lj === 1) {
          pathElement.setAttribute("stroke-miterlimit", data2.ml);
        }
      }
      if (data2.r === 2) {
        pathElement.setAttribute("fill-rule", "evenodd");
      }
      if (data2.ln) {
        pathElement.setAttribute("id", data2.ln);
      }
      if (data2.cl) {
        pathElement.setAttribute("class", data2.cl);
      }
      if (data2.bm) {
        pathElement.style["mix-blend-mode"] = getBlendMode(data2.bm);
      }
      this.stylesList.push(styleOb);
      this.addToAnimatedContents(data2, elementData);
      return elementData;
    };
    SVGShapeElement.prototype.createGroupElement = function(data2) {
      var elementData = new ShapeGroupData();
      if (data2.ln) {
        elementData.gr.setAttribute("id", data2.ln);
      }
      if (data2.cl) {
        elementData.gr.setAttribute("class", data2.cl);
      }
      if (data2.bm) {
        elementData.gr.style["mix-blend-mode"] = getBlendMode(data2.bm);
      }
      return elementData;
    };
    SVGShapeElement.prototype.createTransformElement = function(data2, container) {
      var transformProperty = TransformPropertyFactory.getTransformProperty(this, data2, this);
      var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);
      this.addToAnimatedContents(data2, elementData);
      return elementData;
    };
    SVGShapeElement.prototype.createShapeElement = function(data2, ownTransformers, level) {
      var ty = 4;
      if (data2.ty === "rc") {
        ty = 5;
      } else if (data2.ty === "el") {
        ty = 6;
      } else if (data2.ty === "sr") {
        ty = 7;
      }
      var shapeProperty = ShapePropertyFactory.getShapeProp(this, data2, ty, this);
      var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);
      this.shapes.push(elementData);
      this.addShapeToModifiers(elementData);
      this.addToAnimatedContents(data2, elementData);
      return elementData;
    };
    SVGShapeElement.prototype.addToAnimatedContents = function(data2, element) {
      var i = 0;
      var len = this.animatedContents.length;
      while (i < len) {
        if (this.animatedContents[i].element === element) {
          return;
        }
        i += 1;
      }
      this.animatedContents.push({
        fn: SVGElementsRenderer.createRenderFunction(data2),
        element,
        data: data2
      });
    };
    SVGShapeElement.prototype.setElementStyles = function(elementData) {
      var arr = elementData.styles;
      var j;
      var jLen = this.stylesList.length;
      for (j = 0; j < jLen; j += 1) {
        if (!this.stylesList[j].closed) {
          arr.push(this.stylesList[j]);
        }
      }
    };
    SVGShapeElement.prototype.reloadShapes = function() {
      this._isFirstFrame = true;
      var i;
      var len = this.itemsData.length;
      for (i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
      }
      this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);
      this.filterUniqueShapes();
      len = this.dynamicProperties.length;
      for (i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
      }
      this.renderModifiers();
    };
    SVGShapeElement.prototype.searchShapes = function(arr, itemsData, prevViewData, container, level, transformers, render) {
      var ownTransformers = [].concat(transformers);
      var i;
      var len = arr.length - 1;
      var j;
      var jLen;
      var ownStyles = [];
      var ownModifiers = [];
      var currentTransform;
      var modifier;
      var processedPos;
      for (i = len; i >= 0; i -= 1) {
        processedPos = this.searchProcessedElement(arr[i]);
        if (!processedPos) {
          arr[i]._render = render;
        } else {
          itemsData[i] = prevViewData[processedPos - 1];
        }
        if (arr[i].ty === "fl" || arr[i].ty === "st" || arr[i].ty === "gf" || arr[i].ty === "gs" || arr[i].ty === "no") {
          if (!processedPos) {
            itemsData[i] = this.createStyleElement(arr[i], level);
          } else {
            itemsData[i].style.closed = false;
          }
          if (arr[i]._render) {
            if (itemsData[i].style.pElem.parentNode !== container) {
              container.appendChild(itemsData[i].style.pElem);
            }
          }
          ownStyles.push(itemsData[i].style);
        } else if (arr[i].ty === "gr") {
          if (!processedPos) {
            itemsData[i] = this.createGroupElement(arr[i]);
          } else {
            jLen = itemsData[i].it.length;
            for (j = 0; j < jLen; j += 1) {
              itemsData[i].prevViewData[j] = itemsData[i].it[j];
            }
          }
          this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);
          if (arr[i]._render) {
            if (itemsData[i].gr.parentNode !== container) {
              container.appendChild(itemsData[i].gr);
            }
          }
        } else if (arr[i].ty === "tr") {
          if (!processedPos) {
            itemsData[i] = this.createTransformElement(arr[i], container);
          }
          currentTransform = itemsData[i].transform;
          ownTransformers.push(currentTransform);
        } else if (arr[i].ty === "sh" || arr[i].ty === "rc" || arr[i].ty === "el" || arr[i].ty === "sr") {
          if (!processedPos) {
            itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);
          }
          this.setElementStyles(itemsData[i]);
        } else if (arr[i].ty === "tm" || arr[i].ty === "rd" || arr[i].ty === "ms" || arr[i].ty === "pb" || arr[i].ty === "zz" || arr[i].ty === "op") {
          if (!processedPos) {
            modifier = ShapeModifiers.getModifier(arr[i].ty);
            modifier.init(this, arr[i]);
            itemsData[i] = modifier;
            this.shapeModifiers.push(modifier);
          } else {
            modifier = itemsData[i];
            modifier.closed = false;
          }
          ownModifiers.push(modifier);
        } else if (arr[i].ty === "rp") {
          if (!processedPos) {
            modifier = ShapeModifiers.getModifier(arr[i].ty);
            itemsData[i] = modifier;
            modifier.init(this, arr, i, itemsData);
            this.shapeModifiers.push(modifier);
            render = false;
          } else {
            modifier = itemsData[i];
            modifier.closed = true;
          }
          ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
      }
      len = ownStyles.length;
      for (i = 0; i < len; i += 1) {
        ownStyles[i].closed = true;
      }
      len = ownModifiers.length;
      for (i = 0; i < len; i += 1) {
        ownModifiers[i].closed = true;
      }
    };
    SVGShapeElement.prototype.renderInnerContent = function() {
      this.renderModifiers();
      var i;
      var len = this.stylesList.length;
      for (i = 0; i < len; i += 1) {
        this.stylesList[i].reset();
      }
      this.renderShape();
      for (i = 0; i < len; i += 1) {
        if (this.stylesList[i]._mdf || this._isFirstFrame) {
          if (this.stylesList[i].msElem) {
            this.stylesList[i].msElem.setAttribute("d", this.stylesList[i].d);
            this.stylesList[i].d = "M0 0" + this.stylesList[i].d;
          }
          this.stylesList[i].pElem.setAttribute("d", this.stylesList[i].d || "M0 0");
        }
      }
    };
    SVGShapeElement.prototype.renderShape = function() {
      var i;
      var len = this.animatedContents.length;
      var animatedContent;
      for (i = 0; i < len; i += 1) {
        animatedContent = this.animatedContents[i];
        if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {
          animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);
        }
      }
    };
    SVGShapeElement.prototype.destroy = function() {
      this.destroyBaseElement();
      this.shapesData = null;
      this.itemsData = null;
    };
    function LetterProps(o, sw, sc2, fc2, m2, p2) {
      this.o = o;
      this.sw = sw;
      this.sc = sc2;
      this.fc = fc2;
      this.m = m2;
      this.p = p2;
      this._mdf = {
        o: true,
        sw: !!sw,
        sc: !!sc2,
        fc: !!fc2,
        m: true,
        p: true
      };
    }
    LetterProps.prototype.update = function(o, sw, sc2, fc2, m2, p2) {
      this._mdf.o = false;
      this._mdf.sw = false;
      this._mdf.sc = false;
      this._mdf.fc = false;
      this._mdf.m = false;
      this._mdf.p = false;
      var updated = false;
      if (this.o !== o) {
        this.o = o;
        this._mdf.o = true;
        updated = true;
      }
      if (this.sw !== sw) {
        this.sw = sw;
        this._mdf.sw = true;
        updated = true;
      }
      if (this.sc !== sc2) {
        this.sc = sc2;
        this._mdf.sc = true;
        updated = true;
      }
      if (this.fc !== fc2) {
        this.fc = fc2;
        this._mdf.fc = true;
        updated = true;
      }
      if (this.m !== m2) {
        this.m = m2;
        this._mdf.m = true;
        updated = true;
      }
      if (p2.length && (this.p[0] !== p2[0] || this.p[1] !== p2[1] || this.p[4] !== p2[4] || this.p[5] !== p2[5] || this.p[12] !== p2[12] || this.p[13] !== p2[13])) {
        this.p = p2;
        this._mdf.p = true;
        updated = true;
      }
      return updated;
    };
    function TextProperty(elem2, data2) {
      this._frameId = initialDefaultFrame;
      this.pv = "";
      this.v = "";
      this.kf = false;
      this._isFirstFrame = true;
      this._mdf = false;
      this.data = data2;
      this.elem = elem2;
      this.comp = this.elem.comp;
      this.keysIndex = 0;
      this.canResize = false;
      this.minimumFontSize = 1;
      this.effectsSequence = [];
      this.currentData = {
        ascent: 0,
        boxWidth: this.defaultBoxWidth,
        f: "",
        fStyle: "",
        fWeight: "",
        fc: "",
        j: "",
        justifyOffset: "",
        l: [],
        lh: 0,
        lineWidths: [],
        ls: "",
        of: "",
        s: "",
        sc: "",
        sw: 0,
        t: 0,
        tr: 0,
        sz: 0,
        ps: null,
        fillColorAnim: false,
        strokeColorAnim: false,
        strokeWidthAnim: false,
        yOffset: 0,
        finalSize: 0,
        finalText: [],
        finalLineHeight: 0,
        __complete: false
      };
      this.copyData(this.currentData, this.data.d.k[0].s);
      if (!this.searchProperty()) {
        this.completeTextData(this.currentData);
      }
    }
    TextProperty.prototype.defaultBoxWidth = [0, 0];
    TextProperty.prototype.copyData = function(obj, data2) {
      for (var s in data2) {
        if (Object.prototype.hasOwnProperty.call(data2, s)) {
          obj[s] = data2[s];
        }
      }
      return obj;
    };
    TextProperty.prototype.setCurrentData = function(data2) {
      if (!data2.__complete) {
        this.completeTextData(data2);
      }
      this.currentData = data2;
      this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;
      this._mdf = true;
    };
    TextProperty.prototype.searchProperty = function() {
      return this.searchKeyframes();
    };
    TextProperty.prototype.searchKeyframes = function() {
      this.kf = this.data.d.k.length > 1;
      if (this.kf) {
        this.addEffect(this.getKeyframeValue.bind(this));
      }
      return this.kf;
    };
    TextProperty.prototype.addEffect = function(effectFunction) {
      this.effectsSequence.push(effectFunction);
      this.elem.addDynamicProperty(this);
    };
    TextProperty.prototype.getValue = function(_finalValue) {
      if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {
        return;
      }
      this.currentData.t = this.data.d.k[this.keysIndex].s.t;
      var currentValue = this.currentData;
      var currentIndex = this.keysIndex;
      if (this.lock) {
        this.setCurrentData(this.currentData);
        return;
      }
      this.lock = true;
      this._mdf = false;
      var i;
      var len = this.effectsSequence.length;
      var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
      for (i = 0; i < len; i += 1) {
        if (currentIndex !== this.keysIndex) {
          finalValue = this.effectsSequence[i](finalValue, finalValue.t);
        } else {
          finalValue = this.effectsSequence[i](this.currentData, finalValue.t);
        }
      }
      if (currentValue !== finalValue) {
        this.setCurrentData(finalValue);
      }
      this.v = this.currentData;
      this.pv = this.v;
      this.lock = false;
      this.frameId = this.elem.globalData.frameId;
    };
    TextProperty.prototype.getKeyframeValue = function() {
      var textKeys = this.data.d.k;
      var frameNum = this.elem.comp.renderedFrame;
      var i = 0;
      var len = textKeys.length;
      while (i <= len - 1) {
        if (i === len - 1 || textKeys[i + 1].t > frameNum) {
          break;
        }
        i += 1;
      }
      if (this.keysIndex !== i) {
        this.keysIndex = i;
      }
      return this.data.d.k[this.keysIndex].s;
    };
    TextProperty.prototype.buildFinalText = function(text2) {
      var charactersArray = [];
      var i = 0;
      var len = text2.length;
      var charCode;
      var secondCharCode;
      var shouldCombine = false;
      while (i < len) {
        charCode = text2.charCodeAt(i);
        if (FontManager.isCombinedCharacter(charCode)) {
          charactersArray[charactersArray.length - 1] += text2.charAt(i);
        } else if (charCode >= 55296 && charCode <= 56319) {
          secondCharCode = text2.charCodeAt(i + 1);
          if (secondCharCode >= 56320 && secondCharCode <= 57343) {
            if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {
              charactersArray[charactersArray.length - 1] += text2.substr(i, 2);
              shouldCombine = false;
            } else {
              charactersArray.push(text2.substr(i, 2));
            }
            i += 1;
          } else {
            charactersArray.push(text2.charAt(i));
          }
        } else if (charCode > 56319) {
          secondCharCode = text2.charCodeAt(i + 1);
          if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {
            shouldCombine = true;
            charactersArray[charactersArray.length - 1] += text2.substr(i, 2);
            i += 1;
          } else {
            charactersArray.push(text2.charAt(i));
          }
        } else if (FontManager.isZeroWidthJoiner(charCode)) {
          charactersArray[charactersArray.length - 1] += text2.charAt(i);
          shouldCombine = true;
        } else {
          charactersArray.push(text2.charAt(i));
        }
        i += 1;
      }
      return charactersArray;
    };
    TextProperty.prototype.completeTextData = function(documentData) {
      documentData.__complete = true;
      var fontManager = this.elem.globalData.fontManager;
      var data2 = this.data;
      var letters = [];
      var i;
      var len;
      var newLineFlag;
      var index2 = 0;
      var val2;
      var anchorGrouping = data2.m.g;
      var currentSize = 0;
      var currentPos = 0;
      var currentLine = 0;
      var lineWidths = [];
      var lineWidth = 0;
      var maxLineWidth = 0;
      var j;
      var jLen;
      var fontData = fontManager.getFontByName(documentData.f);
      var charData;
      var cLength = 0;
      var fontProps = getFontProperties(fontData);
      documentData.fWeight = fontProps.weight;
      documentData.fStyle = fontProps.style;
      documentData.finalSize = documentData.s;
      documentData.finalText = this.buildFinalText(documentData.t);
      len = documentData.finalText.length;
      documentData.finalLineHeight = documentData.lh;
      var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
      var charCode;
      if (documentData.sz) {
        var flag = true;
        var boxWidth = documentData.sz[0];
        var boxHeight = documentData.sz[1];
        var currentHeight;
        var finalText;
        while (flag) {
          finalText = this.buildFinalText(documentData.t);
          currentHeight = 0;
          lineWidth = 0;
          len = finalText.length;
          trackingOffset = documentData.tr / 1e3 * documentData.finalSize;
          var lastSpaceIndex = -1;
          for (i = 0; i < len; i += 1) {
            charCode = finalText[i].charCodeAt(0);
            newLineFlag = false;
            if (finalText[i] === " ") {
              lastSpaceIndex = i;
            } else if (charCode === 13 || charCode === 3) {
              lineWidth = 0;
              newLineFlag = true;
              currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
            }
            if (fontManager.chars) {
              charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);
              cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
            } else {
              cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);
            }
            if (lineWidth + cLength > boxWidth && finalText[i] !== " ") {
              if (lastSpaceIndex === -1) {
                len += 1;
              } else {
                i = lastSpaceIndex;
              }
              currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;
              finalText.splice(i, lastSpaceIndex === i ? 1 : 0, "\r");
              lastSpaceIndex = -1;
              lineWidth = 0;
            } else {
              lineWidth += cLength;
              lineWidth += trackingOffset;
            }
          }
          currentHeight += fontData.ascent * documentData.finalSize / 100;
          if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {
            documentData.finalSize -= 1;
            documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;
          } else {
            documentData.finalText = finalText;
            len = documentData.finalText.length;
            flag = false;
          }
        }
      }
      lineWidth = -trackingOffset;
      cLength = 0;
      var uncollapsedSpaces = 0;
      var currentChar;
      for (i = 0; i < len; i += 1) {
        newLineFlag = false;
        currentChar = documentData.finalText[i];
        charCode = currentChar.charCodeAt(0);
        if (charCode === 13 || charCode === 3) {
          uncollapsedSpaces = 0;
          lineWidths.push(lineWidth);
          maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
          lineWidth = -2 * trackingOffset;
          val2 = "";
          newLineFlag = true;
          currentLine += 1;
        } else {
          val2 = currentChar;
        }
        if (fontManager.chars) {
          charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);
          cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;
        } else {
          cLength = fontManager.measureText(val2, documentData.f, documentData.finalSize);
        }
        if (currentChar === " ") {
          uncollapsedSpaces += cLength + trackingOffset;
        } else {
          lineWidth += cLength + trackingOffset + uncollapsedSpaces;
          uncollapsedSpaces = 0;
        }
        letters.push({
          l: cLength,
          an: cLength,
          add: currentSize,
          n: newLineFlag,
          anIndexes: [],
          val: val2,
          line: currentLine,
          animatorJustifyOffset: 0
        });
        if (anchorGrouping == 2) {
          currentSize += cLength;
          if (val2 === "" || val2 === " " || i === len - 1) {
            if (val2 === "" || val2 === " ") {
              currentSize -= cLength;
            }
            while (currentPos <= i) {
              letters[currentPos].an = currentSize;
              letters[currentPos].ind = index2;
              letters[currentPos].extra = cLength;
              currentPos += 1;
            }
            index2 += 1;
            currentSize = 0;
          }
        } else if (anchorGrouping == 3) {
          currentSize += cLength;
          if (val2 === "" || i === len - 1) {
            if (val2 === "") {
              currentSize -= cLength;
            }
            while (currentPos <= i) {
              letters[currentPos].an = currentSize;
              letters[currentPos].ind = index2;
              letters[currentPos].extra = cLength;
              currentPos += 1;
            }
            currentSize = 0;
            index2 += 1;
          }
        } else {
          letters[index2].ind = index2;
          letters[index2].extra = 0;
          index2 += 1;
        }
      }
      documentData.l = letters;
      maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
      lineWidths.push(lineWidth);
      if (documentData.sz) {
        documentData.boxWidth = documentData.sz[0];
        documentData.justifyOffset = 0;
      } else {
        documentData.boxWidth = maxLineWidth;
        switch (documentData.j) {
          case 1:
            documentData.justifyOffset = -documentData.boxWidth;
            break;
          case 2:
            documentData.justifyOffset = -documentData.boxWidth / 2;
            break;
          default:
            documentData.justifyOffset = 0;
        }
      }
      documentData.lineWidths = lineWidths;
      var animators = data2.a;
      var animatorData;
      var letterData;
      jLen = animators.length;
      var based;
      var ind;
      var indexes = [];
      for (j = 0; j < jLen; j += 1) {
        animatorData = animators[j];
        if (animatorData.a.sc) {
          documentData.strokeColorAnim = true;
        }
        if (animatorData.a.sw) {
          documentData.strokeWidthAnim = true;
        }
        if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {
          documentData.fillColorAnim = true;
        }
        ind = 0;
        based = animatorData.s.b;
        for (i = 0; i < len; i += 1) {
          letterData = letters[i];
          letterData.anIndexes[j] = ind;
          if (based == 1 && letterData.val !== "" || based == 2 && letterData.val !== "" && letterData.val !== " " || based == 3 && (letterData.n || letterData.val == " " || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {
            if (animatorData.s.rn === 1) {
              indexes.push(ind);
            }
            ind += 1;
          }
        }
        data2.a[j].s.totalChars = ind;
        var currentInd = -1;
        var newInd;
        if (animatorData.s.rn === 1) {
          for (i = 0; i < len; i += 1) {
            letterData = letters[i];
            if (currentInd != letterData.anIndexes[j]) {
              currentInd = letterData.anIndexes[j];
              newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];
            }
            letterData.anIndexes[j] = newInd;
          }
        }
      }
      documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;
      documentData.ls = documentData.ls || 0;
      documentData.ascent = fontData.ascent * documentData.finalSize / 100;
    };
    TextProperty.prototype.updateDocumentData = function(newData, index2) {
      index2 = index2 === void 0 ? this.keysIndex : index2;
      var dData = this.copyData({}, this.data.d.k[index2].s);
      dData = this.copyData(dData, newData);
      this.data.d.k[index2].s = dData;
      this.recalculate(index2);
      this.elem.addDynamicProperty(this);
    };
    TextProperty.prototype.recalculate = function(index2) {
      var dData = this.data.d.k[index2].s;
      dData.__complete = false;
      this.keysIndex = 0;
      this._isFirstFrame = true;
      this.getValue(dData);
    };
    TextProperty.prototype.canResizeFont = function(_canResize) {
      this.canResize = _canResize;
      this.recalculate(this.keysIndex);
      this.elem.addDynamicProperty(this);
    };
    TextProperty.prototype.setMinimumFontSize = function(_fontValue) {
      this.minimumFontSize = Math.floor(_fontValue) || 1;
      this.recalculate(this.keysIndex);
      this.elem.addDynamicProperty(this);
    };
    var TextSelectorProp = function() {
      var max = Math.max;
      var min = Math.min;
      var floor = Math.floor;
      function TextSelectorPropFactory(elem2, data2) {
        this._currentTextLength = -1;
        this.k = false;
        this.data = data2;
        this.elem = elem2;
        this.comp = elem2.comp;
        this.finalS = 0;
        this.finalE = 0;
        this.initDynamicPropertyContainer(elem2);
        this.s = PropertyFactory.getProp(elem2, data2.s || {
          k: 0
        }, 0, 0, this);
        if ("e" in data2) {
          this.e = PropertyFactory.getProp(elem2, data2.e, 0, 0, this);
        } else {
          this.e = {
            v: 100
          };
        }
        this.o = PropertyFactory.getProp(elem2, data2.o || {
          k: 0
        }, 0, 0, this);
        this.xe = PropertyFactory.getProp(elem2, data2.xe || {
          k: 0
        }, 0, 0, this);
        this.ne = PropertyFactory.getProp(elem2, data2.ne || {
          k: 0
        }, 0, 0, this);
        this.sm = PropertyFactory.getProp(elem2, data2.sm || {
          k: 100
        }, 0, 0, this);
        this.a = PropertyFactory.getProp(elem2, data2.a, 0, 0.01, this);
        if (!this.dynamicProperties.length) {
          this.getValue();
        }
      }
      TextSelectorPropFactory.prototype = {
        getMult: function getMult(ind) {
          if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {
            this.getValue();
          }
          var x1 = 0;
          var y1 = 0;
          var x2 = 1;
          var y2 = 1;
          if (this.ne.v > 0) {
            x1 = this.ne.v / 100;
          } else {
            y1 = -this.ne.v / 100;
          }
          if (this.xe.v > 0) {
            x2 = 1 - this.xe.v / 100;
          } else {
            y2 = 1 + this.xe.v / 100;
          }
          var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;
          var mult = 0;
          var s = this.finalS;
          var e = this.finalE;
          var type = this.data.sh;
          if (type === 2) {
            if (e === s) {
              mult = ind >= e ? 1 : 0;
            } else {
              mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
            }
            mult = easer(mult);
          } else if (type === 3) {
            if (e === s) {
              mult = ind >= e ? 0 : 1;
            } else {
              mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
            }
            mult = easer(mult);
          } else if (type === 4) {
            if (e === s) {
              mult = 0;
            } else {
              mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
              if (mult < 0.5) {
                mult *= 2;
              } else {
                mult = 1 - 2 * (mult - 0.5);
              }
            }
            mult = easer(mult);
          } else if (type === 5) {
            if (e === s) {
              mult = 0;
            } else {
              var tot = e - s;
              ind = min(max(0, ind + 0.5 - s), e - s);
              var x3 = -tot / 2 + ind;
              var a = tot / 2;
              mult = Math.sqrt(1 - x3 * x3 / (a * a));
            }
            mult = easer(mult);
          } else if (type === 6) {
            if (e === s) {
              mult = 0;
            } else {
              ind = min(max(0, ind + 0.5 - s), e - s);
              mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;
            }
            mult = easer(mult);
          } else {
            if (ind >= floor(s)) {
              if (ind - s < 0) {
                mult = max(0, min(min(e, 1) - (s - ind), 1));
              } else {
                mult = max(0, min(e - ind, 1));
              }
            }
            mult = easer(mult);
          }
          if (this.sm.v !== 100) {
            var smoothness = this.sm.v * 0.01;
            if (smoothness === 0) {
              smoothness = 1e-8;
            }
            var threshold = 0.5 - smoothness * 0.5;
            if (mult < threshold) {
              mult = 0;
            } else {
              mult = (mult - threshold) / smoothness;
              if (mult > 1) {
                mult = 1;
              }
            }
          }
          return mult * this.a.v;
        },
        getValue: function getValue(newCharsFlag) {
          this.iterateDynamicProperties();
          this._mdf = newCharsFlag || this._mdf;
          this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;
          if (newCharsFlag && this.data.r === 2) {
            this.e.v = this._currentTextLength;
          }
          var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;
          var o = this.o.v / divisor;
          var s = this.s.v / divisor + o;
          var e = this.e.v / divisor + o;
          if (s > e) {
            var _s = s;
            s = e;
            e = _s;
          }
          this.finalS = s;
          this.finalE = e;
        }
      };
      extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);
      function getTextSelectorProp(elem2, data2, arr) {
        return new TextSelectorPropFactory(elem2, data2);
      }
      return {
        getTextSelectorProp
      };
    }();
    function TextAnimatorDataProperty(elem2, animatorProps, container) {
      var defaultData = {
        propType: false
      };
      var getProp = PropertyFactory.getProp;
      var textAnimatorAnimatables = animatorProps.a;
      this.a = {
        r: textAnimatorAnimatables.r ? getProp(elem2, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,
        rx: textAnimatorAnimatables.rx ? getProp(elem2, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,
        ry: textAnimatorAnimatables.ry ? getProp(elem2, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,
        sk: textAnimatorAnimatables.sk ? getProp(elem2, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,
        sa: textAnimatorAnimatables.sa ? getProp(elem2, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,
        s: textAnimatorAnimatables.s ? getProp(elem2, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,
        a: textAnimatorAnimatables.a ? getProp(elem2, textAnimatorAnimatables.a, 1, 0, container) : defaultData,
        o: textAnimatorAnimatables.o ? getProp(elem2, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,
        p: textAnimatorAnimatables.p ? getProp(elem2, textAnimatorAnimatables.p, 1, 0, container) : defaultData,
        sw: textAnimatorAnimatables.sw ? getProp(elem2, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,
        sc: textAnimatorAnimatables.sc ? getProp(elem2, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,
        fc: textAnimatorAnimatables.fc ? getProp(elem2, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,
        fh: textAnimatorAnimatables.fh ? getProp(elem2, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,
        fs: textAnimatorAnimatables.fs ? getProp(elem2, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,
        fb: textAnimatorAnimatables.fb ? getProp(elem2, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,
        t: textAnimatorAnimatables.t ? getProp(elem2, textAnimatorAnimatables.t, 0, 0, container) : defaultData
      };
      this.s = TextSelectorProp.getTextSelectorProp(elem2, animatorProps.s, container);
      this.s.t = animatorProps.s.t;
    }
    function TextAnimatorProperty(textData, renderType, elem2) {
      this._isFirstFrame = true;
      this._hasMaskedPath = false;
      this._frameId = -1;
      this._textData = textData;
      this._renderType = renderType;
      this._elem = elem2;
      this._animatorsData = createSizedArray(this._textData.a.length);
      this._pathData = {};
      this._moreOptions = {
        alignment: {}
      };
      this.renderedLetters = [];
      this.lettersChangedFlag = false;
      this.initDynamicPropertyContainer(elem2);
    }
    TextAnimatorProperty.prototype.searchProperties = function() {
      var i;
      var len = this._textData.a.length;
      var animatorProps;
      var getProp = PropertyFactory.getProp;
      for (i = 0; i < len; i += 1) {
        animatorProps = this._textData.a[i];
        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);
      }
      if (this._textData.p && "m" in this._textData.p) {
        this._pathData = {
          a: getProp(this._elem, this._textData.p.a, 0, 0, this),
          f: getProp(this._elem, this._textData.p.f, 0, 0, this),
          l: getProp(this._elem, this._textData.p.l, 0, 0, this),
          r: getProp(this._elem, this._textData.p.r, 0, 0, this),
          p: getProp(this._elem, this._textData.p.p, 0, 0, this),
          m: this._elem.maskManager.getMaskProperty(this._textData.p.m)
        };
        this._hasMaskedPath = true;
      } else {
        this._hasMaskedPath = false;
      }
      this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);
    };
    TextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag) {
      this.lettersChangedFlag = lettersChangedFlag;
      if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {
        return;
      }
      this._isFirstFrame = false;
      var alignment = this._moreOptions.alignment.v;
      var animators = this._animatorsData;
      var textData = this._textData;
      var matrixHelper = this.mHelper;
      var renderType = this._renderType;
      var renderedLettersCount = this.renderedLetters.length;
      var xPos;
      var yPos;
      var i;
      var len;
      var letters = documentData.l;
      var pathInfo;
      var currentLength;
      var currentPoint;
      var segmentLength;
      var flag;
      var pointInd;
      var segmentInd;
      var prevPoint;
      var points;
      var segments;
      var partialLength;
      var totalLength;
      var perc;
      var tanAngle;
      var mask2;
      if (this._hasMaskedPath) {
        mask2 = this._pathData.m;
        if (!this._pathData.n || this._pathData._mdf) {
          var paths = mask2.v;
          if (this._pathData.r.v) {
            paths = paths.reverse();
          }
          pathInfo = {
            tLength: 0,
            segments: []
          };
          len = paths._length - 1;
          var bezierData;
          totalLength = 0;
          for (i = 0; i < len; i += 1) {
            bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);
            pathInfo.tLength += bezierData.segmentLength;
            pathInfo.segments.push(bezierData);
            totalLength += bezierData.segmentLength;
          }
          i = len;
          if (mask2.v.c) {
            bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);
            pathInfo.tLength += bezierData.segmentLength;
            pathInfo.segments.push(bezierData);
            totalLength += bezierData.segmentLength;
          }
          this._pathData.pi = pathInfo;
        }
        pathInfo = this._pathData.pi;
        currentLength = this._pathData.f.v;
        segmentInd = 0;
        pointInd = 1;
        segmentLength = 0;
        flag = true;
        segments = pathInfo.segments;
        if (currentLength < 0 && mask2.v.c) {
          if (pathInfo.tLength < Math.abs(currentLength)) {
            currentLength = -Math.abs(currentLength) % pathInfo.tLength;
          }
          segmentInd = segments.length - 1;
          points = segments[segmentInd].points;
          pointInd = points.length - 1;
          while (currentLength < 0) {
            currentLength += points[pointInd].partialLength;
            pointInd -= 1;
            if (pointInd < 0) {
              segmentInd -= 1;
              points = segments[segmentInd].points;
              pointInd = points.length - 1;
            }
          }
        }
        points = segments[segmentInd].points;
        prevPoint = points[pointInd - 1];
        currentPoint = points[pointInd];
        partialLength = currentPoint.partialLength;
      }
      len = letters.length;
      xPos = 0;
      yPos = 0;
      var yOff = documentData.finalSize * 1.2 * 0.714;
      var firstLine = true;
      var animatorProps;
      var animatorSelector;
      var j;
      var jLen;
      var letterValue;
      jLen = animators.length;
      var mult;
      var ind = -1;
      var offf;
      var xPathPos;
      var yPathPos;
      var initPathPos = currentLength;
      var initSegmentInd = segmentInd;
      var initPointInd = pointInd;
      var currentLine = -1;
      var elemOpacity;
      var sc2;
      var sw;
      var fc2;
      var k2;
      var letterSw;
      var letterSc;
      var letterFc;
      var letterM = "";
      var letterP = this.defaultPropsArray;
      var letterO;
      if (documentData.j === 2 || documentData.j === 1) {
        var animatorJustifyOffset = 0;
        var animatorFirstCharOffset = 0;
        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
        var lastIndex = 0;
        var isNewLine = true;
        for (i = 0; i < len; i += 1) {
          if (letters[i].n) {
            if (animatorJustifyOffset) {
              animatorJustifyOffset += animatorFirstCharOffset;
            }
            while (lastIndex < i) {
              letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
              lastIndex += 1;
            }
            animatorJustifyOffset = 0;
            isNewLine = true;
          } else {
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.t.propType) {
                if (isNewLine && documentData.j === 2) {
                  animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;
                }
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (mult.length) {
                  animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;
                } else {
                  animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;
                }
              }
            }
            isNewLine = false;
          }
        }
        if (animatorJustifyOffset) {
          animatorJustifyOffset += animatorFirstCharOffset;
        }
        while (lastIndex < i) {
          letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;
          lastIndex += 1;
        }
      }
      for (i = 0; i < len; i += 1) {
        matrixHelper.reset();
        elemOpacity = 1;
        if (letters[i].n) {
          xPos = 0;
          yPos += documentData.yOffset;
          yPos += firstLine ? 1 : 0;
          currentLength = initPathPos;
          firstLine = false;
          if (this._hasMaskedPath) {
            segmentInd = initSegmentInd;
            pointInd = initPointInd;
            points = segments[segmentInd].points;
            prevPoint = points[pointInd - 1];
            currentPoint = points[pointInd];
            partialLength = currentPoint.partialLength;
            segmentLength = 0;
          }
          letterM = "";
          letterFc = "";
          letterSw = "";
          letterO = "";
          letterP = this.defaultPropsArray;
        } else {
          if (this._hasMaskedPath) {
            if (currentLine !== letters[i].line) {
              switch (documentData.j) {
                case 1:
                  currentLength += totalLength - documentData.lineWidths[letters[i].line];
                  break;
                case 2:
                  currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;
                  break;
              }
              currentLine = letters[i].line;
            }
            if (ind !== letters[i].ind) {
              if (letters[ind]) {
                currentLength += letters[ind].extra;
              }
              currentLength += letters[i].an / 2;
              ind = letters[i].ind;
            }
            currentLength += alignment[0] * letters[i].an * 5e-3;
            var animatorOffset = 0;
            for (j = 0; j < jLen; j += 1) {
              animatorProps = animators[j].a;
              if (animatorProps.p.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (mult.length) {
                  animatorOffset += animatorProps.p.v[0] * mult[0];
                } else {
                  animatorOffset += animatorProps.p.v[0] * mult;
                }
              }
              if (animatorProps.a.propType) {
                animatorSelector = animators[j].s;
                mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
                if (mult.length) {
                  animatorOffset += animatorProps.a.v[0] * mult[0];
                } else {
                  animatorOffset += animatorProps.a.v[0] * mult;
                }
              }
            }
            flag = true;
            if (this._pathData.a.v) {
              currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);
              currentLength += this._pathData.f.v;
            }
            while (flag) {
              if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {
                perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;
                xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;
                yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;
                matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -(alignment[1] * yOff) * 0.01);
                flag = false;
              } else if (points) {
                segmentLength += currentPoint.partialLength;
                pointInd += 1;
                if (pointInd >= points.length) {
                  pointInd = 0;
                  segmentInd += 1;
                  if (!segments[segmentInd]) {
                    if (mask2.v.c) {
                      pointInd = 0;
                      segmentInd = 0;
                      points = segments[segmentInd].points;
                    } else {
                      segmentLength -= currentPoint.partialLength;
                      points = null;
                    }
                  } else {
                    points = segments[segmentInd].points;
                  }
                }
                if (points) {
                  prevPoint = currentPoint;
                  currentPoint = points[pointInd];
                  partialLength = currentPoint.partialLength;
                }
              }
            }
            offf = letters[i].an / 2 - letters[i].add;
            matrixHelper.translate(-offf, 0, 0);
          } else {
            offf = letters[i].an / 2 - letters[i].add;
            matrixHelper.translate(-offf, 0, 0);
            matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -alignment[1] * yOff * 0.01, 0);
          }
          for (j = 0; j < jLen; j += 1) {
            animatorProps = animators[j].a;
            if (animatorProps.t.propType) {
              animatorSelector = animators[j].s;
              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
              if (xPos !== 0 || documentData.j !== 0) {
                if (this._hasMaskedPath) {
                  if (mult.length) {
                    currentLength += animatorProps.t.v * mult[0];
                  } else {
                    currentLength += animatorProps.t.v * mult;
                  }
                } else if (mult.length) {
                  xPos += animatorProps.t.v * mult[0];
                } else {
                  xPos += animatorProps.t.v * mult;
                }
              }
            }
          }
          if (documentData.strokeWidthAnim) {
            sw = documentData.sw || 0;
          }
          if (documentData.strokeColorAnim) {
            if (documentData.sc) {
              sc2 = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];
            } else {
              sc2 = [0, 0, 0];
            }
          }
          if (documentData.fillColorAnim && documentData.fc) {
            fc2 = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];
          }
          for (j = 0; j < jLen; j += 1) {
            animatorProps = animators[j].a;
            if (animatorProps.a.propType) {
              animatorSelector = animators[j].s;
              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
              if (mult.length) {
                matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);
              } else {
                matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);
              }
            }
          }
          for (j = 0; j < jLen; j += 1) {
            animatorProps = animators[j].a;
            if (animatorProps.s.propType) {
              animatorSelector = animators[j].s;
              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
              if (mult.length) {
                matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);
              } else {
                matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);
              }
            }
          }
          for (j = 0; j < jLen; j += 1) {
            animatorProps = animators[j].a;
            animatorSelector = animators[j].s;
            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
            if (animatorProps.sk.propType) {
              if (mult.length) {
                matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);
              } else {
                matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);
              }
            }
            if (animatorProps.r.propType) {
              if (mult.length) {
                matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
              } else {
                matrixHelper.rotateZ(-animatorProps.r.v * mult);
              }
            }
            if (animatorProps.ry.propType) {
              if (mult.length) {
                matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
              } else {
                matrixHelper.rotateY(animatorProps.ry.v * mult);
              }
            }
            if (animatorProps.rx.propType) {
              if (mult.length) {
                matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
              } else {
                matrixHelper.rotateX(animatorProps.rx.v * mult);
              }
            }
            if (animatorProps.o.propType) {
              if (mult.length) {
                elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
              } else {
                elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;
              }
            }
            if (documentData.strokeWidthAnim && animatorProps.sw.propType) {
              if (mult.length) {
                sw += animatorProps.sw.v * mult[0];
              } else {
                sw += animatorProps.sw.v * mult;
              }
            }
            if (documentData.strokeColorAnim && animatorProps.sc.propType) {
              for (k2 = 0; k2 < 3; k2 += 1) {
                if (mult.length) {
                  sc2[k2] += (animatorProps.sc.v[k2] - sc2[k2]) * mult[0];
                } else {
                  sc2[k2] += (animatorProps.sc.v[k2] - sc2[k2]) * mult;
                }
              }
            }
            if (documentData.fillColorAnim && documentData.fc) {
              if (animatorProps.fc.propType) {
                for (k2 = 0; k2 < 3; k2 += 1) {
                  if (mult.length) {
                    fc2[k2] += (animatorProps.fc.v[k2] - fc2[k2]) * mult[0];
                  } else {
                    fc2[k2] += (animatorProps.fc.v[k2] - fc2[k2]) * mult;
                  }
                }
              }
              if (animatorProps.fh.propType) {
                if (mult.length) {
                  fc2 = addHueToRGB(fc2, animatorProps.fh.v * mult[0]);
                } else {
                  fc2 = addHueToRGB(fc2, animatorProps.fh.v * mult);
                }
              }
              if (animatorProps.fs.propType) {
                if (mult.length) {
                  fc2 = addSaturationToRGB(fc2, animatorProps.fs.v * mult[0]);
                } else {
                  fc2 = addSaturationToRGB(fc2, animatorProps.fs.v * mult);
                }
              }
              if (animatorProps.fb.propType) {
                if (mult.length) {
                  fc2 = addBrightnessToRGB(fc2, animatorProps.fb.v * mult[0]);
                } else {
                  fc2 = addBrightnessToRGB(fc2, animatorProps.fb.v * mult);
                }
              }
            }
          }
          for (j = 0; j < jLen; j += 1) {
            animatorProps = animators[j].a;
            if (animatorProps.p.propType) {
              animatorSelector = animators[j].s;
              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);
              if (this._hasMaskedPath) {
                if (mult.length) {
                  matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);
                } else {
                  matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
                }
              } else if (mult.length) {
                matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);
              } else {
                matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);
              }
            }
          }
          if (documentData.strokeWidthAnim) {
            letterSw = sw < 0 ? 0 : sw;
          }
          if (documentData.strokeColorAnim) {
            letterSc = "rgb(" + Math.round(sc2[0] * 255) + "," + Math.round(sc2[1] * 255) + "," + Math.round(sc2[2] * 255) + ")";
          }
          if (documentData.fillColorAnim && documentData.fc) {
            letterFc = "rgb(" + Math.round(fc2[0] * 255) + "," + Math.round(fc2[1] * 255) + "," + Math.round(fc2[2] * 255) + ")";
          }
          if (this._hasMaskedPath) {
            matrixHelper.translate(0, -documentData.ls);
            matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);
            if (this._pathData.p.v) {
              tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);
              var rot = Math.atan(tanAngle) * 180 / Math.PI;
              if (currentPoint.point[0] < prevPoint.point[0]) {
                rot += 180;
              }
              matrixHelper.rotate(-rot * Math.PI / 180);
            }
            matrixHelper.translate(xPathPos, yPathPos, 0);
            currentLength -= alignment[0] * letters[i].an * 5e-3;
            if (letters[i + 1] && ind !== letters[i + 1].ind) {
              currentLength += letters[i].an / 2;
              currentLength += documentData.tr * 1e-3 * documentData.finalSize;
            }
          } else {
            matrixHelper.translate(xPos, yPos, 0);
            if (documentData.ps) {
              matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
            }
            switch (documentData.j) {
              case 1:
                matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);
                break;
              case 2:
                matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);
                break;
            }
            matrixHelper.translate(0, -documentData.ls);
            matrixHelper.translate(offf, 0, 0);
            matrixHelper.translate(alignment[0] * letters[i].an * 5e-3, alignment[1] * yOff * 0.01, 0);
            xPos += letters[i].l + documentData.tr * 1e-3 * documentData.finalSize;
          }
          if (renderType === "html") {
            letterM = matrixHelper.toCSS();
          } else if (renderType === "svg") {
            letterM = matrixHelper.to2dCSS();
          } else {
            letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];
          }
          letterO = elemOpacity;
        }
        if (renderedLettersCount <= i) {
          letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);
          this.renderedLetters.push(letterValue);
          renderedLettersCount += 1;
          this.lettersChangedFlag = true;
        } else {
          letterValue = this.renderedLetters[i];
          this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;
        }
      }
    };
    TextAnimatorProperty.prototype.getValue = function() {
      if (this._elem.globalData.frameId === this._frameId) {
        return;
      }
      this._frameId = this._elem.globalData.frameId;
      this.iterateDynamicProperties();
    };
    TextAnimatorProperty.prototype.mHelper = new Matrix();
    TextAnimatorProperty.prototype.defaultPropsArray = [];
    extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
    function ITextElement() {
    }
    ITextElement.prototype.initElement = function(data2, globalData2, comp2) {
      this.lettersChangedFlag = true;
      this.initFrame();
      this.initBaseData(data2, globalData2, comp2);
      this.textProperty = new TextProperty(this, data2.t, this.dynamicProperties);
      this.textAnimator = new TextAnimatorProperty(data2.t, this.renderType, this);
      this.initTransform(data2, globalData2, comp2);
      this.initHierarchy();
      this.initRenderable();
      this.initRendererElement();
      this.createContainerElements();
      this.createRenderableComponents();
      this.createContent();
      this.hide();
      this.textAnimator.searchProperties(this.dynamicProperties);
    };
    ITextElement.prototype.prepareFrame = function(num) {
      this._mdf = false;
      this.prepareRenderableFrame(num);
      this.prepareProperties(num, this.isInRange);
      if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
        this.buildNewText();
        this.textProperty._isFirstFrame = false;
        this.textProperty._mdf = false;
      }
    };
    ITextElement.prototype.createPathShape = function(matrixHelper, shapes) {
      var j;
      var jLen = shapes.length;
      var pathNodes;
      var shapeStr = "";
      for (j = 0; j < jLen; j += 1) {
        if (shapes[j].ty === "sh") {
          pathNodes = shapes[j].ks.k;
          shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);
        }
      }
      return shapeStr;
    };
    ITextElement.prototype.updateDocumentData = function(newData, index2) {
      this.textProperty.updateDocumentData(newData, index2);
    };
    ITextElement.prototype.canResizeFont = function(_canResize) {
      this.textProperty.canResizeFont(_canResize);
    };
    ITextElement.prototype.setMinimumFontSize = function(_fontSize) {
      this.textProperty.setMinimumFontSize(_fontSize);
    };
    ITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {
      if (documentData.ps) {
        matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);
      }
      matrixHelper.translate(0, -documentData.ls, 0);
      switch (documentData.j) {
        case 1:
          matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);
          break;
        case 2:
          matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);
          break;
      }
      matrixHelper.translate(xPos, yPos, 0);
    };
    ITextElement.prototype.buildColor = function(colorData) {
      return "rgb(" + Math.round(colorData[0] * 255) + "," + Math.round(colorData[1] * 255) + "," + Math.round(colorData[2] * 255) + ")";
    };
    ITextElement.prototype.emptyProp = new LetterProps();
    ITextElement.prototype.destroy = function() {
    };
    var emptyShapeData = {
      shapes: []
    };
    function SVGTextLottieElement(data2, globalData2, comp2) {
      this.textSpans = [];
      this.renderType = "svg";
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);
    SVGTextLottieElement.prototype.createContent = function() {
      if (this.data.singleShape && !this.globalData.fontManager.chars) {
        this.textContainer = createNS("text");
      }
    };
    SVGTextLottieElement.prototype.buildTextContents = function(textArray) {
      var i = 0;
      var len = textArray.length;
      var textContents = [];
      var currentTextContent = "";
      while (i < len) {
        if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {
          textContents.push(currentTextContent);
          currentTextContent = "";
        } else {
          currentTextContent += textArray[i];
        }
        i += 1;
      }
      textContents.push(currentTextContent);
      return textContents;
    };
    SVGTextLottieElement.prototype.buildShapeData = function(data2, scale2) {
      if (data2.shapes && data2.shapes.length) {
        var shape = data2.shapes[0];
        if (shape.it) {
          var shapeItem = shape.it[shape.it.length - 1];
          if (shapeItem.s) {
            shapeItem.s.k[0] = scale2;
            shapeItem.s.k[1] = scale2;
          }
        }
      }
      return data2;
    };
    SVGTextLottieElement.prototype.buildNewText = function() {
      this.addDynamicProperty(this);
      var i;
      var len;
      var documentData = this.textProperty.currentData;
      this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);
      if (documentData.fc) {
        this.layerElement.setAttribute("fill", this.buildColor(documentData.fc));
      } else {
        this.layerElement.setAttribute("fill", "rgba(0,0,0,0)");
      }
      if (documentData.sc) {
        this.layerElement.setAttribute("stroke", this.buildColor(documentData.sc));
        this.layerElement.setAttribute("stroke-width", documentData.sw);
      }
      this.layerElement.setAttribute("font-size", documentData.finalSize);
      var fontData = this.globalData.fontManager.getFontByName(documentData.f);
      if (fontData.fClass) {
        this.layerElement.setAttribute("class", fontData.fClass);
      } else {
        this.layerElement.setAttribute("font-family", fontData.fFamily);
        var fWeight = documentData.fWeight;
        var fStyle = documentData.fStyle;
        this.layerElement.setAttribute("font-style", fStyle);
        this.layerElement.setAttribute("font-weight", fWeight);
      }
      this.layerElement.setAttribute("aria-label", documentData.t);
      var letters = documentData.l || [];
      var usesGlyphs = !!this.globalData.fontManager.chars;
      len = letters.length;
      var tSpan;
      var matrixHelper = this.mHelper;
      var shapeStr = "";
      var singleShape = this.data.singleShape;
      var xPos = 0;
      var yPos = 0;
      var firstLine = true;
      var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;
      if (singleShape && !usesGlyphs && !documentData.sz) {
        var tElement = this.textContainer;
        var justify = "start";
        switch (documentData.j) {
          case 1:
            justify = "end";
            break;
          case 2:
            justify = "middle";
            break;
          default:
            justify = "start";
            break;
        }
        tElement.setAttribute("text-anchor", justify);
        tElement.setAttribute("letter-spacing", trackingOffset);
        var textContent = this.buildTextContents(documentData.finalText);
        len = textContent.length;
        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;
        for (i = 0; i < len; i += 1) {
          tSpan = this.textSpans[i].span || createNS("tspan");
          tSpan.textContent = textContent[i];
          tSpan.setAttribute("x", 0);
          tSpan.setAttribute("y", yPos);
          tSpan.style.display = "inherit";
          tElement.appendChild(tSpan);
          if (!this.textSpans[i]) {
            this.textSpans[i] = {
              span: null,
              glyph: null
            };
          }
          this.textSpans[i].span = tSpan;
          yPos += documentData.finalLineHeight;
        }
        this.layerElement.appendChild(tElement);
      } else {
        var cachedSpansLength = this.textSpans.length;
        var charData;
        for (i = 0; i < len; i += 1) {
          if (!this.textSpans[i]) {
            this.textSpans[i] = {
              span: null,
              childSpan: null,
              glyph: null
            };
          }
          if (!usesGlyphs || !singleShape || i === 0) {
            tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? "g" : "text");
            if (cachedSpansLength <= i) {
              tSpan.setAttribute("stroke-linecap", "butt");
              tSpan.setAttribute("stroke-linejoin", "round");
              tSpan.setAttribute("stroke-miterlimit", "4");
              this.textSpans[i].span = tSpan;
              if (usesGlyphs) {
                var childSpan = createNS("g");
                tSpan.appendChild(childSpan);
                this.textSpans[i].childSpan = childSpan;
              }
              this.textSpans[i].span = tSpan;
              this.layerElement.appendChild(tSpan);
            }
            tSpan.style.display = "inherit";
          }
          matrixHelper.reset();
          if (singleShape) {
            if (letters[i].n) {
              xPos = -trackingOffset;
              yPos += documentData.yOffset;
              yPos += firstLine ? 1 : 0;
              firstLine = false;
            }
            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
            xPos += letters[i].l || 0;
            xPos += trackingOffset;
          }
          if (usesGlyphs) {
            charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
            var glyphElement;
            if (charData.t === 1) {
              glyphElement = new SVGCompElement(charData.data, this.globalData, this);
            } else {
              var data2 = emptyShapeData;
              if (charData.data && charData.data.shapes) {
                data2 = this.buildShapeData(charData.data, documentData.finalSize);
              }
              glyphElement = new SVGShapeElement(data2, this.globalData, this);
            }
            if (this.textSpans[i].glyph) {
              var glyph = this.textSpans[i].glyph;
              this.textSpans[i].childSpan.removeChild(glyph.layerElement);
              glyph.destroy();
            }
            this.textSpans[i].glyph = glyphElement;
            glyphElement._debug = true;
            glyphElement.prepareFrame(0);
            glyphElement.renderFrame();
            this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);
            if (charData.t === 1) {
              this.textSpans[i].childSpan.setAttribute("transform", "scale(" + documentData.finalSize / 100 + "," + documentData.finalSize / 100 + ")");
            }
          } else {
            if (singleShape) {
              tSpan.setAttribute("transform", "translate(" + matrixHelper.props[12] + "," + matrixHelper.props[13] + ")");
            }
            tSpan.textContent = letters[i].val;
            tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
          }
        }
        if (singleShape && tSpan) {
          tSpan.setAttribute("d", shapeStr);
        }
      }
      while (i < this.textSpans.length) {
        this.textSpans[i].span.style.display = "none";
        i += 1;
      }
      this._sizeChanged = true;
    };
    SVGTextLottieElement.prototype.sourceRectAtTime = function() {
      this.prepareFrame(this.comp.renderedFrame - this.data.st);
      this.renderInnerContent();
      if (this._sizeChanged) {
        this._sizeChanged = false;
        var textBox = this.layerElement.getBBox();
        this.bbox = {
          top: textBox.y,
          left: textBox.x,
          width: textBox.width,
          height: textBox.height
        };
      }
      return this.bbox;
    };
    SVGTextLottieElement.prototype.getValue = function() {
      var i;
      var len = this.textSpans.length;
      var glyphElement;
      this.renderedFrame = this.comp.renderedFrame;
      for (i = 0; i < len; i += 1) {
        glyphElement = this.textSpans[i].glyph;
        if (glyphElement) {
          glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);
          if (glyphElement._mdf) {
            this._mdf = true;
          }
        }
      }
    };
    SVGTextLottieElement.prototype.renderInnerContent = function() {
      if (!this.data.singleShape || this._mdf) {
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
        if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {
          this._sizeChanged = true;
          var i;
          var len;
          var renderedLetters = this.textAnimator.renderedLetters;
          var letters = this.textProperty.currentData.l;
          len = letters.length;
          var renderedLetter;
          var textSpan;
          var glyphElement;
          for (i = 0; i < len; i += 1) {
            if (!letters[i].n) {
              renderedLetter = renderedLetters[i];
              textSpan = this.textSpans[i].span;
              glyphElement = this.textSpans[i].glyph;
              if (glyphElement) {
                glyphElement.renderFrame();
              }
              if (renderedLetter._mdf.m) {
                textSpan.setAttribute("transform", renderedLetter.m);
              }
              if (renderedLetter._mdf.o) {
                textSpan.setAttribute("opacity", renderedLetter.o);
              }
              if (renderedLetter._mdf.sw) {
                textSpan.setAttribute("stroke-width", renderedLetter.sw);
              }
              if (renderedLetter._mdf.sc) {
                textSpan.setAttribute("stroke", renderedLetter.sc);
              }
              if (renderedLetter._mdf.fc) {
                textSpan.setAttribute("fill", renderedLetter.fc);
              }
            }
          }
        }
      }
    };
    function ISolidElement(data2, globalData2, comp2) {
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([IImageElement], ISolidElement);
    ISolidElement.prototype.createContent = function() {
      var rect = createNS("rect");
      rect.setAttribute("width", this.data.sw);
      rect.setAttribute("height", this.data.sh);
      rect.setAttribute("fill", this.data.sc);
      this.layerElement.appendChild(rect);
    };
    function NullElement(data2, globalData2, comp2) {
      this.initFrame();
      this.initBaseData(data2, globalData2, comp2);
      this.initFrame();
      this.initTransform(data2, globalData2, comp2);
      this.initHierarchy();
    }
    NullElement.prototype.prepareFrame = function(num) {
      this.prepareProperties(num, true);
    };
    NullElement.prototype.renderFrame = function() {
    };
    NullElement.prototype.getBaseElement = function() {
      return null;
    };
    NullElement.prototype.destroy = function() {
    };
    NullElement.prototype.sourceRectAtTime = function() {
    };
    NullElement.prototype.hide = function() {
    };
    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);
    function SVGRendererBase() {
    }
    extendPrototype([BaseRenderer], SVGRendererBase);
    SVGRendererBase.prototype.createNull = function(data2) {
      return new NullElement(data2, this.globalData, this);
    };
    SVGRendererBase.prototype.createShape = function(data2) {
      return new SVGShapeElement(data2, this.globalData, this);
    };
    SVGRendererBase.prototype.createText = function(data2) {
      return new SVGTextLottieElement(data2, this.globalData, this);
    };
    SVGRendererBase.prototype.createImage = function(data2) {
      return new IImageElement(data2, this.globalData, this);
    };
    SVGRendererBase.prototype.createSolid = function(data2) {
      return new ISolidElement(data2, this.globalData, this);
    };
    SVGRendererBase.prototype.configAnimation = function(animData) {
      this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg");
      this.svgElement.setAttribute("xmlns:xlink", "http://www.w3.org/1999/xlink");
      if (this.renderConfig.viewBoxSize) {
        this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize);
      } else {
        this.svgElement.setAttribute("viewBox", "0 0 " + animData.w + " " + animData.h);
      }
      if (!this.renderConfig.viewBoxOnly) {
        this.svgElement.setAttribute("width", animData.w);
        this.svgElement.setAttribute("height", animData.h);
        this.svgElement.style.width = "100%";
        this.svgElement.style.height = "100%";
        this.svgElement.style.transform = "translate3d(0,0,0)";
        this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;
      }
      if (this.renderConfig.width) {
        this.svgElement.setAttribute("width", this.renderConfig.width);
      }
      if (this.renderConfig.height) {
        this.svgElement.setAttribute("height", this.renderConfig.height);
      }
      if (this.renderConfig.className) {
        this.svgElement.setAttribute("class", this.renderConfig.className);
      }
      if (this.renderConfig.id) {
        this.svgElement.setAttribute("id", this.renderConfig.id);
      }
      if (this.renderConfig.focusable !== void 0) {
        this.svgElement.setAttribute("focusable", this.renderConfig.focusable);
      }
      this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio);
      this.animationItem.wrapper.appendChild(this.svgElement);
      var defs = this.globalData.defs;
      this.setupGlobalData(animData, defs);
      this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
      this.data = animData;
      var maskElement = createNS("clipPath");
      var rect = createNS("rect");
      rect.setAttribute("width", animData.w);
      rect.setAttribute("height", animData.h);
      rect.setAttribute("x", 0);
      rect.setAttribute("y", 0);
      var maskId = createElementID();
      maskElement.setAttribute("id", maskId);
      maskElement.appendChild(rect);
      this.layerElement.setAttribute("clip-path", "url(" + getLocationHref() + "#" + maskId + ")");
      defs.appendChild(maskElement);
      this.layers = animData.layers;
      this.elements = createSizedArray(animData.layers.length);
    };
    SVGRendererBase.prototype.destroy = function() {
      if (this.animationItem.wrapper) {
        this.animationItem.wrapper.innerText = "";
      }
      this.layerElement = null;
      this.globalData.defs = null;
      var i;
      var len = this.layers ? this.layers.length : 0;
      for (i = 0; i < len; i += 1) {
        if (this.elements[i]) {
          this.elements[i].destroy();
        }
      }
      this.elements.length = 0;
      this.destroyed = true;
      this.animationItem = null;
    };
    SVGRendererBase.prototype.updateContainerSize = function() {
    };
    SVGRendererBase.prototype.findIndexByInd = function(ind) {
      var i = 0;
      var len = this.layers.length;
      for (i = 0; i < len; i += 1) {
        if (this.layers[i].ind === ind) {
          return i;
        }
      }
      return -1;
    };
    SVGRendererBase.prototype.buildItem = function(pos) {
      var elements = this.elements;
      if (elements[pos] || this.layers[pos].ty === 99) {
        return;
      }
      elements[pos] = true;
      var element = this.createItem(this.layers[pos]);
      elements[pos] = element;
      if (getExpressionsPlugin()) {
        if (this.layers[pos].ty === 0) {
          this.globalData.projectInterface.registerComposition(element);
        }
        element.initExpressions();
      }
      this.appendElementInPos(element, pos);
      if (this.layers[pos].tt) {
        var elementIndex = "tp" in this.layers[pos] ? this.findIndexByInd(this.layers[pos].tp) : pos - 1;
        if (elementIndex === -1) {
          return;
        }
        if (!this.elements[elementIndex] || this.elements[elementIndex] === true) {
          this.buildItem(elementIndex);
          this.addPendingElement(element);
        } else {
          var matteElement = elements[elementIndex];
          var matteMask = matteElement.getMatte(this.layers[pos].tt);
          element.setMatte(matteMask);
        }
      }
    };
    SVGRendererBase.prototype.checkPendingElements = function() {
      while (this.pendingElements.length) {
        var element = this.pendingElements.pop();
        element.checkParenting();
        if (element.data.tt) {
          var i = 0;
          var len = this.elements.length;
          while (i < len) {
            if (this.elements[i] === element) {
              var elementIndex = "tp" in element.data ? this.findIndexByInd(element.data.tp) : i - 1;
              var matteElement = this.elements[elementIndex];
              var matteMask = matteElement.getMatte(this.layers[i].tt);
              element.setMatte(matteMask);
              break;
            }
            i += 1;
          }
        }
      }
    };
    SVGRendererBase.prototype.renderFrame = function(num) {
      if (this.renderedFrame === num || this.destroyed) {
        return;
      }
      if (num === null) {
        num = this.renderedFrame;
      } else {
        this.renderedFrame = num;
      }
      this.globalData.frameNum = num;
      this.globalData.frameId += 1;
      this.globalData.projectInterface.currentFrame = num;
      this.globalData._mdf = false;
      var i;
      var len = this.layers.length;
      if (!this.completeLayers) {
        this.checkLayers(num);
      }
      for (i = len - 1; i >= 0; i -= 1) {
        if (this.completeLayers || this.elements[i]) {
          this.elements[i].prepareFrame(num - this.layers[i].st);
        }
      }
      if (this.globalData._mdf) {
        for (i = 0; i < len; i += 1) {
          if (this.completeLayers || this.elements[i]) {
            this.elements[i].renderFrame();
          }
        }
      }
    };
    SVGRendererBase.prototype.appendElementInPos = function(element, pos) {
      var newElement = element.getBaseElement();
      if (!newElement) {
        return;
      }
      var i = 0;
      var nextElement;
      while (i < pos) {
        if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {
          nextElement = this.elements[i].getBaseElement();
        }
        i += 1;
      }
      if (nextElement) {
        this.layerElement.insertBefore(newElement, nextElement);
      } else {
        this.layerElement.appendChild(newElement);
      }
    };
    SVGRendererBase.prototype.hide = function() {
      this.layerElement.style.display = "none";
    };
    SVGRendererBase.prototype.show = function() {
      this.layerElement.style.display = "block";
    };
    function ICompElement() {
    }
    extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);
    ICompElement.prototype.initElement = function(data2, globalData2, comp2) {
      this.initFrame();
      this.initBaseData(data2, globalData2, comp2);
      this.initTransform(data2, globalData2, comp2);
      this.initRenderable();
      this.initHierarchy();
      this.initRendererElement();
      this.createContainerElements();
      this.createRenderableComponents();
      if (this.data.xt || !globalData2.progressiveLoad) {
        this.buildAllItems();
      }
      this.hide();
    };
    ICompElement.prototype.prepareFrame = function(num) {
      this._mdf = false;
      this.prepareRenderableFrame(num);
      this.prepareProperties(num, this.isInRange);
      if (!this.isInRange && !this.data.xt) {
        return;
      }
      if (!this.tm._placeholder) {
        var timeRemapped = this.tm.v;
        if (timeRemapped === this.data.op) {
          timeRemapped = this.data.op - 1;
        }
        this.renderedFrame = timeRemapped;
      } else {
        this.renderedFrame = num / this.data.sr;
      }
      var i;
      var len = this.elements.length;
      if (!this.completeLayers) {
        this.checkLayers(this.renderedFrame);
      }
      for (i = len - 1; i >= 0; i -= 1) {
        if (this.completeLayers || this.elements[i]) {
          this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);
          if (this.elements[i]._mdf) {
            this._mdf = true;
          }
        }
      }
    };
    ICompElement.prototype.renderInnerContent = function() {
      var i;
      var len = this.layers.length;
      for (i = 0; i < len; i += 1) {
        if (this.completeLayers || this.elements[i]) {
          this.elements[i].renderFrame();
        }
      }
    };
    ICompElement.prototype.setElements = function(elems) {
      this.elements = elems;
    };
    ICompElement.prototype.getElements = function() {
      return this.elements;
    };
    ICompElement.prototype.destroyElements = function() {
      var i;
      var len = this.layers.length;
      for (i = 0; i < len; i += 1) {
        if (this.elements[i]) {
          this.elements[i].destroy();
        }
      }
    };
    ICompElement.prototype.destroy = function() {
      this.destroyElements();
      this.destroyBaseElement();
    };
    function SVGCompElement(data2, globalData2, comp2) {
      this.layers = data2.layers;
      this.supports3d = true;
      this.completeLayers = false;
      this.pendingElements = [];
      this.elements = this.layers ? createSizedArray(this.layers.length) : [];
      this.initElement(data2, globalData2, comp2);
      this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {
        _placeholder: true
      };
    }
    extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);
    SVGCompElement.prototype.createComp = function(data2) {
      return new SVGCompElement(data2, this.globalData, this);
    };
    function SVGRenderer(animationItem, config) {
      this.animationItem = animationItem;
      this.layers = null;
      this.renderedFrame = -1;
      this.svgElement = createNS("svg");
      var ariaLabel = "";
      if (config && config.title) {
        var titleElement = createNS("title");
        var titleId = createElementID();
        titleElement.setAttribute("id", titleId);
        titleElement.textContent = config.title;
        this.svgElement.appendChild(titleElement);
        ariaLabel += titleId;
      }
      if (config && config.description) {
        var descElement = createNS("desc");
        var descId = createElementID();
        descElement.setAttribute("id", descId);
        descElement.textContent = config.description;
        this.svgElement.appendChild(descElement);
        ariaLabel += " " + descId;
      }
      if (ariaLabel) {
        this.svgElement.setAttribute("aria-labelledby", ariaLabel);
      }
      var defs = createNS("defs");
      this.svgElement.appendChild(defs);
      var maskElement = createNS("g");
      this.svgElement.appendChild(maskElement);
      this.layerElement = maskElement;
      this.renderConfig = {
        preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
        imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
        contentVisibility: config && config.contentVisibility || "visible",
        progressiveLoad: config && config.progressiveLoad || false,
        hideOnTransparent: !(config && config.hideOnTransparent === false),
        viewBoxOnly: config && config.viewBoxOnly || false,
        viewBoxSize: config && config.viewBoxSize || false,
        className: config && config.className || "",
        id: config && config.id || "",
        focusable: config && config.focusable,
        filterSize: {
          width: config && config.filterSize && config.filterSize.width || "100%",
          height: config && config.filterSize && config.filterSize.height || "100%",
          x: config && config.filterSize && config.filterSize.x || "0%",
          y: config && config.filterSize && config.filterSize.y || "0%"
        },
        width: config && config.width,
        height: config && config.height,
        runExpressions: !config || config.runExpressions === void 0 || config.runExpressions
      };
      this.globalData = {
        _mdf: false,
        frameNum: -1,
        defs,
        renderConfig: this.renderConfig
      };
      this.elements = [];
      this.pendingElements = [];
      this.destroyed = false;
      this.rendererType = "svg";
    }
    extendPrototype([SVGRendererBase], SVGRenderer);
    SVGRenderer.prototype.createComp = function(data2) {
      return new SVGCompElement(data2, this.globalData, this);
    };
    function CVContextData() {
      this.saved = [];
      this.cArrPos = 0;
      this.cTr = new Matrix();
      this.cO = 1;
      var i;
      var len = 15;
      this.savedOp = createTypedArray("float32", len);
      for (i = 0; i < len; i += 1) {
        this.saved[i] = createTypedArray("float32", 16);
      }
      this._length = len;
    }
    CVContextData.prototype.duplicate = function() {
      var newLength = this._length * 2;
      var currentSavedOp = this.savedOp;
      this.savedOp = createTypedArray("float32", newLength);
      this.savedOp.set(currentSavedOp);
      var i = 0;
      for (i = this._length; i < newLength; i += 1) {
        this.saved[i] = createTypedArray("float32", 16);
      }
      this._length = newLength;
    };
    CVContextData.prototype.reset = function() {
      this.cArrPos = 0;
      this.cTr.reset();
      this.cO = 1;
    };
    CVContextData.prototype.popTransform = function() {
      var popped = this.saved[this.cArrPos];
      var i;
      var arr = this.cTr.props;
      for (i = 0; i < 16; i += 1) {
        arr[i] = popped[i];
      }
      return popped;
    };
    CVContextData.prototype.popOpacity = function() {
      var popped = this.savedOp[this.cArrPos];
      this.cO = popped;
      return popped;
    };
    CVContextData.prototype.pop = function() {
      this.cArrPos -= 1;
      var transform2 = this.popTransform();
      var opacity = this.popOpacity();
      return {
        transform: transform2,
        opacity
      };
    };
    CVContextData.prototype.push = function() {
      var props = this.cTr.props;
      if (this._length <= this.cArrPos) {
        this.duplicate();
      }
      var i;
      var arr = this.saved[this.cArrPos];
      for (i = 0; i < 16; i += 1) {
        arr[i] = props[i];
      }
      this.savedOp[this.cArrPos] = this.cO;
      this.cArrPos += 1;
    };
    CVContextData.prototype.getTransform = function() {
      return this.cTr;
    };
    CVContextData.prototype.getOpacity = function() {
      return this.cO;
    };
    CVContextData.prototype.setOpacity = function(value2) {
      this.cO = value2;
    };
    function ShapeTransformManager() {
      this.sequences = {};
      this.sequenceList = [];
      this.transform_key_count = 0;
    }
    ShapeTransformManager.prototype = {
      addTransformSequence: function addTransformSequence(transforms) {
        var i;
        var len = transforms.length;
        var key2 = "_";
        for (i = 0; i < len; i += 1) {
          key2 += transforms[i].transform.key + "_";
        }
        var sequence = this.sequences[key2];
        if (!sequence) {
          sequence = {
            transforms: [].concat(transforms),
            finalTransform: new Matrix(),
            _mdf: false
          };
          this.sequences[key2] = sequence;
          this.sequenceList.push(sequence);
        }
        return sequence;
      },
      processSequence: function processSequence(sequence, isFirstFrame) {
        var i = 0;
        var len = sequence.transforms.length;
        var _mdf = isFirstFrame;
        while (i < len && !isFirstFrame) {
          if (sequence.transforms[i].transform.mProps._mdf) {
            _mdf = true;
            break;
          }
          i += 1;
        }
        if (_mdf) {
          var props;
          sequence.finalTransform.reset();
          for (i = len - 1; i >= 0; i -= 1) {
            props = sequence.transforms[i].transform.mProps.v.props;
            sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);
          }
        }
        sequence._mdf = _mdf;
      },
      processSequences: function processSequences(isFirstFrame) {
        var i;
        var len = this.sequenceList.length;
        for (i = 0; i < len; i += 1) {
          this.processSequence(this.sequenceList[i], isFirstFrame);
        }
      },
      getNewKey: function getNewKey() {
        this.transform_key_count += 1;
        return "_" + this.transform_key_count;
      }
    };
    var lumaLoader = function lumaLoader2() {
      var id2 = "__lottie_element_luma_buffer";
      var lumaBuffer = null;
      var lumaBufferCtx = null;
      var svg = null;
      function createLumaSvgFilter() {
        var _svg = createNS("svg");
        var fil = createNS("filter");
        var matrix = createNS("feColorMatrix");
        fil.setAttribute("id", id2);
        matrix.setAttribute("type", "matrix");
        matrix.setAttribute("color-interpolation-filters", "sRGB");
        matrix.setAttribute("values", "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0");
        fil.appendChild(matrix);
        _svg.appendChild(fil);
        _svg.setAttribute("id", id2 + "_svg");
        if (featureSupport.svgLumaHidden) {
          _svg.style.display = "none";
        }
        return _svg;
      }
      function loadLuma() {
        if (!lumaBuffer) {
          svg = createLumaSvgFilter();
          document.body.appendChild(svg);
          lumaBuffer = createTag("canvas");
          lumaBufferCtx = lumaBuffer.getContext("2d");
          lumaBufferCtx.filter = "url(#" + id2 + ")";
          lumaBufferCtx.fillStyle = "rgba(0,0,0,0)";
          lumaBufferCtx.fillRect(0, 0, 1, 1);
        }
      }
      function getLuma(canvas) {
        if (!lumaBuffer) {
          loadLuma();
        }
        lumaBuffer.width = canvas.width;
        lumaBuffer.height = canvas.height;
        lumaBufferCtx.filter = "url(#" + id2 + ")";
        return lumaBuffer;
      }
      return {
        load: loadLuma,
        get: getLuma
      };
    };
    function createCanvas(width2, height2) {
      if (featureSupport.offscreenCanvas) {
        return new OffscreenCanvas(width2, height2);
      }
      var canvas = createTag("canvas");
      canvas.width = width2;
      canvas.height = height2;
      return canvas;
    }
    var assetLoader = function() {
      return {
        loadLumaCanvas: lumaLoader.load,
        getLumaCanvas: lumaLoader.get,
        createCanvas
      };
    }();
    function CVEffects() {
    }
    CVEffects.prototype.renderFrame = function() {
    };
    function CVMaskElement(data2, element) {
      this.data = data2;
      this.element = element;
      this.masksProperties = this.data.masksProperties || [];
      this.viewData = createSizedArray(this.masksProperties.length);
      var i;
      var len = this.masksProperties.length;
      var hasMasks = false;
      for (i = 0; i < len; i += 1) {
        if (this.masksProperties[i].mode !== "n") {
          hasMasks = true;
        }
        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);
      }
      this.hasMasks = hasMasks;
      if (hasMasks) {
        this.element.addRenderableComponent(this);
      }
    }
    CVMaskElement.prototype.renderFrame = function() {
      if (!this.hasMasks) {
        return;
      }
      var transform2 = this.element.finalTransform.mat;
      var ctx = this.element.canvasContext;
      var i;
      var len = this.masksProperties.length;
      var pt;
      var pts;
      var data2;
      ctx.beginPath();
      for (i = 0; i < len; i += 1) {
        if (this.masksProperties[i].mode !== "n") {
          if (this.masksProperties[i].inv) {
            ctx.moveTo(0, 0);
            ctx.lineTo(this.element.globalData.compSize.w, 0);
            ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);
            ctx.lineTo(0, this.element.globalData.compSize.h);
            ctx.lineTo(0, 0);
          }
          data2 = this.viewData[i].v;
          pt = transform2.applyToPointArray(data2.v[0][0], data2.v[0][1], 0);
          ctx.moveTo(pt[0], pt[1]);
          var j;
          var jLen = data2._length;
          for (j = 1; j < jLen; j += 1) {
            pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[j], data2.v[j]);
            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
          }
          pts = transform2.applyToTriplePoints(data2.o[j - 1], data2.i[0], data2.v[0]);
          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
        }
      }
      this.element.globalData.renderer.save(true);
      ctx.clip();
    };
    CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;
    CVMaskElement.prototype.destroy = function() {
      this.element = null;
    };
    function CVBaseElement() {
    }
    var operationsMap = {
      1: "source-in",
      2: "source-out",
      3: "source-in",
      4: "source-out"
    };
    CVBaseElement.prototype = {
      createElements: function createElements() {
      },
      initRendererElement: function initRendererElement() {
      },
      createContainerElements: function createContainerElements() {
        if (this.data.tt >= 1) {
          this.buffers = [];
          var canvasContext = this.globalData.canvasContext;
          var bufferCanvas = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);
          this.buffers.push(bufferCanvas);
          var bufferCanvas2 = assetLoader.createCanvas(canvasContext.canvas.width, canvasContext.canvas.height);
          this.buffers.push(bufferCanvas2);
          if (this.data.tt >= 3 && !document._isProxy) {
            assetLoader.loadLumaCanvas();
          }
        }
        this.canvasContext = this.globalData.canvasContext;
        this.transformCanvas = this.globalData.transformCanvas;
        this.renderableEffectsManager = new CVEffects();
      },
      createContent: function createContent() {
      },
      setBlendMode: function setBlendMode() {
        var globalData2 = this.globalData;
        if (globalData2.blendMode !== this.data.bm) {
          globalData2.blendMode = this.data.bm;
          var blendModeValue = getBlendMode(this.data.bm);
          globalData2.canvasContext.globalCompositeOperation = blendModeValue;
        }
      },
      createRenderableComponents: function createRenderableComponents() {
        this.maskManager = new CVMaskElement(this.data, this);
      },
      hideElement: function hideElement() {
        if (!this.hidden && (!this.isInRange || this.isTransparent)) {
          this.hidden = true;
        }
      },
      showElement: function showElement() {
        if (this.isInRange && !this.isTransparent) {
          this.hidden = false;
          this._isFirstFrame = true;
          this.maskManager._isFirstFrame = true;
        }
      },
      clearCanvas: function clearCanvas(canvasContext) {
        canvasContext.clearRect(this.transformCanvas.tx, this.transformCanvas.ty, this.transformCanvas.w * this.transformCanvas.sx, this.transformCanvas.h * this.transformCanvas.sy);
      },
      prepareLayer: function prepareLayer() {
        if (this.data.tt >= 1) {
          var buffer = this.buffers[0];
          var bufferCtx = buffer.getContext("2d");
          this.clearCanvas(bufferCtx);
          bufferCtx.drawImage(this.canvasContext.canvas, 0, 0);
          this.currentTransform = this.canvasContext.getTransform();
          this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);
          this.clearCanvas(this.canvasContext);
          this.canvasContext.setTransform(this.currentTransform);
        }
      },
      exitLayer: function exitLayer() {
        if (this.data.tt >= 1) {
          var buffer = this.buffers[1];
          var bufferCtx = buffer.getContext("2d");
          this.clearCanvas(bufferCtx);
          bufferCtx.drawImage(this.canvasContext.canvas, 0, 0);
          this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);
          this.clearCanvas(this.canvasContext);
          this.canvasContext.setTransform(this.currentTransform);
          var mask2 = this.comp.getElementById("tp" in this.data ? this.data.tp : this.data.ind - 1);
          mask2.renderFrame(true);
          this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);
          if (this.data.tt >= 3 && !document._isProxy) {
            var lumaBuffer = assetLoader.getLumaCanvas(this.canvasContext.canvas);
            var lumaBufferCtx = lumaBuffer.getContext("2d");
            lumaBufferCtx.drawImage(this.canvasContext.canvas, 0, 0);
            this.clearCanvas(this.canvasContext);
            this.canvasContext.drawImage(lumaBuffer, 0, 0);
          }
          this.canvasContext.globalCompositeOperation = operationsMap[this.data.tt];
          this.canvasContext.drawImage(buffer, 0, 0);
          this.canvasContext.globalCompositeOperation = "destination-over";
          this.canvasContext.drawImage(this.buffers[0], 0, 0);
          this.canvasContext.setTransform(this.currentTransform);
          this.canvasContext.globalCompositeOperation = "source-over";
        }
      },
      renderFrame: function renderFrame(forceRender) {
        if (this.hidden || this.data.hd) {
          return;
        }
        if (this.data.td === 1 && !forceRender) {
          return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.setBlendMode();
        var forceRealStack = this.data.ty === 0;
        this.prepareLayer();
        this.globalData.renderer.save(forceRealStack);
        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);
        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);
        this.renderInnerContent();
        this.globalData.renderer.restore(forceRealStack);
        this.exitLayer();
        if (this.maskManager.hasMasks) {
          this.globalData.renderer.restore(true);
        }
        if (this._isFirstFrame) {
          this._isFirstFrame = false;
        }
      },
      destroy: function destroy() {
        this.canvasContext = null;
        this.data = null;
        this.globalData = null;
        this.maskManager.destroy();
      },
      mHelper: new Matrix()
    };
    CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
    CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;
    function CVShapeData(element, data2, styles, transformsManager) {
      this.styledShapes = [];
      this.tr = [0, 0, 0, 0, 0, 0];
      var ty = 4;
      if (data2.ty === "rc") {
        ty = 5;
      } else if (data2.ty === "el") {
        ty = 6;
      } else if (data2.ty === "sr") {
        ty = 7;
      }
      this.sh = ShapePropertyFactory.getShapeProp(element, data2, ty, element);
      var i;
      var len = styles.length;
      var styledShape;
      for (i = 0; i < len; i += 1) {
        if (!styles[i].closed) {
          styledShape = {
            transforms: transformsManager.addTransformSequence(styles[i].transforms),
            trNodes: []
          };
          this.styledShapes.push(styledShape);
          styles[i].elements.push(styledShape);
        }
      }
    }
    CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;
    function CVShapeElement(data2, globalData2, comp2) {
      this.shapes = [];
      this.shapesData = data2.shapes;
      this.stylesList = [];
      this.itemsData = [];
      this.prevViewData = [];
      this.shapeModifiers = [];
      this.processedElements = [];
      this.transformsManager = new ShapeTransformManager();
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);
    CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;
    CVShapeElement.prototype.transformHelper = {
      opacity: 1,
      _opMdf: false
    };
    CVShapeElement.prototype.dashResetter = [];
    CVShapeElement.prototype.createContent = function() {
      this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
    };
    CVShapeElement.prototype.createStyleElement = function(data2, transforms) {
      var styleElem = {
        data: data2,
        type: data2.ty,
        preTransforms: this.transformsManager.addTransformSequence(transforms),
        transforms: [],
        elements: [],
        closed: data2.hd === true
      };
      var elementData = {};
      if (data2.ty === "fl" || data2.ty === "st") {
        elementData.c = PropertyFactory.getProp(this, data2.c, 1, 255, this);
        if (!elementData.c.k) {
          styleElem.co = "rgb(" + bmFloor(elementData.c.v[0]) + "," + bmFloor(elementData.c.v[1]) + "," + bmFloor(elementData.c.v[2]) + ")";
        }
      } else if (data2.ty === "gf" || data2.ty === "gs") {
        elementData.s = PropertyFactory.getProp(this, data2.s, 1, null, this);
        elementData.e = PropertyFactory.getProp(this, data2.e, 1, null, this);
        elementData.h = PropertyFactory.getProp(this, data2.h || {
          k: 0
        }, 0, 0.01, this);
        elementData.a = PropertyFactory.getProp(this, data2.a || {
          k: 0
        }, 0, degToRads, this);
        elementData.g = new GradientProperty(this, data2.g, this);
      }
      elementData.o = PropertyFactory.getProp(this, data2.o, 0, 0.01, this);
      if (data2.ty === "st" || data2.ty === "gs") {
        styleElem.lc = lineCapEnum[data2.lc || 2];
        styleElem.lj = lineJoinEnum[data2.lj || 2];
        if (data2.lj == 1) {
          styleElem.ml = data2.ml;
        }
        elementData.w = PropertyFactory.getProp(this, data2.w, 0, null, this);
        if (!elementData.w.k) {
          styleElem.wi = elementData.w.v;
        }
        if (data2.d) {
          var d = new DashProperty(this, data2.d, "canvas", this);
          elementData.d = d;
          if (!elementData.d.k) {
            styleElem.da = elementData.d.dashArray;
            styleElem["do"] = elementData.d.dashoffset[0];
          }
        }
      } else {
        styleElem.r = data2.r === 2 ? "evenodd" : "nonzero";
      }
      this.stylesList.push(styleElem);
      elementData.style = styleElem;
      return elementData;
    };
    CVShapeElement.prototype.createGroupElement = function() {
      var elementData = {
        it: [],
        prevViewData: []
      };
      return elementData;
    };
    CVShapeElement.prototype.createTransformElement = function(data2) {
      var elementData = {
        transform: {
          opacity: 1,
          _opMdf: false,
          key: this.transformsManager.getNewKey(),
          op: PropertyFactory.getProp(this, data2.o, 0, 0.01, this),
          mProps: TransformPropertyFactory.getTransformProperty(this, data2, this)
        }
      };
      return elementData;
    };
    CVShapeElement.prototype.createShapeElement = function(data2) {
      var elementData = new CVShapeData(this, data2, this.stylesList, this.transformsManager);
      this.shapes.push(elementData);
      this.addShapeToModifiers(elementData);
      return elementData;
    };
    CVShapeElement.prototype.reloadShapes = function() {
      this._isFirstFrame = true;
      var i;
      var len = this.itemsData.length;
      for (i = 0; i < len; i += 1) {
        this.prevViewData[i] = this.itemsData[i];
      }
      this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);
      len = this.dynamicProperties.length;
      for (i = 0; i < len; i += 1) {
        this.dynamicProperties[i].getValue();
      }
      this.renderModifiers();
      this.transformsManager.processSequences(this._isFirstFrame);
    };
    CVShapeElement.prototype.addTransformToStyleList = function(transform2) {
      var i;
      var len = this.stylesList.length;
      for (i = 0; i < len; i += 1) {
        if (!this.stylesList[i].closed) {
          this.stylesList[i].transforms.push(transform2);
        }
      }
    };
    CVShapeElement.prototype.removeTransformFromStyleList = function() {
      var i;
      var len = this.stylesList.length;
      for (i = 0; i < len; i += 1) {
        if (!this.stylesList[i].closed) {
          this.stylesList[i].transforms.pop();
        }
      }
    };
    CVShapeElement.prototype.closeStyles = function(styles) {
      var i;
      var len = styles.length;
      for (i = 0; i < len; i += 1) {
        styles[i].closed = true;
      }
    };
    CVShapeElement.prototype.searchShapes = function(arr, itemsData, prevViewData, shouldRender, transforms) {
      var i;
      var len = arr.length - 1;
      var j;
      var jLen;
      var ownStyles = [];
      var ownModifiers = [];
      var processedPos;
      var modifier;
      var currentTransform;
      var ownTransforms = [].concat(transforms);
      for (i = len; i >= 0; i -= 1) {
        processedPos = this.searchProcessedElement(arr[i]);
        if (!processedPos) {
          arr[i]._shouldRender = shouldRender;
        } else {
          itemsData[i] = prevViewData[processedPos - 1];
        }
        if (arr[i].ty === "fl" || arr[i].ty === "st" || arr[i].ty === "gf" || arr[i].ty === "gs") {
          if (!processedPos) {
            itemsData[i] = this.createStyleElement(arr[i], ownTransforms);
          } else {
            itemsData[i].style.closed = false;
          }
          ownStyles.push(itemsData[i].style);
        } else if (arr[i].ty === "gr") {
          if (!processedPos) {
            itemsData[i] = this.createGroupElement(arr[i]);
          } else {
            jLen = itemsData[i].it.length;
            for (j = 0; j < jLen; j += 1) {
              itemsData[i].prevViewData[j] = itemsData[i].it[j];
            }
          }
          this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);
        } else if (arr[i].ty === "tr") {
          if (!processedPos) {
            currentTransform = this.createTransformElement(arr[i]);
            itemsData[i] = currentTransform;
          }
          ownTransforms.push(itemsData[i]);
          this.addTransformToStyleList(itemsData[i]);
        } else if (arr[i].ty === "sh" || arr[i].ty === "rc" || arr[i].ty === "el" || arr[i].ty === "sr") {
          if (!processedPos) {
            itemsData[i] = this.createShapeElement(arr[i]);
          }
        } else if (arr[i].ty === "tm" || arr[i].ty === "rd" || arr[i].ty === "pb" || arr[i].ty === "zz" || arr[i].ty === "op") {
          if (!processedPos) {
            modifier = ShapeModifiers.getModifier(arr[i].ty);
            modifier.init(this, arr[i]);
            itemsData[i] = modifier;
            this.shapeModifiers.push(modifier);
          } else {
            modifier = itemsData[i];
            modifier.closed = false;
          }
          ownModifiers.push(modifier);
        } else if (arr[i].ty === "rp") {
          if (!processedPos) {
            modifier = ShapeModifiers.getModifier(arr[i].ty);
            itemsData[i] = modifier;
            modifier.init(this, arr, i, itemsData);
            this.shapeModifiers.push(modifier);
            shouldRender = false;
          } else {
            modifier = itemsData[i];
            modifier.closed = true;
          }
          ownModifiers.push(modifier);
        }
        this.addProcessedElement(arr[i], i + 1);
      }
      this.removeTransformFromStyleList();
      this.closeStyles(ownStyles);
      len = ownModifiers.length;
      for (i = 0; i < len; i += 1) {
        ownModifiers[i].closed = true;
      }
    };
    CVShapeElement.prototype.renderInnerContent = function() {
      this.transformHelper.opacity = 1;
      this.transformHelper._opMdf = false;
      this.renderModifiers();
      this.transformsManager.processSequences(this._isFirstFrame);
      this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);
    };
    CVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {
      if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {
        groupTransform.opacity = parentTransform.opacity;
        groupTransform.opacity *= groupTransform.op.v;
        groupTransform._opMdf = true;
      }
    };
    CVShapeElement.prototype.drawLayer = function() {
      var i;
      var len = this.stylesList.length;
      var j;
      var jLen;
      var k2;
      var kLen;
      var elems;
      var nodes;
      var renderer = this.globalData.renderer;
      var ctx = this.globalData.canvasContext;
      var type;
      var currentStyle;
      for (i = 0; i < len; i += 1) {
        currentStyle = this.stylesList[i];
        type = currentStyle.type;
        if (!((type === "st" || type === "gs") && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {
          renderer.save();
          elems = currentStyle.elements;
          if (type === "st" || type === "gs") {
            ctx.strokeStyle = type === "st" ? currentStyle.co : currentStyle.grd;
            ctx.lineWidth = currentStyle.wi;
            ctx.lineCap = currentStyle.lc;
            ctx.lineJoin = currentStyle.lj;
            ctx.miterLimit = currentStyle.ml || 0;
          } else {
            ctx.fillStyle = type === "fl" ? currentStyle.co : currentStyle.grd;
          }
          renderer.ctxOpacity(currentStyle.coOp);
          if (type !== "st" && type !== "gs") {
            ctx.beginPath();
          }
          renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);
          jLen = elems.length;
          for (j = 0; j < jLen; j += 1) {
            if (type === "st" || type === "gs") {
              ctx.beginPath();
              if (currentStyle.da) {
                ctx.setLineDash(currentStyle.da);
                ctx.lineDashOffset = currentStyle["do"];
              }
            }
            nodes = elems[j].trNodes;
            kLen = nodes.length;
            for (k2 = 0; k2 < kLen; k2 += 1) {
              if (nodes[k2].t === "m") {
                ctx.moveTo(nodes[k2].p[0], nodes[k2].p[1]);
              } else if (nodes[k2].t === "c") {
                ctx.bezierCurveTo(nodes[k2].pts[0], nodes[k2].pts[1], nodes[k2].pts[2], nodes[k2].pts[3], nodes[k2].pts[4], nodes[k2].pts[5]);
              } else {
                ctx.closePath();
              }
            }
            if (type === "st" || type === "gs") {
              ctx.stroke();
              if (currentStyle.da) {
                ctx.setLineDash(this.dashResetter);
              }
            }
          }
          if (type !== "st" && type !== "gs") {
            ctx.fill(currentStyle.r);
          }
          renderer.restore();
        }
      }
    };
    CVShapeElement.prototype.renderShape = function(parentTransform, items, data2, isMain) {
      var i;
      var len = items.length - 1;
      var groupTransform;
      groupTransform = parentTransform;
      for (i = len; i >= 0; i -= 1) {
        if (items[i].ty === "tr") {
          groupTransform = data2[i].transform;
          this.renderShapeTransform(parentTransform, groupTransform);
        } else if (items[i].ty === "sh" || items[i].ty === "el" || items[i].ty === "rc" || items[i].ty === "sr") {
          this.renderPath(items[i], data2[i]);
        } else if (items[i].ty === "fl") {
          this.renderFill(items[i], data2[i], groupTransform);
        } else if (items[i].ty === "st") {
          this.renderStroke(items[i], data2[i], groupTransform);
        } else if (items[i].ty === "gf" || items[i].ty === "gs") {
          this.renderGradientFill(items[i], data2[i], groupTransform);
        } else if (items[i].ty === "gr") {
          this.renderShape(groupTransform, items[i].it, data2[i].it);
        } else if (items[i].ty === "tm")
          ;
      }
      if (isMain) {
        this.drawLayer();
      }
    };
    CVShapeElement.prototype.renderStyledShape = function(styledShape, shape) {
      if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {
        var shapeNodes = styledShape.trNodes;
        var paths = shape.paths;
        var i;
        var len;
        var j;
        var jLen = paths._length;
        shapeNodes.length = 0;
        var groupTransformMat = styledShape.transforms.finalTransform;
        for (j = 0; j < jLen; j += 1) {
          var pathNodes = paths.shapes[j];
          if (pathNodes && pathNodes.v) {
            len = pathNodes._length;
            for (i = 1; i < len; i += 1) {
              if (i === 1) {
                shapeNodes.push({
                  t: "m",
                  p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
                });
              }
              shapeNodes.push({
                t: "c",
                pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])
              });
            }
            if (len === 1) {
              shapeNodes.push({
                t: "m",
                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)
              });
            }
            if (pathNodes.c && len) {
              shapeNodes.push({
                t: "c",
                pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])
              });
              shapeNodes.push({
                t: "z"
              });
            }
          }
        }
        styledShape.trNodes = shapeNodes;
      }
    };
    CVShapeElement.prototype.renderPath = function(pathData, itemData) {
      if (pathData.hd !== true && pathData._shouldRender) {
        var i;
        var len = itemData.styledShapes.length;
        for (i = 0; i < len; i += 1) {
          this.renderStyledShape(itemData.styledShapes[i], itemData.sh);
        }
      }
    };
    CVShapeElement.prototype.renderFill = function(styleData, itemData, groupTransform) {
      var styleElem = itemData.style;
      if (itemData.c._mdf || this._isFirstFrame) {
        styleElem.co = "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")";
      }
      if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
        styleElem.coOp = itemData.o.v * groupTransform.opacity;
      }
    };
    CVShapeElement.prototype.renderGradientFill = function(styleData, itemData, groupTransform) {
      var styleElem = itemData.style;
      var grd;
      if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {
        var ctx = this.globalData.canvasContext;
        var pt1 = itemData.s.v;
        var pt2 = itemData.e.v;
        if (styleData.t === 1) {
          grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);
        } else {
          var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));
          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);
          var percent = itemData.h.v;
          if (percent >= 1) {
            percent = 0.99;
          } else if (percent <= -1) {
            percent = -0.99;
          }
          var dist = rad * percent;
          var x2 = Math.cos(ang + itemData.a.v) * dist + pt1[0];
          var y2 = Math.sin(ang + itemData.a.v) * dist + pt1[1];
          grd = ctx.createRadialGradient(x2, y2, 0, pt1[0], pt1[1], rad);
        }
        var i;
        var len = styleData.g.p;
        var cValues = itemData.g.c;
        var opacity = 1;
        for (i = 0; i < len; i += 1) {
          if (itemData.g._hasOpacity && itemData.g._collapsable) {
            opacity = itemData.g.o[i * 2 + 1];
          }
          grd.addColorStop(cValues[i * 4] / 100, "rgba(" + cValues[i * 4 + 1] + "," + cValues[i * 4 + 2] + "," + cValues[i * 4 + 3] + "," + opacity + ")");
        }
        styleElem.grd = grd;
      }
      styleElem.coOp = itemData.o.v * groupTransform.opacity;
    };
    CVShapeElement.prototype.renderStroke = function(styleData, itemData, groupTransform) {
      var styleElem = itemData.style;
      var d = itemData.d;
      if (d && (d._mdf || this._isFirstFrame)) {
        styleElem.da = d.dashArray;
        styleElem["do"] = d.dashoffset[0];
      }
      if (itemData.c._mdf || this._isFirstFrame) {
        styleElem.co = "rgb(" + bmFloor(itemData.c.v[0]) + "," + bmFloor(itemData.c.v[1]) + "," + bmFloor(itemData.c.v[2]) + ")";
      }
      if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {
        styleElem.coOp = itemData.o.v * groupTransform.opacity;
      }
      if (itemData.w._mdf || this._isFirstFrame) {
        styleElem.wi = itemData.w.v;
      }
    };
    CVShapeElement.prototype.destroy = function() {
      this.shapesData = null;
      this.globalData = null;
      this.canvasContext = null;
      this.stylesList.length = 0;
      this.itemsData.length = 0;
    };
    function CVTextElement(data2, globalData2, comp2) {
      this.textSpans = [];
      this.yOffset = 0;
      this.fillColorAnim = false;
      this.strokeColorAnim = false;
      this.strokeWidthAnim = false;
      this.stroke = false;
      this.fill = false;
      this.justifyOffset = 0;
      this.currentRender = null;
      this.renderType = "canvas";
      this.values = {
        fill: "rgba(0,0,0,0)",
        stroke: "rgba(0,0,0,0)",
        sWidth: 0,
        fValue: ""
      };
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);
    CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d");
    CVTextElement.prototype.buildNewText = function() {
      var documentData = this.textProperty.currentData;
      this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
      var hasFill = false;
      if (documentData.fc) {
        hasFill = true;
        this.values.fill = this.buildColor(documentData.fc);
      } else {
        this.values.fill = "rgba(0,0,0,0)";
      }
      this.fill = hasFill;
      var hasStroke = false;
      if (documentData.sc) {
        hasStroke = true;
        this.values.stroke = this.buildColor(documentData.sc);
        this.values.sWidth = documentData.sw;
      }
      var fontData = this.globalData.fontManager.getFontByName(documentData.f);
      var i;
      var len;
      var letters = documentData.l;
      var matrixHelper = this.mHelper;
      this.stroke = hasStroke;
      this.values.fValue = documentData.finalSize + "px " + this.globalData.fontManager.getFontByName(documentData.f).fFamily;
      len = documentData.finalText.length;
      var charData;
      var shapeData;
      var k2;
      var kLen;
      var shapes;
      var j;
      var jLen;
      var pathNodes;
      var commands;
      var pathArr;
      var singleShape = this.data.singleShape;
      var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;
      var xPos = 0;
      var yPos = 0;
      var firstLine = true;
      var cnt = 0;
      for (i = 0; i < len; i += 1) {
        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
        shapeData = charData && charData.data || {};
        matrixHelper.reset();
        if (singleShape && letters[i].n) {
          xPos = -trackingOffset;
          yPos += documentData.yOffset;
          yPos += firstLine ? 1 : 0;
          firstLine = false;
        }
        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
        jLen = shapes.length;
        matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
        if (singleShape) {
          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);
        }
        commands = createSizedArray(jLen - 1);
        var commandsCounter = 0;
        for (j = 0; j < jLen; j += 1) {
          if (shapes[j].ty === "sh") {
            kLen = shapes[j].ks.k.i.length;
            pathNodes = shapes[j].ks.k;
            pathArr = [];
            for (k2 = 1; k2 < kLen; k2 += 1) {
              if (k2 === 1) {
                pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
              }
              pathArr.push(matrixHelper.applyToX(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k2][0], pathNodes.i[k2][1], 0), matrixHelper.applyToY(pathNodes.i[k2][0], pathNodes.i[k2][1], 0), matrixHelper.applyToX(pathNodes.v[k2][0], pathNodes.v[k2][1], 0), matrixHelper.applyToY(pathNodes.v[k2][0], pathNodes.v[k2][1], 0));
            }
            pathArr.push(matrixHelper.applyToX(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k2 - 1][0], pathNodes.o[k2 - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));
            commands[commandsCounter] = pathArr;
            commandsCounter += 1;
          }
        }
        if (singleShape) {
          xPos += letters[i].l;
          xPos += trackingOffset;
        }
        if (this.textSpans[cnt]) {
          this.textSpans[cnt].elem = commands;
        } else {
          this.textSpans[cnt] = {
            elem: commands
          };
        }
        cnt += 1;
      }
    };
    CVTextElement.prototype.renderInnerContent = function() {
      var ctx = this.canvasContext;
      ctx.font = this.values.fValue;
      ctx.lineCap = "butt";
      ctx.lineJoin = "miter";
      ctx.miterLimit = 4;
      if (!this.data.singleShape) {
        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
      }
      var i;
      var len;
      var j;
      var jLen;
      var k2;
      var kLen;
      var renderedLetters = this.textAnimator.renderedLetters;
      var letters = this.textProperty.currentData.l;
      len = letters.length;
      var renderedLetter;
      var lastFill = null;
      var lastStroke = null;
      var lastStrokeW = null;
      var commands;
      var pathArr;
      for (i = 0; i < len; i += 1) {
        if (!letters[i].n) {
          renderedLetter = renderedLetters[i];
          if (renderedLetter) {
            this.globalData.renderer.save();
            this.globalData.renderer.ctxTransform(renderedLetter.p);
            this.globalData.renderer.ctxOpacity(renderedLetter.o);
          }
          if (this.fill) {
            if (renderedLetter && renderedLetter.fc) {
              if (lastFill !== renderedLetter.fc) {
                lastFill = renderedLetter.fc;
                ctx.fillStyle = renderedLetter.fc;
              }
            } else if (lastFill !== this.values.fill) {
              lastFill = this.values.fill;
              ctx.fillStyle = this.values.fill;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for (j = 0; j < jLen; j += 1) {
              pathArr = commands[j];
              kLen = pathArr.length;
              this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
              for (k2 = 2; k2 < kLen; k2 += 6) {
                this.globalData.canvasContext.bezierCurveTo(pathArr[k2], pathArr[k2 + 1], pathArr[k2 + 2], pathArr[k2 + 3], pathArr[k2 + 4], pathArr[k2 + 5]);
              }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.fill();
          }
          if (this.stroke) {
            if (renderedLetter && renderedLetter.sw) {
              if (lastStrokeW !== renderedLetter.sw) {
                lastStrokeW = renderedLetter.sw;
                ctx.lineWidth = renderedLetter.sw;
              }
            } else if (lastStrokeW !== this.values.sWidth) {
              lastStrokeW = this.values.sWidth;
              ctx.lineWidth = this.values.sWidth;
            }
            if (renderedLetter && renderedLetter.sc) {
              if (lastStroke !== renderedLetter.sc) {
                lastStroke = renderedLetter.sc;
                ctx.strokeStyle = renderedLetter.sc;
              }
            } else if (lastStroke !== this.values.stroke) {
              lastStroke = this.values.stroke;
              ctx.strokeStyle = this.values.stroke;
            }
            commands = this.textSpans[i].elem;
            jLen = commands.length;
            this.globalData.canvasContext.beginPath();
            for (j = 0; j < jLen; j += 1) {
              pathArr = commands[j];
              kLen = pathArr.length;
              this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);
              for (k2 = 2; k2 < kLen; k2 += 6) {
                this.globalData.canvasContext.bezierCurveTo(pathArr[k2], pathArr[k2 + 1], pathArr[k2 + 2], pathArr[k2 + 3], pathArr[k2 + 4], pathArr[k2 + 5]);
              }
            }
            this.globalData.canvasContext.closePath();
            this.globalData.canvasContext.stroke();
          }
          if (renderedLetter) {
            this.globalData.renderer.restore();
          }
        }
      }
    };
    function CVImageElement(data2, globalData2, comp2) {
      this.assetData = globalData2.getAssetData(data2.refId);
      this.img = globalData2.imageLoader.getAsset(this.assetData);
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);
    CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;
    CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;
    CVImageElement.prototype.createContent = function() {
      if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
        var canvas = createTag("canvas");
        canvas.width = this.assetData.w;
        canvas.height = this.assetData.h;
        var ctx = canvas.getContext("2d");
        var imgW = this.img.width;
        var imgH = this.img.height;
        var imgRel = imgW / imgH;
        var canvasRel = this.assetData.w / this.assetData.h;
        var widthCrop;
        var heightCrop;
        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
        if (imgRel > canvasRel && par === "xMidYMid slice" || imgRel < canvasRel && par !== "xMidYMid slice") {
          heightCrop = imgH;
          widthCrop = heightCrop * canvasRel;
        } else {
          widthCrop = imgW;
          heightCrop = widthCrop / canvasRel;
        }
        ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);
        this.img = canvas;
      }
    };
    CVImageElement.prototype.renderInnerContent = function() {
      this.canvasContext.drawImage(this.img, 0, 0);
    };
    CVImageElement.prototype.destroy = function() {
      this.img = null;
    };
    function CVSolidElement(data2, globalData2, comp2) {
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);
    CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;
    CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;
    CVSolidElement.prototype.renderInnerContent = function() {
      var ctx = this.canvasContext;
      ctx.fillStyle = this.data.sc;
      ctx.fillRect(0, 0, this.data.sw, this.data.sh);
    };
    function CanvasRendererBase(animationItem, config) {
      this.animationItem = animationItem;
      this.renderConfig = {
        clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,
        context: config && config.context || null,
        progressiveLoad: config && config.progressiveLoad || false,
        preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
        imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
        contentVisibility: config && config.contentVisibility || "visible",
        className: config && config.className || "",
        id: config && config.id || ""
      };
      this.renderConfig.dpr = config && config.dpr || 1;
      if (this.animationItem.wrapper) {
        this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;
      }
      this.renderedFrame = -1;
      this.globalData = {
        frameNum: -1,
        _mdf: false,
        renderConfig: this.renderConfig,
        currentGlobalAlpha: -1
      };
      this.contextData = new CVContextData();
      this.elements = [];
      this.pendingElements = [];
      this.transformMat = new Matrix();
      this.completeLayers = false;
      this.rendererType = "canvas";
    }
    extendPrototype([BaseRenderer], CanvasRendererBase);
    CanvasRendererBase.prototype.createShape = function(data2) {
      return new CVShapeElement(data2, this.globalData, this);
    };
    CanvasRendererBase.prototype.createText = function(data2) {
      return new CVTextElement(data2, this.globalData, this);
    };
    CanvasRendererBase.prototype.createImage = function(data2) {
      return new CVImageElement(data2, this.globalData, this);
    };
    CanvasRendererBase.prototype.createSolid = function(data2) {
      return new CVSolidElement(data2, this.globalData, this);
    };
    CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;
    CanvasRendererBase.prototype.ctxTransform = function(props) {
      if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {
        return;
      }
      if (!this.renderConfig.clearCanvas) {
        this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);
        return;
      }
      this.transformMat.cloneFromProps(props);
      var currentTransform = this.contextData.getTransform();
      var cProps = currentTransform.props;
      this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);
      currentTransform.cloneFromProps(this.transformMat.props);
      var trProps = currentTransform.props;
      this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);
    };
    CanvasRendererBase.prototype.ctxOpacity = function(op2) {
      var currentOpacity = this.contextData.getOpacity();
      if (!this.renderConfig.clearCanvas) {
        this.canvasContext.globalAlpha *= op2 < 0 ? 0 : op2;
        this.globalData.currentGlobalAlpha = currentOpacity;
        return;
      }
      currentOpacity *= op2 < 0 ? 0 : op2;
      this.contextData.setOpacity(currentOpacity);
      if (this.globalData.currentGlobalAlpha !== currentOpacity) {
        this.canvasContext.globalAlpha = currentOpacity;
        this.globalData.currentGlobalAlpha = currentOpacity;
      }
    };
    CanvasRendererBase.prototype.reset = function() {
      if (!this.renderConfig.clearCanvas) {
        this.canvasContext.restore();
        return;
      }
      this.contextData.reset();
    };
    CanvasRendererBase.prototype.save = function(actionFlag) {
      if (!this.renderConfig.clearCanvas) {
        this.canvasContext.save();
        return;
      }
      if (actionFlag) {
        this.canvasContext.save();
      }
      this.contextData.push();
    };
    CanvasRendererBase.prototype.restore = function(actionFlag) {
      if (!this.renderConfig.clearCanvas) {
        this.canvasContext.restore();
        return;
      }
      if (actionFlag) {
        this.canvasContext.restore();
        this.globalData.blendMode = "source-over";
      }
      var popped = this.contextData.pop();
      var transform2 = popped.transform;
      var opacity = popped.opacity;
      this.canvasContext.setTransform(transform2[0], transform2[1], transform2[4], transform2[5], transform2[12], transform2[13]);
      if (this.globalData.currentGlobalAlpha !== opacity) {
        this.canvasContext.globalAlpha = opacity;
        this.globalData.currentGlobalAlpha = opacity;
      }
    };
    CanvasRendererBase.prototype.configAnimation = function(animData) {
      if (this.animationItem.wrapper) {
        this.animationItem.container = createTag("canvas");
        var containerStyle = this.animationItem.container.style;
        containerStyle.width = "100%";
        containerStyle.height = "100%";
        var origin = "0px 0px 0px";
        containerStyle.transformOrigin = origin;
        containerStyle.mozTransformOrigin = origin;
        containerStyle.webkitTransformOrigin = origin;
        containerStyle["-webkit-transform"] = origin;
        containerStyle.contentVisibility = this.renderConfig.contentVisibility;
        this.animationItem.wrapper.appendChild(this.animationItem.container);
        this.canvasContext = this.animationItem.container.getContext("2d");
        if (this.renderConfig.className) {
          this.animationItem.container.setAttribute("class", this.renderConfig.className);
        }
        if (this.renderConfig.id) {
          this.animationItem.container.setAttribute("id", this.renderConfig.id);
        }
      } else {
        this.canvasContext = this.renderConfig.context;
      }
      this.data = animData;
      this.layers = animData.layers;
      this.transformCanvas = {
        w: animData.w,
        h: animData.h,
        sx: 0,
        sy: 0,
        tx: 0,
        ty: 0
      };
      this.setupGlobalData(animData, document.body);
      this.globalData.canvasContext = this.canvasContext;
      this.globalData.renderer = this;
      this.globalData.isDashed = false;
      this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
      this.globalData.transformCanvas = this.transformCanvas;
      this.elements = createSizedArray(animData.layers.length);
      this.updateContainerSize();
    };
    CanvasRendererBase.prototype.updateContainerSize = function(width2, height2) {
      this.reset();
      var elementWidth;
      var elementHeight;
      if (width2) {
        elementWidth = width2;
        elementHeight = height2;
        this.canvasContext.canvas.width = elementWidth;
        this.canvasContext.canvas.height = elementHeight;
      } else {
        if (this.animationItem.wrapper && this.animationItem.container) {
          elementWidth = this.animationItem.wrapper.offsetWidth;
          elementHeight = this.animationItem.wrapper.offsetHeight;
        } else {
          elementWidth = this.canvasContext.canvas.width;
          elementHeight = this.canvasContext.canvas.height;
        }
        this.canvasContext.canvas.width = elementWidth * this.renderConfig.dpr;
        this.canvasContext.canvas.height = elementHeight * this.renderConfig.dpr;
      }
      var elementRel;
      var animationRel;
      if (this.renderConfig.preserveAspectRatio.indexOf("meet") !== -1 || this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1) {
        var par = this.renderConfig.preserveAspectRatio.split(" ");
        var fillType = par[1] || "meet";
        var pos = par[0] || "xMidYMid";
        var xPos = pos.substr(0, 4);
        var yPos = pos.substr(4);
        elementRel = elementWidth / elementHeight;
        animationRel = this.transformCanvas.w / this.transformCanvas.h;
        if (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice") {
          this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
          this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
        } else {
          this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
          this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
        }
        if (xPos === "xMid" && (animationRel < elementRel && fillType === "meet" || animationRel > elementRel && fillType === "slice")) {
          this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;
        } else if (xPos === "xMax" && (animationRel < elementRel && fillType === "meet" || animationRel > elementRel && fillType === "slice")) {
          this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;
        } else {
          this.transformCanvas.tx = 0;
        }
        if (yPos === "YMid" && (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice")) {
          this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;
        } else if (yPos === "YMax" && (animationRel > elementRel && fillType === "meet" || animationRel < elementRel && fillType === "slice")) {
          this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;
        } else {
          this.transformCanvas.ty = 0;
        }
      } else if (this.renderConfig.preserveAspectRatio === "none") {
        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);
        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
      } else {
        this.transformCanvas.sx = this.renderConfig.dpr;
        this.transformCanvas.sy = this.renderConfig.dpr;
        this.transformCanvas.tx = 0;
        this.transformCanvas.ty = 0;
      }
      this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];
      this.ctxTransform(this.transformCanvas.props);
      this.canvasContext.beginPath();
      this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
      this.canvasContext.closePath();
      this.canvasContext.clip();
      this.renderFrame(this.renderedFrame, true);
    };
    CanvasRendererBase.prototype.destroy = function() {
      if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {
        this.animationItem.wrapper.innerText = "";
      }
      var i;
      var len = this.layers ? this.layers.length : 0;
      for (i = len - 1; i >= 0; i -= 1) {
        if (this.elements[i]) {
          this.elements[i].destroy();
        }
      }
      this.elements.length = 0;
      this.globalData.canvasContext = null;
      this.animationItem.container = null;
      this.destroyed = true;
    };
    CanvasRendererBase.prototype.renderFrame = function(num, forceRender) {
      if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {
        return;
      }
      this.renderedFrame = num;
      this.globalData.frameNum = num - this.animationItem._isFirstFrame;
      this.globalData.frameId += 1;
      this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;
      this.globalData.projectInterface.currentFrame = num;
      var i;
      var len = this.layers.length;
      if (!this.completeLayers) {
        this.checkLayers(num);
      }
      for (i = 0; i < len; i += 1) {
        if (this.completeLayers || this.elements[i]) {
          this.elements[i].prepareFrame(num - this.layers[i].st);
        }
      }
      if (this.globalData._mdf) {
        if (this.renderConfig.clearCanvas === true) {
          this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);
        } else {
          this.save();
        }
        for (i = len - 1; i >= 0; i -= 1) {
          if (this.completeLayers || this.elements[i]) {
            this.elements[i].renderFrame();
          }
        }
        if (this.renderConfig.clearCanvas !== true) {
          this.restore();
        }
      }
    };
    CanvasRendererBase.prototype.buildItem = function(pos) {
      var elements = this.elements;
      if (elements[pos] || this.layers[pos].ty === 99) {
        return;
      }
      var element = this.createItem(this.layers[pos], this, this.globalData);
      elements[pos] = element;
      element.initExpressions();
    };
    CanvasRendererBase.prototype.checkPendingElements = function() {
      while (this.pendingElements.length) {
        var element = this.pendingElements.pop();
        element.checkParenting();
      }
    };
    CanvasRendererBase.prototype.hide = function() {
      this.animationItem.container.style.display = "none";
    };
    CanvasRendererBase.prototype.show = function() {
      this.animationItem.container.style.display = "block";
    };
    function CVCompElement(data2, globalData2, comp2) {
      this.completeLayers = false;
      this.layers = data2.layers;
      this.pendingElements = [];
      this.elements = createSizedArray(this.layers.length);
      this.initElement(data2, globalData2, comp2);
      this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {
        _placeholder: true
      };
    }
    extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);
    CVCompElement.prototype.renderInnerContent = function() {
      var ctx = this.canvasContext;
      ctx.beginPath();
      ctx.moveTo(0, 0);
      ctx.lineTo(this.data.w, 0);
      ctx.lineTo(this.data.w, this.data.h);
      ctx.lineTo(0, this.data.h);
      ctx.lineTo(0, 0);
      ctx.clip();
      var i;
      var len = this.layers.length;
      for (i = len - 1; i >= 0; i -= 1) {
        if (this.completeLayers || this.elements[i]) {
          this.elements[i].renderFrame();
        }
      }
    };
    CVCompElement.prototype.destroy = function() {
      var i;
      var len = this.layers.length;
      for (i = len - 1; i >= 0; i -= 1) {
        if (this.elements[i]) {
          this.elements[i].destroy();
        }
      }
      this.layers = null;
      this.elements = null;
    };
    CVCompElement.prototype.createComp = function(data2) {
      return new CVCompElement(data2, this.globalData, this);
    };
    function CanvasRenderer(animationItem, config) {
      this.animationItem = animationItem;
      this.renderConfig = {
        clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,
        context: config && config.context || null,
        progressiveLoad: config && config.progressiveLoad || false,
        preserveAspectRatio: config && config.preserveAspectRatio || "xMidYMid meet",
        imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
        contentVisibility: config && config.contentVisibility || "visible",
        className: config && config.className || "",
        id: config && config.id || "",
        runExpressions: !config || config.runExpressions === void 0 || config.runExpressions
      };
      this.renderConfig.dpr = config && config.dpr || 1;
      if (this.animationItem.wrapper) {
        this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;
      }
      this.renderedFrame = -1;
      this.globalData = {
        frameNum: -1,
        _mdf: false,
        renderConfig: this.renderConfig,
        currentGlobalAlpha: -1
      };
      this.contextData = new CVContextData();
      this.elements = [];
      this.pendingElements = [];
      this.transformMat = new Matrix();
      this.completeLayers = false;
      this.rendererType = "canvas";
    }
    extendPrototype([CanvasRendererBase], CanvasRenderer);
    CanvasRenderer.prototype.createComp = function(data2) {
      return new CVCompElement(data2, this.globalData, this);
    };
    function HBaseElement() {
    }
    HBaseElement.prototype = {
      checkBlendMode: function checkBlendMode() {
      },
      initRendererElement: function initRendererElement() {
        this.baseElement = createTag(this.data.tg || "div");
        if (this.data.hasMask) {
          this.svgElement = createNS("svg");
          this.layerElement = createNS("g");
          this.maskedElement = this.layerElement;
          this.svgElement.appendChild(this.layerElement);
          this.baseElement.appendChild(this.svgElement);
        } else {
          this.layerElement = this.baseElement;
        }
        styleDiv(this.baseElement);
      },
      createContainerElements: function createContainerElements() {
        this.renderableEffectsManager = new CVEffects();
        this.transformedElement = this.baseElement;
        this.maskedElement = this.layerElement;
        if (this.data.ln) {
          this.layerElement.setAttribute("id", this.data.ln);
        }
        if (this.data.cl) {
          this.layerElement.setAttribute("class", this.data.cl);
        }
        if (this.data.bm !== 0) {
          this.setBlendMode();
        }
      },
      renderElement: function renderElement() {
        var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};
        if (this.finalTransform._matMdf) {
          var matrixValue = this.finalTransform.mat.toCSS();
          transformedElementStyle.transform = matrixValue;
          transformedElementStyle.webkitTransform = matrixValue;
        }
        if (this.finalTransform._opMdf) {
          transformedElementStyle.opacity = this.finalTransform.mProp.o.v;
        }
      },
      renderFrame: function renderFrame() {
        if (this.data.hd || this.hidden) {
          return;
        }
        this.renderTransform();
        this.renderRenderable();
        this.renderElement();
        this.renderInnerContent();
        if (this._isFirstFrame) {
          this._isFirstFrame = false;
        }
      },
      destroy: function destroy() {
        this.layerElement = null;
        this.transformedElement = null;
        if (this.matteElement) {
          this.matteElement = null;
        }
        if (this.maskManager) {
          this.maskManager.destroy();
          this.maskManager = null;
        }
      },
      createRenderableComponents: function createRenderableComponents() {
        this.maskManager = new MaskElement(this.data, this, this.globalData);
      },
      addEffects: function addEffects() {
      },
      setMatte: function setMatte() {
      }
    };
    HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;
    HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;
    HBaseElement.prototype.buildElementParenting = BaseRenderer.prototype.buildElementParenting;
    function HSolidElement(data2, globalData2, comp2) {
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);
    HSolidElement.prototype.createContent = function() {
      var rect;
      if (this.data.hasMask) {
        rect = createNS("rect");
        rect.setAttribute("width", this.data.sw);
        rect.setAttribute("height", this.data.sh);
        rect.setAttribute("fill", this.data.sc);
        this.svgElement.setAttribute("width", this.data.sw);
        this.svgElement.setAttribute("height", this.data.sh);
      } else {
        rect = createTag("div");
        rect.style.width = this.data.sw + "px";
        rect.style.height = this.data.sh + "px";
        rect.style.backgroundColor = this.data.sc;
      }
      this.layerElement.appendChild(rect);
    };
    function HShapeElement(data2, globalData2, comp2) {
      this.shapes = [];
      this.shapesData = data2.shapes;
      this.stylesList = [];
      this.shapeModifiers = [];
      this.itemsData = [];
      this.processedElements = [];
      this.animatedContents = [];
      this.shapesContainer = createNS("g");
      this.initElement(data2, globalData2, comp2);
      this.prevViewData = [];
      this.currentBBox = {
        x: 999999,
        y: -999999,
        h: 0,
        w: 0
      };
    }
    extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);
    HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;
    HShapeElement.prototype.createContent = function() {
      var cont;
      this.baseElement.style.fontSize = 0;
      if (this.data.hasMask) {
        this.layerElement.appendChild(this.shapesContainer);
        cont = this.svgElement;
      } else {
        cont = createNS("svg");
        var size = this.comp.data ? this.comp.data : this.globalData.compSize;
        cont.setAttribute("width", size.w);
        cont.setAttribute("height", size.h);
        cont.appendChild(this.shapesContainer);
        this.layerElement.appendChild(cont);
      }
      this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);
      this.filterUniqueShapes();
      this.shapeCont = cont;
    };
    HShapeElement.prototype.getTransformedPoint = function(transformers, point) {
      var i;
      var len = transformers.length;
      for (i = 0; i < len; i += 1) {
        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);
      }
      return point;
    };
    HShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {
      var shape = item.sh.v;
      var transformers = item.transformers;
      var i;
      var len = shape._length;
      var vPoint;
      var oPoint;
      var nextIPoint;
      var nextVPoint;
      if (len <= 1) {
        return;
      }
      for (i = 0; i < len - 1; i += 1) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
      }
      if (shape.c) {
        vPoint = this.getTransformedPoint(transformers, shape.v[i]);
        oPoint = this.getTransformedPoint(transformers, shape.o[i]);
        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);
      }
    };
    HShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {
      this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
      var bounds = this.shapeBoundingBox;
      boundingBox.x = bmMin(bounds.left, boundingBox.x);
      boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);
      boundingBox.y = bmMin(bounds.top, boundingBox.y);
      boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);
    };
    HShapeElement.prototype.shapeBoundingBox = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    };
    HShapeElement.prototype.tempBoundingBox = {
      x: 0,
      xMax: 0,
      y: 0,
      yMax: 0,
      width: 0,
      height: 0
    };
    HShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {
      var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];
      for (var a, b, c, t2, b2ac, t1, t22, i = 0; i < 2; ++i) {
        b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
        a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
        c = 3 * p1[i] - 3 * p0[i];
        b |= 0;
        a |= 0;
        c |= 0;
        if (a === 0 && b === 0)
          ;
        else if (a === 0) {
          t2 = -c / b;
          if (t2 > 0 && t2 < 1) {
            bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));
          }
        } else {
          b2ac = b * b - 4 * c * a;
          if (b2ac >= 0) {
            t1 = (-b + bmSqrt(b2ac)) / (2 * a);
            if (t1 > 0 && t1 < 1)
              bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));
            t22 = (-b - bmSqrt(b2ac)) / (2 * a);
            if (t22 > 0 && t22 < 1)
              bounds[i].push(this.calculateF(t22, p0, p1, p2, p3, i));
          }
        }
      }
      this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);
      this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);
      this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);
      this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);
    };
    HShapeElement.prototype.calculateF = function(t2, p0, p1, p2, p3, i) {
      return bmPow(1 - t2, 3) * p0[i] + 3 * bmPow(1 - t2, 2) * t2 * p1[i] + 3 * (1 - t2) * bmPow(t2, 2) * p2[i] + bmPow(t2, 3) * p3[i];
    };
    HShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {
      var i;
      var len = itemsData.length;
      for (i = 0; i < len; i += 1) {
        if (itemsData[i] && itemsData[i].sh) {
          this.calculateShapeBoundingBox(itemsData[i], boundingBox);
        } else if (itemsData[i] && itemsData[i].it) {
          this.calculateBoundingBox(itemsData[i].it, boundingBox);
        } else if (itemsData[i] && itemsData[i].style && itemsData[i].w) {
          this.expandStrokeBoundingBox(itemsData[i].w, boundingBox);
        }
      }
    };
    HShapeElement.prototype.expandStrokeBoundingBox = function(widthProperty, boundingBox) {
      var width2 = 0;
      if (widthProperty.keyframes) {
        for (var i = 0; i < widthProperty.keyframes.length; i += 1) {
          var kfw = widthProperty.keyframes[i].s;
          if (kfw > width2) {
            width2 = kfw;
          }
        }
        width2 *= widthProperty.mult;
      } else {
        width2 = widthProperty.v * widthProperty.mult;
      }
      boundingBox.x -= width2;
      boundingBox.xMax += width2;
      boundingBox.y -= width2;
      boundingBox.yMax += width2;
    };
    HShapeElement.prototype.currentBoxContains = function(box) {
      return this.currentBBox.x <= box.x && this.currentBBox.y <= box.y && this.currentBBox.width + this.currentBBox.x >= box.x + box.width && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;
    };
    HShapeElement.prototype.renderInnerContent = function() {
      this._renderShapeFrame();
      if (!this.hidden && (this._isFirstFrame || this._mdf)) {
        var tempBoundingBox = this.tempBoundingBox;
        var max = 999999;
        tempBoundingBox.x = max;
        tempBoundingBox.xMax = -max;
        tempBoundingBox.y = max;
        tempBoundingBox.yMax = -max;
        this.calculateBoundingBox(this.itemsData, tempBoundingBox);
        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;
        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;
        if (this.currentBoxContains(tempBoundingBox)) {
          return;
        }
        var changed = false;
        if (this.currentBBox.w !== tempBoundingBox.width) {
          this.currentBBox.w = tempBoundingBox.width;
          this.shapeCont.setAttribute("width", tempBoundingBox.width);
          changed = true;
        }
        if (this.currentBBox.h !== tempBoundingBox.height) {
          this.currentBBox.h = tempBoundingBox.height;
          this.shapeCont.setAttribute("height", tempBoundingBox.height);
          changed = true;
        }
        if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {
          this.currentBBox.w = tempBoundingBox.width;
          this.currentBBox.h = tempBoundingBox.height;
          this.currentBBox.x = tempBoundingBox.x;
          this.currentBBox.y = tempBoundingBox.y;
          this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
          var shapeStyle = this.shapeCont.style;
          var shapeTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
          shapeStyle.transform = shapeTransform;
          shapeStyle.webkitTransform = shapeTransform;
        }
      }
    };
    function HTextElement(data2, globalData2, comp2) {
      this.textSpans = [];
      this.textPaths = [];
      this.currentBBox = {
        x: 999999,
        y: -999999,
        h: 0,
        w: 0
      };
      this.renderType = "svg";
      this.isMasked = false;
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);
    HTextElement.prototype.createContent = function() {
      this.isMasked = this.checkMasks();
      if (this.isMasked) {
        this.renderType = "svg";
        this.compW = this.comp.data.w;
        this.compH = this.comp.data.h;
        this.svgElement.setAttribute("width", this.compW);
        this.svgElement.setAttribute("height", this.compH);
        var g = createNS("g");
        this.maskedElement.appendChild(g);
        this.innerElem = g;
      } else {
        this.renderType = "html";
        this.innerElem = this.layerElement;
      }
      this.checkParenting();
    };
    HTextElement.prototype.buildNewText = function() {
      var documentData = this.textProperty.currentData;
      this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);
      var innerElemStyle = this.innerElem.style;
      var textColor = documentData.fc ? this.buildColor(documentData.fc) : "rgba(0,0,0,0)";
      innerElemStyle.fill = textColor;
      innerElemStyle.color = textColor;
      if (documentData.sc) {
        innerElemStyle.stroke = this.buildColor(documentData.sc);
        innerElemStyle.strokeWidth = documentData.sw + "px";
      }
      var fontData = this.globalData.fontManager.getFontByName(documentData.f);
      if (!this.globalData.fontManager.chars) {
        innerElemStyle.fontSize = documentData.finalSize + "px";
        innerElemStyle.lineHeight = documentData.finalSize + "px";
        if (fontData.fClass) {
          this.innerElem.className = fontData.fClass;
        } else {
          innerElemStyle.fontFamily = fontData.fFamily;
          var fWeight = documentData.fWeight;
          var fStyle = documentData.fStyle;
          innerElemStyle.fontStyle = fStyle;
          innerElemStyle.fontWeight = fWeight;
        }
      }
      var i;
      var len;
      var letters = documentData.l;
      len = letters.length;
      var tSpan;
      var tParent;
      var tCont;
      var matrixHelper = this.mHelper;
      var shapes;
      var shapeStr = "";
      var cnt = 0;
      for (i = 0; i < len; i += 1) {
        if (this.globalData.fontManager.chars) {
          if (!this.textPaths[cnt]) {
            tSpan = createNS("path");
            tSpan.setAttribute("stroke-linecap", lineCapEnum[1]);
            tSpan.setAttribute("stroke-linejoin", lineJoinEnum[2]);
            tSpan.setAttribute("stroke-miterlimit", "4");
          } else {
            tSpan = this.textPaths[cnt];
          }
          if (!this.isMasked) {
            if (this.textSpans[cnt]) {
              tParent = this.textSpans[cnt];
              tCont = tParent.children[0];
            } else {
              tParent = createTag("div");
              tParent.style.lineHeight = 0;
              tCont = createNS("svg");
              tCont.appendChild(tSpan);
              styleDiv(tParent);
            }
          }
        } else if (!this.isMasked) {
          if (this.textSpans[cnt]) {
            tParent = this.textSpans[cnt];
            tSpan = this.textPaths[cnt];
          } else {
            tParent = createTag("span");
            styleDiv(tParent);
            tSpan = createTag("span");
            styleDiv(tSpan);
            tParent.appendChild(tSpan);
          }
        } else {
          tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS("text");
        }
        if (this.globalData.fontManager.chars) {
          var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);
          var shapeData;
          if (charData) {
            shapeData = charData.data;
          } else {
            shapeData = null;
          }
          matrixHelper.reset();
          if (shapeData && shapeData.shapes && shapeData.shapes.length) {
            shapes = shapeData.shapes[0].it;
            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);
            shapeStr = this.createPathShape(matrixHelper, shapes);
            tSpan.setAttribute("d", shapeStr);
          }
          if (!this.isMasked) {
            this.innerElem.appendChild(tParent);
            if (shapeData && shapeData.shapes) {
              document.body.appendChild(tCont);
              var boundingBox = tCont.getBBox();
              tCont.setAttribute("width", boundingBox.width + 2);
              tCont.setAttribute("height", boundingBox.height + 2);
              tCont.setAttribute("viewBox", boundingBox.x - 1 + " " + (boundingBox.y - 1) + " " + (boundingBox.width + 2) + " " + (boundingBox.height + 2));
              var tContStyle = tCont.style;
              var tContTranslation = "translate(" + (boundingBox.x - 1) + "px," + (boundingBox.y - 1) + "px)";
              tContStyle.transform = tContTranslation;
              tContStyle.webkitTransform = tContTranslation;
              letters[i].yOffset = boundingBox.y - 1;
            } else {
              tCont.setAttribute("width", 1);
              tCont.setAttribute("height", 1);
            }
            tParent.appendChild(tCont);
          } else {
            this.innerElem.appendChild(tSpan);
          }
        } else {
          tSpan.textContent = letters[i].val;
          tSpan.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve");
          if (!this.isMasked) {
            this.innerElem.appendChild(tParent);
            var tStyle = tSpan.style;
            var tSpanTranslation = "translate3d(0," + -documentData.finalSize / 1.2 + "px,0)";
            tStyle.transform = tSpanTranslation;
            tStyle.webkitTransform = tSpanTranslation;
          } else {
            this.innerElem.appendChild(tSpan);
          }
        }
        if (!this.isMasked) {
          this.textSpans[cnt] = tParent;
        } else {
          this.textSpans[cnt] = tSpan;
        }
        this.textSpans[cnt].style.display = "block";
        this.textPaths[cnt] = tSpan;
        cnt += 1;
      }
      while (cnt < this.textSpans.length) {
        this.textSpans[cnt].style.display = "none";
        cnt += 1;
      }
    };
    HTextElement.prototype.renderInnerContent = function() {
      var svgStyle;
      if (this.data.singleShape) {
        if (!this._isFirstFrame && !this.lettersChangedFlag) {
          return;
        }
        if (this.isMasked && this.finalTransform._matMdf) {
          this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH);
          svgStyle = this.svgElement.style;
          var translation = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)";
          svgStyle.transform = translation;
          svgStyle.webkitTransform = translation;
        }
      }
      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
      if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {
        return;
      }
      var i;
      var len;
      var count = 0;
      var renderedLetters = this.textAnimator.renderedLetters;
      var letters = this.textProperty.currentData.l;
      len = letters.length;
      var renderedLetter;
      var textSpan;
      var textPath;
      for (i = 0; i < len; i += 1) {
        if (letters[i].n) {
          count += 1;
        } else {
          textSpan = this.textSpans[i];
          textPath = this.textPaths[i];
          renderedLetter = renderedLetters[count];
          count += 1;
          if (renderedLetter._mdf.m) {
            if (!this.isMasked) {
              textSpan.style.webkitTransform = renderedLetter.m;
              textSpan.style.transform = renderedLetter.m;
            } else {
              textSpan.setAttribute("transform", renderedLetter.m);
            }
          }
          textSpan.style.opacity = renderedLetter.o;
          if (renderedLetter.sw && renderedLetter._mdf.sw) {
            textPath.setAttribute("stroke-width", renderedLetter.sw);
          }
          if (renderedLetter.sc && renderedLetter._mdf.sc) {
            textPath.setAttribute("stroke", renderedLetter.sc);
          }
          if (renderedLetter.fc && renderedLetter._mdf.fc) {
            textPath.setAttribute("fill", renderedLetter.fc);
            textPath.style.color = renderedLetter.fc;
          }
        }
      }
      if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
        var boundingBox = this.innerElem.getBBox();
        if (this.currentBBox.w !== boundingBox.width) {
          this.currentBBox.w = boundingBox.width;
          this.svgElement.setAttribute("width", boundingBox.width);
        }
        if (this.currentBBox.h !== boundingBox.height) {
          this.currentBBox.h = boundingBox.height;
          this.svgElement.setAttribute("height", boundingBox.height);
        }
        var margin = 1;
        if (this.currentBBox.w !== boundingBox.width + margin * 2 || this.currentBBox.h !== boundingBox.height + margin * 2 || this.currentBBox.x !== boundingBox.x - margin || this.currentBBox.y !== boundingBox.y - margin) {
          this.currentBBox.w = boundingBox.width + margin * 2;
          this.currentBBox.h = boundingBox.height + margin * 2;
          this.currentBBox.x = boundingBox.x - margin;
          this.currentBBox.y = boundingBox.y - margin;
          this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h);
          svgStyle = this.svgElement.style;
          var svgTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)";
          svgStyle.transform = svgTransform;
          svgStyle.webkitTransform = svgTransform;
        }
      }
    };
    function HCameraElement(data2, globalData2, comp2) {
      this.initFrame();
      this.initBaseData(data2, globalData2, comp2);
      this.initHierarchy();
      var getProp = PropertyFactory.getProp;
      this.pe = getProp(this, data2.pe, 0, 0, this);
      if (data2.ks.p.s) {
        this.px = getProp(this, data2.ks.p.x, 1, 0, this);
        this.py = getProp(this, data2.ks.p.y, 1, 0, this);
        this.pz = getProp(this, data2.ks.p.z, 1, 0, this);
      } else {
        this.p = getProp(this, data2.ks.p, 1, 0, this);
      }
      if (data2.ks.a) {
        this.a = getProp(this, data2.ks.a, 1, 0, this);
      }
      if (data2.ks.or.k.length && data2.ks.or.k[0].to) {
        var i;
        var len = data2.ks.or.k.length;
        for (i = 0; i < len; i += 1) {
          data2.ks.or.k[i].to = null;
          data2.ks.or.k[i].ti = null;
        }
      }
      this.or = getProp(this, data2.ks.or, 1, degToRads, this);
      this.or.sh = true;
      this.rx = getProp(this, data2.ks.rx, 0, degToRads, this);
      this.ry = getProp(this, data2.ks.ry, 0, degToRads, this);
      this.rz = getProp(this, data2.ks.rz, 0, degToRads, this);
      this.mat = new Matrix();
      this._prevMat = new Matrix();
      this._isFirstFrame = true;
      this.finalTransform = {
        mProp: this
      };
    }
    extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);
    HCameraElement.prototype.setup = function() {
      var i;
      var len = this.comp.threeDElements.length;
      var comp2;
      var perspectiveStyle;
      var containerStyle;
      for (i = 0; i < len; i += 1) {
        comp2 = this.comp.threeDElements[i];
        if (comp2.type === "3d") {
          perspectiveStyle = comp2.perspectiveElem.style;
          containerStyle = comp2.container.style;
          var perspective = this.pe.v + "px";
          var origin = "0px 0px 0px";
          var matrix = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
          perspectiveStyle.perspective = perspective;
          perspectiveStyle.webkitPerspective = perspective;
          containerStyle.transformOrigin = origin;
          containerStyle.mozTransformOrigin = origin;
          containerStyle.webkitTransformOrigin = origin;
          perspectiveStyle.transform = matrix;
          perspectiveStyle.webkitTransform = matrix;
        }
      }
    };
    HCameraElement.prototype.createElements = function() {
    };
    HCameraElement.prototype.hide = function() {
    };
    HCameraElement.prototype.renderFrame = function() {
      var _mdf = this._isFirstFrame;
      var i;
      var len;
      if (this.hierarchy) {
        len = this.hierarchy.length;
        for (i = 0; i < len; i += 1) {
          _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
        }
      }
      if (_mdf || this.pe._mdf || this.p && this.p._mdf || this.px && (this.px._mdf || this.py._mdf || this.pz._mdf) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || this.a && this.a._mdf) {
        this.mat.reset();
        if (this.hierarchy) {
          len = this.hierarchy.length - 1;
          for (i = len; i >= 0; i -= 1) {
            var mTransf = this.hierarchy[i].finalTransform.mProp;
            this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);
            this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);
            this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);
            this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);
            this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);
          }
        }
        if (this.p) {
          this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);
        } else {
          this.mat.translate(-this.px.v, -this.py.v, this.pz.v);
        }
        if (this.a) {
          var diffVector;
          if (this.p) {
            diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];
          } else {
            diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
          }
          var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2));
          var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];
          var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);
          var mRotationX = Math.atan2(lookDir[1], lookLengthOnXZ);
          var mRotationY = Math.atan2(lookDir[0], -lookDir[2]);
          this.mat.rotateY(mRotationY).rotateX(-mRotationX);
        }
        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);
        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);
        this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);
        this.mat.translate(0, 0, this.pe.v);
        var hasMatrixChanged = !this._prevMat.equals(this.mat);
        if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {
          len = this.comp.threeDElements.length;
          var comp2;
          var perspectiveStyle;
          var containerStyle;
          for (i = 0; i < len; i += 1) {
            comp2 = this.comp.threeDElements[i];
            if (comp2.type === "3d") {
              if (hasMatrixChanged) {
                var matValue = this.mat.toCSS();
                containerStyle = comp2.container.style;
                containerStyle.transform = matValue;
                containerStyle.webkitTransform = matValue;
              }
              if (this.pe._mdf) {
                perspectiveStyle = comp2.perspectiveElem.style;
                perspectiveStyle.perspective = this.pe.v + "px";
                perspectiveStyle.webkitPerspective = this.pe.v + "px";
              }
            }
          }
          this.mat.clone(this._prevMat);
        }
      }
      this._isFirstFrame = false;
    };
    HCameraElement.prototype.prepareFrame = function(num) {
      this.prepareProperties(num, true);
    };
    HCameraElement.prototype.destroy = function() {
    };
    HCameraElement.prototype.getBaseElement = function() {
      return null;
    };
    function HImageElement(data2, globalData2, comp2) {
      this.assetData = globalData2.getAssetData(data2.refId);
      this.initElement(data2, globalData2, comp2);
    }
    extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);
    HImageElement.prototype.createContent = function() {
      var assetPath = this.globalData.getAssetsPath(this.assetData);
      var img = new Image();
      if (this.data.hasMask) {
        this.imageElem = createNS("image");
        this.imageElem.setAttribute("width", this.assetData.w + "px");
        this.imageElem.setAttribute("height", this.assetData.h + "px");
        this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", assetPath);
        this.layerElement.appendChild(this.imageElem);
        this.baseElement.setAttribute("width", this.assetData.w);
        this.baseElement.setAttribute("height", this.assetData.h);
      } else {
        this.layerElement.appendChild(img);
      }
      img.crossOrigin = "anonymous";
      img.src = assetPath;
      if (this.data.ln) {
        this.baseElement.setAttribute("id", this.data.ln);
      }
    };
    function HybridRendererBase(animationItem, config) {
      this.animationItem = animationItem;
      this.layers = null;
      this.renderedFrame = -1;
      this.renderConfig = {
        className: config && config.className || "",
        imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
        hideOnTransparent: !(config && config.hideOnTransparent === false),
        filterSize: {
          width: config && config.filterSize && config.filterSize.width || "400%",
          height: config && config.filterSize && config.filterSize.height || "400%",
          x: config && config.filterSize && config.filterSize.x || "-100%",
          y: config && config.filterSize && config.filterSize.y || "-100%"
        }
      };
      this.globalData = {
        _mdf: false,
        frameNum: -1,
        renderConfig: this.renderConfig
      };
      this.pendingElements = [];
      this.elements = [];
      this.threeDElements = [];
      this.destroyed = false;
      this.camera = null;
      this.supports3d = true;
      this.rendererType = "html";
    }
    extendPrototype([BaseRenderer], HybridRendererBase);
    HybridRendererBase.prototype.buildItem = SVGRenderer.prototype.buildItem;
    HybridRendererBase.prototype.checkPendingElements = function() {
      while (this.pendingElements.length) {
        var element = this.pendingElements.pop();
        element.checkParenting();
      }
    };
    HybridRendererBase.prototype.appendElementInPos = function(element, pos) {
      var newDOMElement = element.getBaseElement();
      if (!newDOMElement) {
        return;
      }
      var layer = this.layers[pos];
      if (!layer.ddd || !this.supports3d) {
        if (this.threeDElements) {
          this.addTo3dContainer(newDOMElement, pos);
        } else {
          var i = 0;
          var nextDOMElement;
          var nextLayer;
          var tmpDOMElement;
          while (i < pos) {
            if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {
              nextLayer = this.elements[i];
              tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();
              nextDOMElement = tmpDOMElement || nextDOMElement;
            }
            i += 1;
          }
          if (nextDOMElement) {
            if (!layer.ddd || !this.supports3d) {
              this.layerElement.insertBefore(newDOMElement, nextDOMElement);
            }
          } else if (!layer.ddd || !this.supports3d) {
            this.layerElement.appendChild(newDOMElement);
          }
        }
      } else {
        this.addTo3dContainer(newDOMElement, pos);
      }
    };
    HybridRendererBase.prototype.createShape = function(data2) {
      if (!this.supports3d) {
        return new SVGShapeElement(data2, this.globalData, this);
      }
      return new HShapeElement(data2, this.globalData, this);
    };
    HybridRendererBase.prototype.createText = function(data2) {
      if (!this.supports3d) {
        return new SVGTextLottieElement(data2, this.globalData, this);
      }
      return new HTextElement(data2, this.globalData, this);
    };
    HybridRendererBase.prototype.createCamera = function(data2) {
      this.camera = new HCameraElement(data2, this.globalData, this);
      return this.camera;
    };
    HybridRendererBase.prototype.createImage = function(data2) {
      if (!this.supports3d) {
        return new IImageElement(data2, this.globalData, this);
      }
      return new HImageElement(data2, this.globalData, this);
    };
    HybridRendererBase.prototype.createSolid = function(data2) {
      if (!this.supports3d) {
        return new ISolidElement(data2, this.globalData, this);
      }
      return new HSolidElement(data2, this.globalData, this);
    };
    HybridRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;
    HybridRendererBase.prototype.getThreeDContainerByPos = function(pos) {
      var i = 0;
      var len = this.threeDElements.length;
      while (i < len) {
        if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {
          return this.threeDElements[i].perspectiveElem;
        }
        i += 1;
      }
      return null;
    };
    HybridRendererBase.prototype.createThreeDContainer = function(pos, type) {
      var perspectiveElem = createTag("div");
      var style;
      var containerStyle;
      styleDiv(perspectiveElem);
      var container = createTag("div");
      styleDiv(container);
      if (type === "3d") {
        style = perspectiveElem.style;
        style.width = this.globalData.compSize.w + "px";
        style.height = this.globalData.compSize.h + "px";
        var center = "50% 50%";
        style.webkitTransformOrigin = center;
        style.mozTransformOrigin = center;
        style.transformOrigin = center;
        containerStyle = container.style;
        var matrix = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
        containerStyle.transform = matrix;
        containerStyle.webkitTransform = matrix;
      }
      perspectiveElem.appendChild(container);
      var threeDContainerData = {
        container,
        perspectiveElem,
        startPos: pos,
        endPos: pos,
        type
      };
      this.threeDElements.push(threeDContainerData);
      return threeDContainerData;
    };
    HybridRendererBase.prototype.build3dContainers = function() {
      var i;
      var len = this.layers.length;
      var lastThreeDContainerData;
      var currentContainer = "";
      for (i = 0; i < len; i += 1) {
        if (this.layers[i].ddd && this.layers[i].ty !== 3) {
          if (currentContainer !== "3d") {
            currentContainer = "3d";
            lastThreeDContainerData = this.createThreeDContainer(i, "3d");
          }
          lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
        } else {
          if (currentContainer !== "2d") {
            currentContainer = "2d";
            lastThreeDContainerData = this.createThreeDContainer(i, "2d");
          }
          lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);
        }
      }
      len = this.threeDElements.length;
      for (i = len - 1; i >= 0; i -= 1) {
        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);
      }
    };
    HybridRendererBase.prototype.addTo3dContainer = function(elem2, pos) {
      var i = 0;
      var len = this.threeDElements.length;
      while (i < len) {
        if (pos <= this.threeDElements[i].endPos) {
          var j = this.threeDElements[i].startPos;
          var nextElement;
          while (j < pos) {
            if (this.elements[j] && this.elements[j].getBaseElement) {
              nextElement = this.elements[j].getBaseElement();
            }
            j += 1;
          }
          if (nextElement) {
            this.threeDElements[i].container.insertBefore(elem2, nextElement);
          } else {
            this.threeDElements[i].container.appendChild(elem2);
          }
          break;
        }
        i += 1;
      }
    };
    HybridRendererBase.prototype.configAnimation = function(animData) {
      var resizerElem = createTag("div");
      var wrapper = this.animationItem.wrapper;
      var style = resizerElem.style;
      style.width = animData.w + "px";
      style.height = animData.h + "px";
      this.resizerElem = resizerElem;
      styleDiv(resizerElem);
      style.transformStyle = "flat";
      style.mozTransformStyle = "flat";
      style.webkitTransformStyle = "flat";
      if (this.renderConfig.className) {
        resizerElem.setAttribute("class", this.renderConfig.className);
      }
      wrapper.appendChild(resizerElem);
      style.overflow = "hidden";
      var svg = createNS("svg");
      svg.setAttribute("width", "1");
      svg.setAttribute("height", "1");
      styleDiv(svg);
      this.resizerElem.appendChild(svg);
      var defs = createNS("defs");
      svg.appendChild(defs);
      this.data = animData;
      this.setupGlobalData(animData, svg);
      this.globalData.defs = defs;
      this.layers = animData.layers;
      this.layerElement = this.resizerElem;
      this.build3dContainers();
      this.updateContainerSize();
    };
    HybridRendererBase.prototype.destroy = function() {
      if (this.animationItem.wrapper) {
        this.animationItem.wrapper.innerText = "";
      }
      this.animationItem.container = null;
      this.globalData.defs = null;
      var i;
      var len = this.layers ? this.layers.length : 0;
      for (i = 0; i < len; i += 1) {
        this.elements[i].destroy();
      }
      this.elements.length = 0;
      this.destroyed = true;
      this.animationItem = null;
    };
    HybridRendererBase.prototype.updateContainerSize = function() {
      var elementWidth = this.animationItem.wrapper.offsetWidth;
      var elementHeight = this.animationItem.wrapper.offsetHeight;
      var elementRel = elementWidth / elementHeight;
      var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;
      var sx;
      var sy;
      var tx;
      var ty;
      if (animationRel > elementRel) {
        sx = elementWidth / this.globalData.compSize.w;
        sy = elementWidth / this.globalData.compSize.w;
        tx = 0;
        ty = (elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2;
      } else {
        sx = elementHeight / this.globalData.compSize.h;
        sy = elementHeight / this.globalData.compSize.h;
        tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;
        ty = 0;
      }
      var style = this.resizerElem.style;
      style.webkitTransform = "matrix3d(" + sx + ",0,0,0,0," + sy + ",0,0,0,0,1,0," + tx + "," + ty + ",0,1)";
      style.transform = style.webkitTransform;
    };
    HybridRendererBase.prototype.renderFrame = SVGRenderer.prototype.renderFrame;
    HybridRendererBase.prototype.hide = function() {
      this.resizerElem.style.display = "none";
    };
    HybridRendererBase.prototype.show = function() {
      this.resizerElem.style.display = "block";
    };
    HybridRendererBase.prototype.initItems = function() {
      this.buildAllItems();
      if (this.camera) {
        this.camera.setup();
      } else {
        var cWidth = this.globalData.compSize.w;
        var cHeight = this.globalData.compSize.h;
        var i;
        var len = this.threeDElements.length;
        for (i = 0; i < len; i += 1) {
          var style = this.threeDElements[i].perspectiveElem.style;
          style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + "px";
          style.perspective = style.webkitPerspective;
        }
      }
    };
    HybridRendererBase.prototype.searchExtraCompositions = function(assets2) {
      var i;
      var len = assets2.length;
      var floatingContainer = createTag("div");
      for (i = 0; i < len; i += 1) {
        if (assets2[i].xt) {
          var comp2 = this.createComp(assets2[i], floatingContainer, this.globalData.comp, null);
          comp2.initExpressions();
          this.globalData.projectInterface.registerComposition(comp2);
        }
      }
    };
    function HCompElement(data2, globalData2, comp2) {
      this.layers = data2.layers;
      this.supports3d = !data2.hasMask;
      this.completeLayers = false;
      this.pendingElements = [];
      this.elements = this.layers ? createSizedArray(this.layers.length) : [];
      this.initElement(data2, globalData2, comp2);
      this.tm = data2.tm ? PropertyFactory.getProp(this, data2.tm, 0, globalData2.frameRate, this) : {
        _placeholder: true
      };
    }
    extendPrototype([HybridRendererBase, ICompElement, HBaseElement], HCompElement);
    HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;
    HCompElement.prototype.createContainerElements = function() {
      this._createBaseContainerElements();
      if (this.data.hasMask) {
        this.svgElement.setAttribute("width", this.data.w);
        this.svgElement.setAttribute("height", this.data.h);
        this.transformedElement = this.baseElement;
      } else {
        this.transformedElement = this.layerElement;
      }
    };
    HCompElement.prototype.addTo3dContainer = function(elem2, pos) {
      var j = 0;
      var nextElement;
      while (j < pos) {
        if (this.elements[j] && this.elements[j].getBaseElement) {
          nextElement = this.elements[j].getBaseElement();
        }
        j += 1;
      }
      if (nextElement) {
        this.layerElement.insertBefore(elem2, nextElement);
      } else {
        this.layerElement.appendChild(elem2);
      }
    };
    HCompElement.prototype.createComp = function(data2) {
      if (!this.supports3d) {
        return new SVGCompElement(data2, this.globalData, this);
      }
      return new HCompElement(data2, this.globalData, this);
    };
    function HybridRenderer(animationItem, config) {
      this.animationItem = animationItem;
      this.layers = null;
      this.renderedFrame = -1;
      this.renderConfig = {
        className: config && config.className || "",
        imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || "xMidYMid slice",
        hideOnTransparent: !(config && config.hideOnTransparent === false),
        filterSize: {
          width: config && config.filterSize && config.filterSize.width || "400%",
          height: config && config.filterSize && config.filterSize.height || "400%",
          x: config && config.filterSize && config.filterSize.x || "-100%",
          y: config && config.filterSize && config.filterSize.y || "-100%"
        },
        runExpressions: !config || config.runExpressions === void 0 || config.runExpressions
      };
      this.globalData = {
        _mdf: false,
        frameNum: -1,
        renderConfig: this.renderConfig
      };
      this.pendingElements = [];
      this.elements = [];
      this.threeDElements = [];
      this.destroyed = false;
      this.camera = null;
      this.supports3d = true;
      this.rendererType = "html";
    }
    extendPrototype([HybridRendererBase], HybridRenderer);
    HybridRenderer.prototype.createComp = function(data2) {
      if (!this.supports3d) {
        return new SVGCompElement(data2, this.globalData, this);
      }
      return new HCompElement(data2, this.globalData, this);
    };
    var CompExpressionInterface = function() {
      return function(comp2) {
        function _thisLayerFunction(name2) {
          var i = 0;
          var len = comp2.layers.length;
          while (i < len) {
            if (comp2.layers[i].nm === name2 || comp2.layers[i].ind === name2) {
              return comp2.elements[i].layerInterface;
            }
            i += 1;
          }
          return null;
        }
        Object.defineProperty(_thisLayerFunction, "_name", {
          value: comp2.data.nm
        });
        _thisLayerFunction.layer = _thisLayerFunction;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.height = comp2.data.h || comp2.globalData.compSize.h;
        _thisLayerFunction.width = comp2.data.w || comp2.globalData.compSize.w;
        _thisLayerFunction.pixelAspect = 1;
        _thisLayerFunction.frameDuration = 1 / comp2.globalData.frameRate;
        _thisLayerFunction.displayStartTime = 0;
        _thisLayerFunction.numLayers = comp2.layers.length;
        return _thisLayerFunction;
      };
    }();
    var Expressions = function() {
      var ob2 = {};
      ob2.initExpressions = initExpressions;
      function initExpressions(animation) {
        var stackCount = 0;
        var registers = [];
        function pushExpression() {
          stackCount += 1;
        }
        function popExpression() {
          stackCount -= 1;
          if (stackCount === 0) {
            releaseInstances();
          }
        }
        function registerExpressionProperty(expression) {
          if (registers.indexOf(expression) === -1) {
            registers.push(expression);
          }
        }
        function releaseInstances() {
          var i;
          var len = registers.length;
          for (i = 0; i < len; i += 1) {
            registers[i].release();
          }
          registers.length = 0;
        }
        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);
        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);
        animation.renderer.globalData.pushExpression = pushExpression;
        animation.renderer.globalData.popExpression = popExpression;
        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
      }
      return ob2;
    }();
    var MaskManagerInterface = function() {
      function MaskInterface(mask2, data2) {
        this._mask = mask2;
        this._data = data2;
      }
      Object.defineProperty(MaskInterface.prototype, "maskPath", {
        get: function get() {
          if (this._mask.prop.k) {
            this._mask.prop.getValue();
          }
          return this._mask.prop;
        }
      });
      Object.defineProperty(MaskInterface.prototype, "maskOpacity", {
        get: function get() {
          if (this._mask.op.k) {
            this._mask.op.getValue();
          }
          return this._mask.op.v * 100;
        }
      });
      var MaskManager = function MaskManager2(maskManager) {
        var _masksInterfaces = createSizedArray(maskManager.viewData.length);
        var i;
        var len = maskManager.viewData.length;
        for (i = 0; i < len; i += 1) {
          _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);
        }
        var maskFunction = function maskFunction2(name2) {
          i = 0;
          while (i < len) {
            if (maskManager.masksProperties[i].nm === name2) {
              return _masksInterfaces[i];
            }
            i += 1;
          }
          return null;
        };
        return maskFunction;
      };
      return MaskManager;
    }();
    var ExpressionPropertyInterface = function() {
      var defaultUnidimensionalValue = {
        pv: 0,
        v: 0,
        mult: 1
      };
      var defaultMultidimensionalValue = {
        pv: [0, 0, 0],
        v: [0, 0, 0],
        mult: 1
      };
      function completeProperty(expressionValue, property2, type) {
        Object.defineProperty(expressionValue, "velocity", {
          get: function get() {
            return property2.getVelocityAtTime(property2.comp.currentFrame);
          }
        });
        expressionValue.numKeys = property2.keyframes ? property2.keyframes.length : 0;
        expressionValue.key = function(pos) {
          if (!expressionValue.numKeys) {
            return 0;
          }
          var value2 = "";
          if ("s" in property2.keyframes[pos - 1]) {
            value2 = property2.keyframes[pos - 1].s;
          } else if ("e" in property2.keyframes[pos - 2]) {
            value2 = property2.keyframes[pos - 2].e;
          } else {
            value2 = property2.keyframes[pos - 2].s;
          }
          var valueProp = type === "unidimensional" ? new Number(value2) : Object.assign({}, value2);
          valueProp.time = property2.keyframes[pos - 1].t / property2.elem.comp.globalData.frameRate;
          valueProp.value = type === "unidimensional" ? value2[0] : value2;
          return valueProp;
        };
        expressionValue.valueAtTime = property2.getValueAtTime;
        expressionValue.speedAtTime = property2.getSpeedAtTime;
        expressionValue.velocityAtTime = property2.getVelocityAtTime;
        expressionValue.propertyGroup = property2.propertyGroup;
      }
      function UnidimensionalPropertyInterface(property2) {
        if (!property2 || !("pv" in property2)) {
          property2 = defaultUnidimensionalValue;
        }
        var mult = 1 / property2.mult;
        var val2 = property2.pv * mult;
        var expressionValue = new Number(val2);
        expressionValue.value = val2;
        completeProperty(expressionValue, property2, "unidimensional");
        return function() {
          if (property2.k) {
            property2.getValue();
          }
          val2 = property2.v * mult;
          if (expressionValue.value !== val2) {
            expressionValue = new Number(val2);
            expressionValue.value = val2;
            completeProperty(expressionValue, property2, "unidimensional");
          }
          return expressionValue;
        };
      }
      function MultidimensionalPropertyInterface(property2) {
        if (!property2 || !("pv" in property2)) {
          property2 = defaultMultidimensionalValue;
        }
        var mult = 1 / property2.mult;
        var len = property2.data && property2.data.l || property2.pv.length;
        var expressionValue = createTypedArray("float32", len);
        var arrValue = createTypedArray("float32", len);
        expressionValue.value = arrValue;
        completeProperty(expressionValue, property2, "multidimensional");
        return function() {
          if (property2.k) {
            property2.getValue();
          }
          for (var i = 0; i < len; i += 1) {
            arrValue[i] = property2.v[i] * mult;
            expressionValue[i] = arrValue[i];
          }
          return expressionValue;
        };
      }
      function defaultGetter() {
        return defaultUnidimensionalValue;
      }
      return function(property2) {
        if (!property2) {
          return defaultGetter;
        }
        if (property2.propType === "unidimensional") {
          return UnidimensionalPropertyInterface(property2);
        }
        return MultidimensionalPropertyInterface(property2);
      };
    }();
    var TransformExpressionInterface = function() {
      return function(transform2) {
        function _thisFunction(name2) {
          switch (name2) {
            case "scale":
            case "Scale":
            case "ADBE Scale":
            case 6:
              return _thisFunction.scale;
            case "rotation":
            case "Rotation":
            case "ADBE Rotation":
            case "ADBE Rotate Z":
            case 10:
              return _thisFunction.rotation;
            case "ADBE Rotate X":
              return _thisFunction.xRotation;
            case "ADBE Rotate Y":
              return _thisFunction.yRotation;
            case "position":
            case "Position":
            case "ADBE Position":
            case 2:
              return _thisFunction.position;
            case "ADBE Position_0":
              return _thisFunction.xPosition;
            case "ADBE Position_1":
              return _thisFunction.yPosition;
            case "ADBE Position_2":
              return _thisFunction.zPosition;
            case "anchorPoint":
            case "AnchorPoint":
            case "Anchor Point":
            case "ADBE AnchorPoint":
            case 1:
              return _thisFunction.anchorPoint;
            case "opacity":
            case "Opacity":
            case 11:
              return _thisFunction.opacity;
            default:
              return null;
          }
        }
        Object.defineProperty(_thisFunction, "rotation", {
          get: ExpressionPropertyInterface(transform2.r || transform2.rz)
        });
        Object.defineProperty(_thisFunction, "zRotation", {
          get: ExpressionPropertyInterface(transform2.rz || transform2.r)
        });
        Object.defineProperty(_thisFunction, "xRotation", {
          get: ExpressionPropertyInterface(transform2.rx)
        });
        Object.defineProperty(_thisFunction, "yRotation", {
          get: ExpressionPropertyInterface(transform2.ry)
        });
        Object.defineProperty(_thisFunction, "scale", {
          get: ExpressionPropertyInterface(transform2.s)
        });
        var _px;
        var _py;
        var _pz;
        var _transformFactory;
        if (transform2.p) {
          _transformFactory = ExpressionPropertyInterface(transform2.p);
        } else {
          _px = ExpressionPropertyInterface(transform2.px);
          _py = ExpressionPropertyInterface(transform2.py);
          if (transform2.pz) {
            _pz = ExpressionPropertyInterface(transform2.pz);
          }
        }
        Object.defineProperty(_thisFunction, "position", {
          get: function get() {
            if (transform2.p) {
              return _transformFactory();
            }
            return [_px(), _py(), _pz ? _pz() : 0];
          }
        });
        Object.defineProperty(_thisFunction, "xPosition", {
          get: ExpressionPropertyInterface(transform2.px)
        });
        Object.defineProperty(_thisFunction, "yPosition", {
          get: ExpressionPropertyInterface(transform2.py)
        });
        Object.defineProperty(_thisFunction, "zPosition", {
          get: ExpressionPropertyInterface(transform2.pz)
        });
        Object.defineProperty(_thisFunction, "anchorPoint", {
          get: ExpressionPropertyInterface(transform2.a)
        });
        Object.defineProperty(_thisFunction, "opacity", {
          get: ExpressionPropertyInterface(transform2.o)
        });
        Object.defineProperty(_thisFunction, "skew", {
          get: ExpressionPropertyInterface(transform2.sk)
        });
        Object.defineProperty(_thisFunction, "skewAxis", {
          get: ExpressionPropertyInterface(transform2.sa)
        });
        Object.defineProperty(_thisFunction, "orientation", {
          get: ExpressionPropertyInterface(transform2.or)
        });
        return _thisFunction;
      };
    }();
    var LayerExpressionInterface = function() {
      function getMatrix(time2) {
        var toWorldMat = new Matrix();
        if (time2 !== void 0) {
          var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time2);
          propMatrix.clone(toWorldMat);
        } else {
          var transformMat = this._elem.finalTransform.mProp;
          transformMat.applyToMatrix(toWorldMat);
        }
        return toWorldMat;
      }
      function toWorldVec(arr, time2) {
        var toWorldMat = this.getMatrix(time2);
        toWorldMat.props[12] = 0;
        toWorldMat.props[13] = 0;
        toWorldMat.props[14] = 0;
        return this.applyPoint(toWorldMat, arr);
      }
      function toWorld2(arr, time2) {
        var toWorldMat = this.getMatrix(time2);
        return this.applyPoint(toWorldMat, arr);
      }
      function fromWorldVec(arr, time2) {
        var toWorldMat = this.getMatrix(time2);
        toWorldMat.props[12] = 0;
        toWorldMat.props[13] = 0;
        toWorldMat.props[14] = 0;
        return this.invertPoint(toWorldMat, arr);
      }
      function fromWorld2(arr, time2) {
        var toWorldMat = this.getMatrix(time2);
        return this.invertPoint(toWorldMat, arr);
      }
      function applyPoint(matrix, arr) {
        if (this._elem.hierarchy && this._elem.hierarchy.length) {
          var i;
          var len = this._elem.hierarchy.length;
          for (i = 0; i < len; i += 1) {
            this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);
          }
        }
        return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);
      }
      function invertPoint(matrix, arr) {
        if (this._elem.hierarchy && this._elem.hierarchy.length) {
          var i;
          var len = this._elem.hierarchy.length;
          for (i = 0; i < len; i += 1) {
            this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);
          }
        }
        return matrix.inversePoint(arr);
      }
      function fromComp2(arr) {
        var toWorldMat = new Matrix();
        toWorldMat.reset();
        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);
        if (this._elem.hierarchy && this._elem.hierarchy.length) {
          var i;
          var len = this._elem.hierarchy.length;
          for (i = 0; i < len; i += 1) {
            this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);
          }
          return toWorldMat.inversePoint(arr);
        }
        return toWorldMat.inversePoint(arr);
      }
      function sampleImage() {
        return [1, 1, 1, 1];
      }
      return function(elem2) {
        var transformInterface;
        function _registerMaskInterface(maskManager) {
          _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem2);
        }
        function _registerEffectsInterface(effects) {
          _thisLayerFunction.effect = effects;
        }
        function _thisLayerFunction(name2) {
          switch (name2) {
            case "ADBE Root Vectors Group":
            case "Contents":
            case 2:
              return _thisLayerFunction.shapeInterface;
            case 1:
            case 6:
            case "Transform":
            case "transform":
            case "ADBE Transform Group":
              return transformInterface;
            case 4:
            case "ADBE Effect Parade":
            case "effects":
            case "Effects":
              return _thisLayerFunction.effect;
            case "ADBE Text Properties":
              return _thisLayerFunction.textInterface;
            default:
              return null;
          }
        }
        _thisLayerFunction.getMatrix = getMatrix;
        _thisLayerFunction.invertPoint = invertPoint;
        _thisLayerFunction.applyPoint = applyPoint;
        _thisLayerFunction.toWorld = toWorld2;
        _thisLayerFunction.toWorldVec = toWorldVec;
        _thisLayerFunction.fromWorld = fromWorld2;
        _thisLayerFunction.fromWorldVec = fromWorldVec;
        _thisLayerFunction.toComp = toWorld2;
        _thisLayerFunction.fromComp = fromComp2;
        _thisLayerFunction.sampleImage = sampleImage;
        _thisLayerFunction.sourceRectAtTime = elem2.sourceRectAtTime.bind(elem2);
        _thisLayerFunction._elem = elem2;
        transformInterface = TransformExpressionInterface(elem2.finalTransform.mProp);
        var anchorPointDescriptor = getDescriptor(transformInterface, "anchorPoint");
        Object.defineProperties(_thisLayerFunction, {
          hasParent: {
            get: function get() {
              return elem2.hierarchy.length;
            }
          },
          parent: {
            get: function get() {
              return elem2.hierarchy[0].layerInterface;
            }
          },
          rotation: getDescriptor(transformInterface, "rotation"),
          scale: getDescriptor(transformInterface, "scale"),
          position: getDescriptor(transformInterface, "position"),
          opacity: getDescriptor(transformInterface, "opacity"),
          anchorPoint: anchorPointDescriptor,
          anchor_point: anchorPointDescriptor,
          transform: {
            get: function get() {
              return transformInterface;
            }
          },
          active: {
            get: function get() {
              return elem2.isInRange;
            }
          }
        });
        _thisLayerFunction.startTime = elem2.data.st;
        _thisLayerFunction.index = elem2.data.ind;
        _thisLayerFunction.source = elem2.data.refId;
        _thisLayerFunction.height = elem2.data.ty === 0 ? elem2.data.h : 100;
        _thisLayerFunction.width = elem2.data.ty === 0 ? elem2.data.w : 100;
        _thisLayerFunction.inPoint = elem2.data.ip / elem2.comp.globalData.frameRate;
        _thisLayerFunction.outPoint = elem2.data.op / elem2.comp.globalData.frameRate;
        _thisLayerFunction._name = elem2.data.nm;
        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
        return _thisLayerFunction;
      };
    }();
    var propertyGroupFactory = function() {
      return function(interfaceFunction, parentPropertyGroup) {
        return function(val2) {
          val2 = val2 === void 0 ? 1 : val2;
          if (val2 <= 0) {
            return interfaceFunction;
          }
          return parentPropertyGroup(val2 - 1);
        };
      };
    }();
    var PropertyInterface = function() {
      return function(propertyName, propertyGroup) {
        var interfaceFunction = {
          _name: propertyName
        };
        function _propertyGroup(val2) {
          val2 = val2 === void 0 ? 1 : val2;
          if (val2 <= 0) {
            return interfaceFunction;
          }
          return propertyGroup(val2 - 1);
        }
        return _propertyGroup;
      };
    }();
    var EffectsExpressionInterface = function() {
      var ob2 = {
        createEffectsInterface
      };
      function createEffectsInterface(elem2, propertyGroup) {
        if (elem2.effectsManager) {
          var effectElements = [];
          var effectsData = elem2.data.ef;
          var i;
          var len = elem2.effectsManager.effectElements.length;
          for (i = 0; i < len; i += 1) {
            effectElements.push(createGroupInterface(effectsData[i], elem2.effectsManager.effectElements[i], propertyGroup, elem2));
          }
          var effects = elem2.data.ef || [];
          var groupInterface = function groupInterface2(name2) {
            i = 0;
            len = effects.length;
            while (i < len) {
              if (name2 === effects[i].nm || name2 === effects[i].mn || name2 === effects[i].ix) {
                return effectElements[i];
              }
              i += 1;
            }
            return null;
          };
          Object.defineProperty(groupInterface, "numProperties", {
            get: function get() {
              return effects.length;
            }
          });
          return groupInterface;
        }
        return null;
      }
      function createGroupInterface(data2, elements, propertyGroup, elem2) {
        function groupInterface(name2) {
          var effects = data2.ef;
          var i2 = 0;
          var len2 = effects.length;
          while (i2 < len2) {
            if (name2 === effects[i2].nm || name2 === effects[i2].mn || name2 === effects[i2].ix) {
              if (effects[i2].ty === 5) {
                return effectElements[i2];
              }
              return effectElements[i2]();
            }
            i2 += 1;
          }
          throw new Error();
        }
        var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);
        var effectElements = [];
        var i;
        var len = data2.ef.length;
        for (i = 0; i < len; i += 1) {
          if (data2.ef[i].ty === 5) {
            effectElements.push(createGroupInterface(data2.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem2));
          } else {
            effectElements.push(createValueInterface(elements.effectElements[i], data2.ef[i].ty, elem2, _propertyGroup));
          }
        }
        if (data2.mn === "ADBE Color Control") {
          Object.defineProperty(groupInterface, "color", {
            get: function get() {
              return effectElements[0]();
            }
          });
        }
        Object.defineProperties(groupInterface, {
          numProperties: {
            get: function get() {
              return data2.np;
            }
          },
          _name: {
            value: data2.nm
          },
          propertyGroup: {
            value: _propertyGroup
          }
        });
        groupInterface.enabled = data2.en !== 0;
        groupInterface.active = groupInterface.enabled;
        return groupInterface;
      }
      function createValueInterface(element, type, elem2, propertyGroup) {
        var expressionProperty = ExpressionPropertyInterface(element.p);
        function interfaceFunction() {
          if (type === 10) {
            return elem2.comp.compInterface(element.p.v);
          }
          return expressionProperty();
        }
        if (element.p.setGroupProperty) {
          element.p.setGroupProperty(PropertyInterface("", propertyGroup));
        }
        return interfaceFunction;
      }
      return ob2;
    }();
    var ShapePathInterface = function() {
      return function pathInterfaceFactory(shape, view, propertyGroup) {
        var prop = view.sh;
        function interfaceFunction(val2) {
          if (val2 === "Shape" || val2 === "shape" || val2 === "Path" || val2 === "path" || val2 === "ADBE Vector Shape" || val2 === 2) {
            return interfaceFunction.path;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        prop.setGroupProperty(PropertyInterface("Path", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          path: {
            get: function get() {
              if (prop.k) {
                prop.getValue();
              }
              return prop;
            }
          },
          shape: {
            get: function get() {
              if (prop.k) {
                prop.getValue();
              }
              return prop;
            }
          },
          _name: {
            value: shape.nm
          },
          ix: {
            value: shape.ix
          },
          propertyIndex: {
            value: shape.ix
          },
          mn: {
            value: shape.mn
          },
          propertyGroup: {
            value: propertyGroup
          }
        });
        return interfaceFunction;
      };
    }();
    var ShapeExpressionInterface = function() {
      function iterateElements(shapes, view, propertyGroup) {
        var arr = [];
        var i;
        var len = shapes ? shapes.length : 0;
        for (i = 0; i < len; i += 1) {
          if (shapes[i].ty === "gr") {
            arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "fl") {
            arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "st") {
            arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "tm") {
            arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "tr")
            ;
          else if (shapes[i].ty === "el") {
            arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "sr") {
            arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "sh") {
            arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "rc") {
            arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "rd") {
            arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "rp") {
            arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else if (shapes[i].ty === "gf") {
            arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));
          } else {
            arr.push(defaultInterfaceFactory(shapes[i], view[i]));
          }
        }
        return arr;
      }
      function contentsInterfaceFactory(shape, view, propertyGroup) {
        var interfaces2;
        var interfaceFunction = function _interfaceFunction(value2) {
          var i = 0;
          var len = interfaces2.length;
          while (i < len) {
            if (interfaces2[i]._name === value2 || interfaces2[i].mn === value2 || interfaces2[i].propertyIndex === value2 || interfaces2[i].ix === value2 || interfaces2[i].ind === value2) {
              return interfaces2[i];
            }
            i += 1;
          }
          if (typeof value2 === "number") {
            return interfaces2[value2 - 1];
          }
          return null;
        };
        interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        interfaces2 = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);
        interfaceFunction.numProperties = interfaces2.length;
        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
        interfaceFunction.transform = transformInterface;
        interfaceFunction.propertyIndex = shape.cix;
        interfaceFunction._name = shape.nm;
        return interfaceFunction;
      }
      function groupInterfaceFactory(shape, view, propertyGroup) {
        var interfaceFunction = function _interfaceFunction(value2) {
          switch (value2) {
            case "ADBE Vectors Group":
            case "Contents":
            case 2:
              return interfaceFunction.content;
            default:
              return interfaceFunction.transform;
          }
        };
        interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var content2 = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);
        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);
        interfaceFunction.content = content2;
        interfaceFunction.transform = transformInterface;
        Object.defineProperty(interfaceFunction, "_name", {
          get: function get() {
            return shape.nm;
          }
        });
        interfaceFunction.numProperties = shape.np;
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.nm = shape.nm;
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function fillInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(val2) {
          if (val2 === "Color" || val2 === "color") {
            return interfaceFunction.color;
          }
          if (val2 === "Opacity" || val2 === "opacity") {
            return interfaceFunction.opacity;
          }
          return null;
        }
        Object.defineProperties(interfaceFunction, {
          color: {
            get: ExpressionPropertyInterface(view.c)
          },
          opacity: {
            get: ExpressionPropertyInterface(view.o)
          },
          _name: {
            value: shape.nm
          },
          mn: {
            value: shape.mn
          }
        });
        view.c.setGroupProperty(PropertyInterface("Color", propertyGroup));
        view.o.setGroupProperty(PropertyInterface("Opacity", propertyGroup));
        return interfaceFunction;
      }
      function gradientFillInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(val2) {
          if (val2 === "Start Point" || val2 === "start point") {
            return interfaceFunction.startPoint;
          }
          if (val2 === "End Point" || val2 === "end point") {
            return interfaceFunction.endPoint;
          }
          if (val2 === "Opacity" || val2 === "opacity") {
            return interfaceFunction.opacity;
          }
          return null;
        }
        Object.defineProperties(interfaceFunction, {
          startPoint: {
            get: ExpressionPropertyInterface(view.s)
          },
          endPoint: {
            get: ExpressionPropertyInterface(view.e)
          },
          opacity: {
            get: ExpressionPropertyInterface(view.o)
          },
          type: {
            get: function get() {
              return "a";
            }
          },
          _name: {
            value: shape.nm
          },
          mn: {
            value: shape.mn
          }
        });
        view.s.setGroupProperty(PropertyInterface("Start Point", propertyGroup));
        view.e.setGroupProperty(PropertyInterface("End Point", propertyGroup));
        view.o.setGroupProperty(PropertyInterface("Opacity", propertyGroup));
        return interfaceFunction;
      }
      function defaultInterfaceFactory() {
        function interfaceFunction() {
          return null;
        }
        return interfaceFunction;
      }
      function strokeInterfaceFactory(shape, view, propertyGroup) {
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);
        function addPropertyToDashOb(i2) {
          Object.defineProperty(dashOb, shape.d[i2].nm, {
            get: ExpressionPropertyInterface(view.d.dataProps[i2].p)
          });
        }
        var i;
        var len = shape.d ? shape.d.length : 0;
        var dashOb = {};
        for (i = 0; i < len; i += 1) {
          addPropertyToDashOb(i);
          view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);
        }
        function interfaceFunction(val2) {
          if (val2 === "Color" || val2 === "color") {
            return interfaceFunction.color;
          }
          if (val2 === "Opacity" || val2 === "opacity") {
            return interfaceFunction.opacity;
          }
          if (val2 === "Stroke Width" || val2 === "stroke width") {
            return interfaceFunction.strokeWidth;
          }
          return null;
        }
        Object.defineProperties(interfaceFunction, {
          color: {
            get: ExpressionPropertyInterface(view.c)
          },
          opacity: {
            get: ExpressionPropertyInterface(view.o)
          },
          strokeWidth: {
            get: ExpressionPropertyInterface(view.w)
          },
          dash: {
            get: function get() {
              return dashOb;
            }
          },
          _name: {
            value: shape.nm
          },
          mn: {
            value: shape.mn
          }
        });
        view.c.setGroupProperty(PropertyInterface("Color", _propertyGroup));
        view.o.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
        view.w.setGroupProperty(PropertyInterface("Stroke Width", _propertyGroup));
        return interfaceFunction;
      }
      function trimInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(val2) {
          if (val2 === shape.e.ix || val2 === "End" || val2 === "end") {
            return interfaceFunction.end;
          }
          if (val2 === shape.s.ix) {
            return interfaceFunction.start;
          }
          if (val2 === shape.o.ix) {
            return interfaceFunction.offset;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        interfaceFunction.propertyIndex = shape.ix;
        view.s.setGroupProperty(PropertyInterface("Start", _propertyGroup));
        view.e.setGroupProperty(PropertyInterface("End", _propertyGroup));
        view.o.setGroupProperty(PropertyInterface("Offset", _propertyGroup));
        interfaceFunction.propertyIndex = shape.ix;
        interfaceFunction.propertyGroup = propertyGroup;
        Object.defineProperties(interfaceFunction, {
          start: {
            get: ExpressionPropertyInterface(view.s)
          },
          end: {
            get: ExpressionPropertyInterface(view.e)
          },
          offset: {
            get: ExpressionPropertyInterface(view.o)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function transformInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.a.ix === value2 || value2 === "Anchor Point") {
            return interfaceFunction.anchorPoint;
          }
          if (shape.o.ix === value2 || value2 === "Opacity") {
            return interfaceFunction.opacity;
          }
          if (shape.p.ix === value2 || value2 === "Position") {
            return interfaceFunction.position;
          }
          if (shape.r.ix === value2 || value2 === "Rotation" || value2 === "ADBE Vector Rotation") {
            return interfaceFunction.rotation;
          }
          if (shape.s.ix === value2 || value2 === "Scale") {
            return interfaceFunction.scale;
          }
          if (shape.sk && shape.sk.ix === value2 || value2 === "Skew") {
            return interfaceFunction.skew;
          }
          if (shape.sa && shape.sa.ix === value2 || value2 === "Skew Axis") {
            return interfaceFunction.skewAxis;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        view.transform.mProps.o.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
        view.transform.mProps.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
        view.transform.mProps.a.setGroupProperty(PropertyInterface("Anchor Point", _propertyGroup));
        view.transform.mProps.s.setGroupProperty(PropertyInterface("Scale", _propertyGroup));
        view.transform.mProps.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
        if (view.transform.mProps.sk) {
          view.transform.mProps.sk.setGroupProperty(PropertyInterface("Skew", _propertyGroup));
          view.transform.mProps.sa.setGroupProperty(PropertyInterface("Skew Angle", _propertyGroup));
        }
        view.transform.op.setGroupProperty(PropertyInterface("Opacity", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          opacity: {
            get: ExpressionPropertyInterface(view.transform.mProps.o)
          },
          position: {
            get: ExpressionPropertyInterface(view.transform.mProps.p)
          },
          anchorPoint: {
            get: ExpressionPropertyInterface(view.transform.mProps.a)
          },
          scale: {
            get: ExpressionPropertyInterface(view.transform.mProps.s)
          },
          rotation: {
            get: ExpressionPropertyInterface(view.transform.mProps.r)
          },
          skew: {
            get: ExpressionPropertyInterface(view.transform.mProps.sk)
          },
          skewAxis: {
            get: ExpressionPropertyInterface(view.transform.mProps.sa)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.ty = "tr";
        interfaceFunction.mn = shape.mn;
        interfaceFunction.propertyGroup = propertyGroup;
        return interfaceFunction;
      }
      function ellipseInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.p.ix === value2) {
            return interfaceFunction.position;
          }
          if (shape.s.ix === value2) {
            return interfaceFunction.size;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        interfaceFunction.propertyIndex = shape.ix;
        var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
        prop.s.setGroupProperty(PropertyInterface("Size", _propertyGroup));
        prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          size: {
            get: ExpressionPropertyInterface(prop.s)
          },
          position: {
            get: ExpressionPropertyInterface(prop.p)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function starInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.p.ix === value2) {
            return interfaceFunction.position;
          }
          if (shape.r.ix === value2) {
            return interfaceFunction.rotation;
          }
          if (shape.pt.ix === value2) {
            return interfaceFunction.points;
          }
          if (shape.or.ix === value2 || value2 === "ADBE Vector Star Outer Radius") {
            return interfaceFunction.outerRadius;
          }
          if (shape.os.ix === value2) {
            return interfaceFunction.outerRoundness;
          }
          if (shape.ir && (shape.ir.ix === value2 || value2 === "ADBE Vector Star Inner Radius")) {
            return interfaceFunction.innerRadius;
          }
          if (shape.is && shape.is.ix === value2) {
            return interfaceFunction.innerRoundness;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.or.setGroupProperty(PropertyInterface("Outer Radius", _propertyGroup));
        prop.os.setGroupProperty(PropertyInterface("Outer Roundness", _propertyGroup));
        prop.pt.setGroupProperty(PropertyInterface("Points", _propertyGroup));
        prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
        prop.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
        if (shape.ir) {
          prop.ir.setGroupProperty(PropertyInterface("Inner Radius", _propertyGroup));
          prop.is.setGroupProperty(PropertyInterface("Inner Roundness", _propertyGroup));
        }
        Object.defineProperties(interfaceFunction, {
          position: {
            get: ExpressionPropertyInterface(prop.p)
          },
          rotation: {
            get: ExpressionPropertyInterface(prop.r)
          },
          points: {
            get: ExpressionPropertyInterface(prop.pt)
          },
          outerRadius: {
            get: ExpressionPropertyInterface(prop.or)
          },
          outerRoundness: {
            get: ExpressionPropertyInterface(prop.os)
          },
          innerRadius: {
            get: ExpressionPropertyInterface(prop.ir)
          },
          innerRoundness: {
            get: ExpressionPropertyInterface(prop.is)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function rectInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.p.ix === value2) {
            return interfaceFunction.position;
          }
          if (shape.r.ix === value2) {
            return interfaceFunction.roundness;
          }
          if (shape.s.ix === value2 || value2 === "Size" || value2 === "ADBE Vector Rect Size") {
            return interfaceFunction.size;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
        interfaceFunction.propertyIndex = shape.ix;
        prop.p.setGroupProperty(PropertyInterface("Position", _propertyGroup));
        prop.s.setGroupProperty(PropertyInterface("Size", _propertyGroup));
        prop.r.setGroupProperty(PropertyInterface("Rotation", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          position: {
            get: ExpressionPropertyInterface(prop.p)
          },
          roundness: {
            get: ExpressionPropertyInterface(prop.r)
          },
          size: {
            get: ExpressionPropertyInterface(prop.s)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function roundedInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.r.ix === value2 || value2 === "Round Corners 1") {
            return interfaceFunction.radius;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.rd.setGroupProperty(PropertyInterface("Radius", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          radius: {
            get: ExpressionPropertyInterface(prop.rd)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      function repeaterInterfaceFactory(shape, view, propertyGroup) {
        function interfaceFunction(value2) {
          if (shape.c.ix === value2 || value2 === "Copies") {
            return interfaceFunction.copies;
          }
          if (shape.o.ix === value2 || value2 === "Offset") {
            return interfaceFunction.offset;
          }
          return null;
        }
        var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);
        var prop = view;
        interfaceFunction.propertyIndex = shape.ix;
        prop.c.setGroupProperty(PropertyInterface("Copies", _propertyGroup));
        prop.o.setGroupProperty(PropertyInterface("Offset", _propertyGroup));
        Object.defineProperties(interfaceFunction, {
          copies: {
            get: ExpressionPropertyInterface(prop.c)
          },
          offset: {
            get: ExpressionPropertyInterface(prop.o)
          },
          _name: {
            value: shape.nm
          }
        });
        interfaceFunction.mn = shape.mn;
        return interfaceFunction;
      }
      return function(shapes, view, propertyGroup) {
        var interfaces2;
        function _interfaceFunction(value2) {
          if (typeof value2 === "number") {
            value2 = value2 === void 0 ? 1 : value2;
            if (value2 === 0) {
              return propertyGroup;
            }
            return interfaces2[value2 - 1];
          }
          var i = 0;
          var len = interfaces2.length;
          while (i < len) {
            if (interfaces2[i]._name === value2) {
              return interfaces2[i];
            }
            i += 1;
          }
          return null;
        }
        function parentGroupWrapper() {
          return propertyGroup;
        }
        _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);
        interfaces2 = iterateElements(shapes, view, _interfaceFunction.propertyGroup);
        _interfaceFunction.numProperties = interfaces2.length;
        _interfaceFunction._name = "Contents";
        return _interfaceFunction;
      };
    }();
    var TextExpressionInterface = function() {
      return function(elem2) {
        var _prevValue;
        var _sourceText;
        function _thisLayerFunction(name2) {
          switch (name2) {
            case "ADBE Text Document":
              return _thisLayerFunction.sourceText;
            default:
              return null;
          }
        }
        Object.defineProperty(_thisLayerFunction, "sourceText", {
          get: function get() {
            elem2.textProperty.getValue();
            var stringValue = elem2.textProperty.currentData.t;
            if (stringValue !== _prevValue) {
              _prevValue = elem2.textProperty.currentData.t;
              _sourceText = new String(stringValue);
              _sourceText.value = stringValue || new String(stringValue);
              Object.defineProperty(_sourceText, "style", {
                get: function get2() {
                  return {
                    fillColor: elem2.textProperty.currentData.fc
                  };
                }
              });
            }
            return _sourceText;
          }
        });
        return _thisLayerFunction;
      };
    }();
    function _typeof$2(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$2 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$2 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$2(obj);
    }
    var FootageInterface = function() {
      var outlineInterfaceFactory = function outlineInterfaceFactory2(elem2) {
        var currentPropertyName = "";
        var currentProperty = elem2.getFootageData();
        function init() {
          currentPropertyName = "";
          currentProperty = elem2.getFootageData();
          return searchProperty;
        }
        function searchProperty(value2) {
          if (currentProperty[value2]) {
            currentPropertyName = value2;
            currentProperty = currentProperty[value2];
            if (_typeof$2(currentProperty) === "object") {
              return searchProperty;
            }
            return currentProperty;
          }
          var propertyNameIndex = value2.indexOf(currentPropertyName);
          if (propertyNameIndex !== -1) {
            var index2 = parseInt(value2.substr(propertyNameIndex + currentPropertyName.length), 10);
            currentProperty = currentProperty[index2];
            if (_typeof$2(currentProperty) === "object") {
              return searchProperty;
            }
            return currentProperty;
          }
          return "";
        }
        return init;
      };
      var dataInterfaceFactory = function dataInterfaceFactory2(elem2) {
        function interfaceFunction(value2) {
          if (value2 === "Outline") {
            return interfaceFunction.outlineInterface();
          }
          return null;
        }
        interfaceFunction._name = "Outline";
        interfaceFunction.outlineInterface = outlineInterfaceFactory(elem2);
        return interfaceFunction;
      };
      return function(elem2) {
        function _interfaceFunction(value2) {
          if (value2 === "Data") {
            return _interfaceFunction.dataInterface;
          }
          return null;
        }
        _interfaceFunction._name = "Data";
        _interfaceFunction.dataInterface = dataInterfaceFactory(elem2);
        return _interfaceFunction;
      };
    }();
    var interfaces = {
      layer: LayerExpressionInterface,
      effects: EffectsExpressionInterface,
      comp: CompExpressionInterface,
      shape: ShapeExpressionInterface,
      text: TextExpressionInterface,
      footage: FootageInterface
    };
    function getInterface(type) {
      return interfaces[type] || null;
    }
    function _typeof$1(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof$1 = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof$1 = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof$1(obj);
    }
    function seedRandom(pool, math) {
      var global2 = this, width2 = 256, chunks = 6, digits = 52, rngname = "random", startdenom = math.pow(width2, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask2 = width2 - 1, nodecrypto;
      function seedrandom(seed, options, callback) {
        var key2 = [];
        options = options === true ? {
          entropy: true
        } : options || {};
        var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key2);
        var arc4 = new ARC4(key2);
        var prng = function prng2() {
          var n2 = arc4.g(chunks), d = startdenom, x2 = 0;
          while (n2 < significance) {
            n2 = (n2 + x2) * width2;
            d *= width2;
            x2 = arc4.g(1);
          }
          while (n2 >= overflow) {
            n2 /= 2;
            d /= 2;
            x2 >>>= 1;
          }
          return (n2 + x2) / d;
        };
        prng.int32 = function() {
          return arc4.g(4) | 0;
        };
        prng.quick = function() {
          return arc4.g(4) / 4294967296;
        };
        prng["double"] = prng;
        mixkey(tostring(arc4.S), pool);
        return (options.pass || callback || function(prng2, seed2, is_math_call, state) {
          if (state) {
            if (state.S) {
              copy(state, arc4);
            }
            prng2.state = function() {
              return copy(arc4, {});
            };
          }
          if (is_math_call) {
            math[rngname] = prng2;
            return seed2;
          } else
            return prng2;
        })(prng, shortseed, "global" in options ? options.global : this == math, options.state);
      }
      math["seed" + rngname] = seedrandom;
      function ARC4(key2) {
        var t2, keylen = key2.length, me2 = this, i = 0, j = me2.i = me2.j = 0, s = me2.S = [];
        if (!keylen) {
          key2 = [keylen++];
        }
        while (i < width2) {
          s[i] = i++;
        }
        for (i = 0; i < width2; i++) {
          s[i] = s[j = mask2 & j + key2[i % keylen] + (t2 = s[i])];
          s[j] = t2;
        }
        me2.g = function(count) {
          var t3, r2 = 0, i2 = me2.i, j2 = me2.j, s2 = me2.S;
          while (count--) {
            t3 = s2[i2 = mask2 & i2 + 1];
            r2 = r2 * width2 + s2[mask2 & (s2[i2] = s2[j2 = mask2 & j2 + t3]) + (s2[j2] = t3)];
          }
          me2.i = i2;
          me2.j = j2;
          return r2;
        };
      }
      function copy(f2, t2) {
        t2.i = f2.i;
        t2.j = f2.j;
        t2.S = f2.S.slice();
        return t2;
      }
      function flatten(obj, depth) {
        var result = [], typ = _typeof$1(obj), prop;
        if (depth && typ == "object") {
          for (prop in obj) {
            try {
              result.push(flatten(obj[prop], depth - 1));
            } catch (e) {
            }
          }
        }
        return result.length ? result : typ == "string" ? obj : obj + "\0";
      }
      function mixkey(seed, key2) {
        var stringseed = seed + "", smear, j = 0;
        while (j < stringseed.length) {
          key2[mask2 & j] = mask2 & (smear ^= key2[mask2 & j] * 19) + stringseed.charCodeAt(j++);
        }
        return tostring(key2);
      }
      function autoseed() {
        try {
          if (nodecrypto)
            ;
          var out = new Uint8Array(width2);
          (global2.crypto || global2.msCrypto).getRandomValues(out);
          return tostring(out);
        } catch (e) {
          var browser = global2.navigator, plugins = browser && browser.plugins;
          return [+/* @__PURE__ */ new Date(), global2, plugins, global2.screen, tostring(pool)];
        }
      }
      function tostring(a) {
        return String.fromCharCode.apply(0, a);
      }
      mixkey(math.random(), pool);
    }
    function initialize$2(BMMath2) {
      seedRandom([], BMMath2);
    }
    var propTypes = {
      SHAPE: "shape"
    };
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    var ExpressionManager = function() {
      var ob = {};
      var Math = BMMath;
      var window = null;
      var document = null;
      var XMLHttpRequest = null;
      var fetch = null;
      var frames = null;
      initialize$2(BMMath);
      function $bm_isInstanceOfArray(arr) {
        return arr.constructor === Array || arr.constructor === Float32Array;
      }
      function isNumerable(tOfV, v2) {
        return tOfV === "number" || tOfV === "boolean" || tOfV === "string" || v2 instanceof Number;
      }
      function $bm_neg(a) {
        var tOfA = _typeof(a);
        if (tOfA === "number" || tOfA === "boolean" || a instanceof Number) {
          return -a;
        }
        if ($bm_isInstanceOfArray(a)) {
          var i;
          var lenA = a.length;
          var retArr = [];
          for (i = 0; i < lenA; i += 1) {
            retArr[i] = -a[i];
          }
          return retArr;
        }
        if (a.propType) {
          return a.v;
        }
        return -a;
      }
      var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get;
      var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get;
      var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
      function sum(a, b) {
        var tOfA = _typeof(a);
        var tOfB = _typeof(b);
        if (tOfA === "string" || tOfB === "string") {
          return a + b;
        }
        if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
          return a + b;
        }
        if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
          a = a.slice(0);
          a[0] += b;
          return a;
        }
        if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
          b = b.slice(0);
          b[0] = a + b[0];
          return b;
        }
        if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
          var i = 0;
          var lenA = a.length;
          var lenB = b.length;
          var retArr = [];
          while (i < lenA || i < lenB) {
            if ((typeof a[i] === "number" || a[i] instanceof Number) && (typeof b[i] === "number" || b[i] instanceof Number)) {
              retArr[i] = a[i] + b[i];
            } else {
              retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];
            }
            i += 1;
          }
          return retArr;
        }
        return 0;
      }
      var add = sum;
      function sub(a, b) {
        var tOfA = _typeof(a);
        var tOfB = _typeof(b);
        if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
          if (tOfA === "string") {
            a = parseInt(a, 10);
          }
          if (tOfB === "string") {
            b = parseInt(b, 10);
          }
          return a - b;
        }
        if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
          a = a.slice(0);
          a[0] -= b;
          return a;
        }
        if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
          b = b.slice(0);
          b[0] = a - b[0];
          return b;
        }
        if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
          var i = 0;
          var lenA = a.length;
          var lenB = b.length;
          var retArr = [];
          while (i < lenA || i < lenB) {
            if ((typeof a[i] === "number" || a[i] instanceof Number) && (typeof b[i] === "number" || b[i] instanceof Number)) {
              retArr[i] = a[i] - b[i];
            } else {
              retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];
            }
            i += 1;
          }
          return retArr;
        }
        return 0;
      }
      function mul(a, b) {
        var tOfA = _typeof(a);
        var tOfB = _typeof(b);
        var arr;
        if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
          return a * b;
        }
        var i;
        var len;
        if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
          len = a.length;
          arr = createTypedArray("float32", len);
          for (i = 0; i < len; i += 1) {
            arr[i] = a[i] * b;
          }
          return arr;
        }
        if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
          len = b.length;
          arr = createTypedArray("float32", len);
          for (i = 0; i < len; i += 1) {
            arr[i] = a * b[i];
          }
          return arr;
        }
        return 0;
      }
      function div(a, b) {
        var tOfA = _typeof(a);
        var tOfB = _typeof(b);
        var arr;
        if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
          return a / b;
        }
        var i;
        var len;
        if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
          len = a.length;
          arr = createTypedArray("float32", len);
          for (i = 0; i < len; i += 1) {
            arr[i] = a[i] / b;
          }
          return arr;
        }
        if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
          len = b.length;
          arr = createTypedArray("float32", len);
          for (i = 0; i < len; i += 1) {
            arr[i] = a / b[i];
          }
          return arr;
        }
        return 0;
      }
      function mod(a, b) {
        if (typeof a === "string") {
          a = parseInt(a, 10);
        }
        if (typeof b === "string") {
          b = parseInt(b, 10);
        }
        return a % b;
      }
      var $bm_sum = sum;
      var $bm_sub = sub;
      var $bm_mul = mul;
      var $bm_div = div;
      var $bm_mod = mod;
      function clamp(num, min, max) {
        if (min > max) {
          var mm = max;
          max = min;
          min = mm;
        }
        return Math.min(Math.max(num, min), max);
      }
      function radiansToDegrees(val2) {
        return val2 / degToRads;
      }
      var radians_to_degrees = radiansToDegrees;
      function degreesToRadians(val2) {
        return val2 * degToRads;
      }
      var degrees_to_radians = radiansToDegrees;
      var helperLengthArray = [0, 0, 0, 0, 0, 0];
      function length(arr1, arr2) {
        if (typeof arr1 === "number" || arr1 instanceof Number) {
          arr2 = arr2 || 0;
          return Math.abs(arr1 - arr2);
        }
        if (!arr2) {
          arr2 = helperLengthArray;
        }
        var i;
        var len = Math.min(arr1.length, arr2.length);
        var addedLength = 0;
        for (i = 0; i < len; i += 1) {
          addedLength += Math.pow(arr2[i] - arr1[i], 2);
        }
        return Math.sqrt(addedLength);
      }
      function normalize(vec) {
        return div(vec, length(vec));
      }
      function rgbToHsl(val2) {
        var r2 = val2[0];
        var g = val2[1];
        var b = val2[2];
        var max = Math.max(r2, g, b);
        var min = Math.min(r2, g, b);
        var h2;
        var s;
        var l2 = (max + min) / 2;
        if (max === min) {
          h2 = 0;
          s = 0;
        } else {
          var d = max - min;
          s = l2 > 0.5 ? d / (2 - max - min) : d / (max + min);
          switch (max) {
            case r2:
              h2 = (g - b) / d + (g < b ? 6 : 0);
              break;
            case g:
              h2 = (b - r2) / d + 2;
              break;
            case b:
              h2 = (r2 - g) / d + 4;
              break;
          }
          h2 /= 6;
        }
        return [h2, s, l2, val2[3]];
      }
      function hue2rgb(p2, q2, t2) {
        if (t2 < 0)
          t2 += 1;
        if (t2 > 1)
          t2 -= 1;
        if (t2 < 1 / 6)
          return p2 + (q2 - p2) * 6 * t2;
        if (t2 < 1 / 2)
          return q2;
        if (t2 < 2 / 3)
          return p2 + (q2 - p2) * (2 / 3 - t2) * 6;
        return p2;
      }
      function hslToRgb(val2) {
        var h2 = val2[0];
        var s = val2[1];
        var l2 = val2[2];
        var r2;
        var g;
        var b;
        if (s === 0) {
          r2 = l2;
          b = l2;
          g = l2;
        } else {
          var q2 = l2 < 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;
          var p2 = 2 * l2 - q2;
          r2 = hue2rgb(p2, q2, h2 + 1 / 3);
          g = hue2rgb(p2, q2, h2);
          b = hue2rgb(p2, q2, h2 - 1 / 3);
        }
        return [r2, g, b, val2[3]];
      }
      function linear(t2, tMin, tMax, value1, value2) {
        if (value1 === void 0 || value2 === void 0) {
          value1 = tMin;
          value2 = tMax;
          tMin = 0;
          tMax = 1;
        }
        if (tMax < tMin) {
          var _tMin = tMax;
          tMax = tMin;
          tMin = _tMin;
        }
        if (t2 <= tMin) {
          return value1;
        }
        if (t2 >= tMax) {
          return value2;
        }
        var perc = tMax === tMin ? 0 : (t2 - tMin) / (tMax - tMin);
        if (!value1.length) {
          return value1 + (value2 - value1) * perc;
        }
        var i;
        var len = value1.length;
        var arr = createTypedArray("float32", len);
        for (i = 0; i < len; i += 1) {
          arr[i] = value1[i] + (value2[i] - value1[i]) * perc;
        }
        return arr;
      }
      function random(min, max) {
        if (max === void 0) {
          if (min === void 0) {
            min = 0;
            max = 1;
          } else {
            max = min;
            min = void 0;
          }
        }
        if (max.length) {
          var i;
          var len = max.length;
          if (!min) {
            min = createTypedArray("float32", len);
          }
          var arr = createTypedArray("float32", len);
          var rnd = BMMath.random();
          for (i = 0; i < len; i += 1) {
            arr[i] = min[i] + rnd * (max[i] - min[i]);
          }
          return arr;
        }
        if (min === void 0) {
          min = 0;
        }
        var rndm = BMMath.random();
        return min + rndm * (max - min);
      }
      function createPath(points, inTangents, outTangents, closed) {
        var i;
        var len = points.length;
        var path = shapePool.newElement();
        path.setPathData(!!closed, len);
        var arrPlaceholder = [0, 0];
        var inVertexPoint;
        var outVertexPoint;
        for (i = 0; i < len; i += 1) {
          inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;
          outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;
          path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);
        }
        return path;
      }
      function initiateExpression(elem, data, property) {
        function noOp(_value) {
          return _value;
        }
        if (!elem.globalData.renderConfig.runExpressions) {
          return noOp;
        }
        var val = data.x;
        var needsVelocity = /velocity(?![\w\d])/.test(val);
        var _needsRandom = val.indexOf("random") !== -1;
        var elemType = elem.data.ty;
        var transform;
        var $bm_transform;
        var content;
        var effect;
        var thisProperty = property;
        thisProperty.valueAtTime = thisProperty.getValueAtTime;
        Object.defineProperty(thisProperty, "value", {
          get: function get() {
            return thisProperty.v;
          }
        });
        elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;
        elem.comp.displayStartTime = 0;
        var inPoint = elem.data.ip / elem.comp.globalData.frameRate;
        var outPoint = elem.data.op / elem.comp.globalData.frameRate;
        var width = elem.data.sw ? elem.data.sw : 0;
        var height = elem.data.sh ? elem.data.sh : 0;
        var name = elem.data.nm;
        var loopIn;
        var loop_in;
        var loopOut;
        var loop_out;
        var smooth;
        var toWorld;
        var fromWorld;
        var fromComp;
        var toComp;
        var fromCompToSurface;
        var position;
        var rotation;
        var anchorPoint;
        var scale;
        var thisLayer;
        var thisComp;
        var mask;
        var valueAtTime;
        var velocityAtTime;
        var scoped_bm_rt;
        var expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0];
        var numKeys = property.kf ? data.k.length : 0;
        var active = !this.data || this.data.hd !== true;
        var wiggle = function wiggle2(freq, amp) {
          var iWiggle;
          var j;
          var lenWiggle = this.pv.length ? this.pv.length : 1;
          var addedAmps = createTypedArray("float32", lenWiggle);
          freq = 5;
          var iterations = Math.floor(time * freq);
          iWiggle = 0;
          j = 0;
          while (iWiggle < iterations) {
            for (j = 0; j < lenWiggle; j += 1) {
              addedAmps[j] += -amp + amp * 2 * BMMath.random();
            }
            iWiggle += 1;
          }
          var periods = time * freq;
          var perc = periods - Math.floor(periods);
          var arr = createTypedArray("float32", lenWiggle);
          if (lenWiggle > 1) {
            for (j = 0; j < lenWiggle; j += 1) {
              arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc;
            }
            return arr;
          }
          return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;
        }.bind(this);
        if (thisProperty.loopIn) {
          loopIn = thisProperty.loopIn.bind(thisProperty);
          loop_in = loopIn;
        }
        if (thisProperty.loopOut) {
          loopOut = thisProperty.loopOut.bind(thisProperty);
          loop_out = loopOut;
        }
        if (thisProperty.smooth) {
          smooth = thisProperty.smooth.bind(thisProperty);
        }
        function loopInDuration(type, duration) {
          return loopIn(type, duration, true);
        }
        function loopOutDuration(type, duration) {
          return loopOut(type, duration, true);
        }
        if (this.getValueAtTime) {
          valueAtTime = this.getValueAtTime.bind(this);
        }
        if (this.getVelocityAtTime) {
          velocityAtTime = this.getVelocityAtTime.bind(this);
        }
        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);
        function lookAt(elem1, elem2) {
          var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];
          var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;
          var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;
          return [yaw, pitch, 0];
        }
        function easeOut(t2, tMin, tMax, val1, val2) {
          return applyEase(easeOutBez, t2, tMin, tMax, val1, val2);
        }
        function easeIn(t2, tMin, tMax, val1, val2) {
          return applyEase(easeInBez, t2, tMin, tMax, val1, val2);
        }
        function ease(t2, tMin, tMax, val1, val2) {
          return applyEase(easeInOutBez, t2, tMin, tMax, val1, val2);
        }
        function applyEase(fn, t2, tMin, tMax, val1, val2) {
          if (val1 === void 0) {
            val1 = tMin;
            val2 = tMax;
          } else {
            t2 = (t2 - tMin) / (tMax - tMin);
          }
          if (t2 > 1) {
            t2 = 1;
          } else if (t2 < 0) {
            t2 = 0;
          }
          var mult = fn(t2);
          if ($bm_isInstanceOfArray(val1)) {
            var iKey;
            var lenKey = val1.length;
            var arr = createTypedArray("float32", lenKey);
            for (iKey = 0; iKey < lenKey; iKey += 1) {
              arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];
            }
            return arr;
          }
          return (val2 - val1) * mult + val1;
        }
        function nearestKey(time2) {
          var iKey;
          var lenKey = data.k.length;
          var index2;
          var keyTime;
          if (!data.k.length || typeof data.k[0] === "number") {
            index2 = 0;
            keyTime = 0;
          } else {
            index2 = -1;
            time2 *= elem.comp.globalData.frameRate;
            if (time2 < data.k[0].t) {
              index2 = 1;
              keyTime = data.k[0].t;
            } else {
              for (iKey = 0; iKey < lenKey - 1; iKey += 1) {
                if (time2 === data.k[iKey].t) {
                  index2 = iKey + 1;
                  keyTime = data.k[iKey].t;
                  break;
                } else if (time2 > data.k[iKey].t && time2 < data.k[iKey + 1].t) {
                  if (time2 - data.k[iKey].t > data.k[iKey + 1].t - time2) {
                    index2 = iKey + 2;
                    keyTime = data.k[iKey + 1].t;
                  } else {
                    index2 = iKey + 1;
                    keyTime = data.k[iKey].t;
                  }
                  break;
                }
              }
              if (index2 === -1) {
                index2 = iKey + 1;
                keyTime = data.k[iKey].t;
              }
            }
          }
          var obKey = {};
          obKey.index = index2;
          obKey.time = keyTime / elem.comp.globalData.frameRate;
          return obKey;
        }
        function key(ind) {
          var obKey;
          var iKey;
          var lenKey;
          if (!data.k.length || typeof data.k[0] === "number") {
            throw new Error("The property has no keyframe at index " + ind);
          }
          ind -= 1;
          obKey = {
            time: data.k[ind].t / elem.comp.globalData.frameRate,
            value: []
          };
          var arr = Object.prototype.hasOwnProperty.call(data.k[ind], "s") ? data.k[ind].s : data.k[ind - 1].e;
          lenKey = arr.length;
          for (iKey = 0; iKey < lenKey; iKey += 1) {
            obKey[iKey] = arr[iKey];
            obKey.value[iKey] = arr[iKey];
          }
          return obKey;
        }
        function framesToTime(fr2, fps) {
          if (!fps) {
            fps = elem.comp.globalData.frameRate;
          }
          return fr2 / fps;
        }
        function timeToFrames(t2, fps) {
          if (!t2 && t2 !== 0) {
            t2 = time;
          }
          if (!fps) {
            fps = elem.comp.globalData.frameRate;
          }
          return t2 * fps;
        }
        function seedRandom(seed) {
          BMMath.seedrandom(randSeed + seed);
        }
        function sourceRectAtTime() {
          return elem.sourceRectAtTime();
        }
        function substring(init, end) {
          if (typeof value === "string") {
            if (end === void 0) {
              return value.substring(init);
            }
            return value.substring(init, end);
          }
          return "";
        }
        function substr(init, end) {
          if (typeof value === "string") {
            if (end === void 0) {
              return value.substr(init);
            }
            return value.substr(init, end);
          }
          return "";
        }
        function posterizeTime(framesPerSecond) {
          time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;
          value = valueAtTime(time);
        }
        var time;
        var velocity;
        var value;
        var text;
        var textIndex;
        var textTotal;
        var selectorValue;
        var index = elem.data.ind;
        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
        var parent;
        var randSeed = Math.floor(Math.random() * 1e6);
        var globalData = elem.globalData;
        function executeExpression(_value) {
          value = _value;
          if (this.frameExpressionId === elem.globalData.frameId && this.propType !== "textSelector") {
            return value;
          }
          if (this.propType === "textSelector") {
            textIndex = this.textIndex;
            textTotal = this.textTotal;
            selectorValue = this.selectorValue;
          }
          if (!thisLayer) {
            text = elem.layerInterface.text;
            thisLayer = elem.layerInterface;
            thisComp = elem.comp.compInterface;
            toWorld = thisLayer.toWorld.bind(thisLayer);
            fromWorld = thisLayer.fromWorld.bind(thisLayer);
            fromComp = thisLayer.fromComp.bind(thisLayer);
            toComp = thisLayer.toComp.bind(thisLayer);
            mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;
            fromCompToSurface = fromComp;
          }
          if (!transform) {
            transform = elem.layerInterface("ADBE Transform Group");
            $bm_transform = transform;
            if (transform) {
              anchorPoint = transform.anchorPoint;
            }
          }
          if (elemType === 4 && !content) {
            content = thisLayer("ADBE Root Vectors Group");
          }
          if (!effect) {
            effect = thisLayer(4);
          }
          hasParent = !!(elem.hierarchy && elem.hierarchy.length);
          if (hasParent && !parent) {
            parent = elem.hierarchy[0].layerInterface;
          }
          time = this.comp.renderedFrame / this.comp.globalData.frameRate;
          if (_needsRandom) {
            seedRandom(randSeed + time);
          }
          if (needsVelocity) {
            velocity = velocityAtTime(time);
          }
          expression_function();
          this.frameExpressionId = elem.globalData.frameId;
          scoped_bm_rt = scoped_bm_rt.propType === propTypes.SHAPE ? scoped_bm_rt.v : scoped_bm_rt;
          return scoped_bm_rt;
        }
        executeExpression.__preventDeadCodeRemoval = [$bm_transform, anchorPoint, time, velocity, inPoint, outPoint, width, height, name, loop_in, loop_out, smooth, toComp, fromCompToSurface, toWorld, fromWorld, mask, position, rotation, scale, thisComp, numKeys, active, wiggle, loopInDuration, loopOutDuration, comp, lookAt, easeOut, easeIn, ease, nearestKey, key, text, textIndex, textTotal, selectorValue, framesToTime, timeToFrames, sourceRectAtTime, substring, substr, posterizeTime, index, globalData];
        return executeExpression;
      }
      ob.initiateExpression = initiateExpression;
      ob.__preventDeadCodeRemoval = [window, document, XMLHttpRequest, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];
      return ob;
    }();
    var expressionHelpers = function() {
      function searchExpressions(elem2, data2, prop) {
        if (data2.x) {
          prop.k = true;
          prop.x = true;
          prop.initiateExpression = ExpressionManager.initiateExpression;
          prop.effectsSequence.push(prop.initiateExpression(elem2, data2, prop).bind(prop));
        }
      }
      function getValueAtTime(frameNum) {
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if (frameNum !== this._cachingAtTime.lastFrame) {
          this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;
          this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);
          this._cachingAtTime.lastFrame = frameNum;
        }
        return this._cachingAtTime.value;
      }
      function getSpeedAtTime(frameNum) {
        var delta = -0.01;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var speed = 0;
        if (v1.length) {
          var i;
          for (i = 0; i < v1.length; i += 1) {
            speed += Math.pow(v2[i] - v1[i], 2);
          }
          speed = Math.sqrt(speed) * 100;
        } else {
          speed = 0;
        }
        return speed;
      }
      function getVelocityAtTime(frameNum) {
        if (this.vel !== void 0) {
          return this.vel;
        }
        var delta = -1e-3;
        var v1 = this.getValueAtTime(frameNum);
        var v2 = this.getValueAtTime(frameNum + delta);
        var velocity2;
        if (v1.length) {
          velocity2 = createTypedArray("float32", v1.length);
          var i;
          for (i = 0; i < v1.length; i += 1) {
            velocity2[i] = (v2[i] - v1[i]) / delta;
          }
        } else {
          velocity2 = (v2 - v1) / delta;
        }
        return velocity2;
      }
      function getStaticValueAtTime() {
        return this.pv;
      }
      function setGroupProperty(propertyGroup) {
        this.propertyGroup = propertyGroup;
      }
      return {
        searchExpressions,
        getSpeedAtTime,
        getVelocityAtTime,
        getValueAtTime,
        getStaticValueAtTime,
        setGroupProperty
      };
    }();
    function addPropertyDecorator() {
      function loopOut2(type, duration, durationFlag) {
        if (!this.k || !this.keyframes) {
          return this.pv;
        }
        type = type ? type.toLowerCase() : "";
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var lastKeyFrame = keyframes[keyframes.length - 1].t;
        if (currentFrame <= lastKeyFrame) {
          return this.pv;
        }
        var cycleDuration;
        var firstKeyFrame;
        if (!durationFlag) {
          if (!duration || duration > keyframes.length - 1) {
            duration = keyframes.length - 1;
          }
          firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;
          cycleDuration = lastKeyFrame - firstKeyFrame;
        } else {
          if (!duration) {
            cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);
          } else {
            cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);
          }
          firstKeyFrame = lastKeyFrame - cycleDuration;
        }
        var i;
        var len;
        var ret;
        if (type === "pingpong") {
          var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);
          if (iterations % 2 !== 0) {
            return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
          }
        } else if (type === "offset") {
          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
          var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
          var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);
          if (this.pv.length) {
            ret = new Array(initV.length);
            len = ret.length;
            for (i = 0; i < len; i += 1) {
              ret[i] = (endV[i] - initV[i]) * repeats + current[i];
            }
            return ret;
          }
          return (endV - initV) * repeats + current;
        } else if (type === "continue") {
          var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
          var nextLastValue = this.getValueAtTime((lastKeyFrame - 1e-3) / this.comp.globalData.frameRate, 0);
          if (this.pv.length) {
            ret = new Array(lastValue.length);
            len = ret.length;
            for (i = 0; i < len; i += 1) {
              ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 5e-4;
            }
            return ret;
          }
          return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 1e-3);
        }
        return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
      }
      function loopIn2(type, duration, durationFlag) {
        if (!this.k) {
          return this.pv;
        }
        type = type ? type.toLowerCase() : "";
        var currentFrame = this.comp.renderedFrame;
        var keyframes = this.keyframes;
        var firstKeyFrame = keyframes[0].t;
        if (currentFrame >= firstKeyFrame) {
          return this.pv;
        }
        var cycleDuration;
        var lastKeyFrame;
        if (!durationFlag) {
          if (!duration || duration > keyframes.length - 1) {
            duration = keyframes.length - 1;
          }
          lastKeyFrame = keyframes[duration].t;
          cycleDuration = lastKeyFrame - firstKeyFrame;
        } else {
          if (!duration) {
            cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);
          } else {
            cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);
          }
          lastKeyFrame = firstKeyFrame + cycleDuration;
        }
        var i;
        var len;
        var ret;
        if (type === "pingpong") {
          var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);
          if (iterations % 2 === 0) {
            return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
          }
        } else if (type === "offset") {
          var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
          var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);
          var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);
          var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;
          if (this.pv.length) {
            ret = new Array(initV.length);
            len = ret.length;
            for (i = 0; i < len; i += 1) {
              ret[i] = current[i] - (endV[i] - initV[i]) * repeats;
            }
            return ret;
          }
          return current - (endV - initV) * repeats;
        } else if (type === "continue") {
          var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);
          var nextFirstValue = this.getValueAtTime((firstKeyFrame + 1e-3) / this.comp.globalData.frameRate, 0);
          if (this.pv.length) {
            ret = new Array(firstValue.length);
            len = ret.length;
            for (i = 0; i < len; i += 1) {
              ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 1e-3;
            }
            return ret;
          }
          return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 1e-3;
        }
        return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0);
      }
      function smooth2(width2, samples) {
        if (!this.k) {
          return this.pv;
        }
        width2 = (width2 || 0.4) * 0.5;
        samples = Math.floor(samples || 5);
        if (samples <= 1) {
          return this.pv;
        }
        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;
        var initFrame = currentTime - width2;
        var endFrame = currentTime + width2;
        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
        var i = 0;
        var j = 0;
        var value2;
        if (this.pv.length) {
          value2 = createTypedArray("float32", this.pv.length);
        } else {
          value2 = 0;
        }
        var sampleValue;
        while (i < samples) {
          sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);
          if (this.pv.length) {
            for (j = 0; j < this.pv.length; j += 1) {
              value2[j] += sampleValue[j];
            }
          } else {
            value2 += sampleValue;
          }
          i += 1;
        }
        if (this.pv.length) {
          for (j = 0; j < this.pv.length; j += 1) {
            value2[j] /= samples;
          }
        } else {
          value2 /= samples;
        }
        return value2;
      }
      function getTransformValueAtTime(time2) {
        if (!this._transformCachingAtTime) {
          this._transformCachingAtTime = {
            v: new Matrix()
          };
        }
        var matrix = this._transformCachingAtTime.v;
        matrix.cloneFromProps(this.pre.props);
        if (this.appliedTransformations < 1) {
          var anchor = this.a.getValueAtTime(time2);
          matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);
        }
        if (this.appliedTransformations < 2) {
          var scale2 = this.s.getValueAtTime(time2);
          matrix.scale(scale2[0] * this.s.mult, scale2[1] * this.s.mult, scale2[2] * this.s.mult);
        }
        if (this.sk && this.appliedTransformations < 3) {
          var skew = this.sk.getValueAtTime(time2);
          var skewAxis = this.sa.getValueAtTime(time2);
          matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);
        }
        if (this.r && this.appliedTransformations < 4) {
          var rotation2 = this.r.getValueAtTime(time2);
          matrix.rotate(-rotation2 * this.r.mult);
        } else if (!this.r && this.appliedTransformations < 4) {
          var rotationZ = this.rz.getValueAtTime(time2);
          var rotationY = this.ry.getValueAtTime(time2);
          var rotationX = this.rx.getValueAtTime(time2);
          var orientation = this.or.getValueAtTime(time2);
          matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);
        }
        if (this.data.p && this.data.p.s) {
          var positionX = this.px.getValueAtTime(time2);
          var positionY = this.py.getValueAtTime(time2);
          if (this.data.p.z) {
            var positionZ = this.pz.getValueAtTime(time2);
            matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);
          } else {
            matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);
          }
        } else {
          var position2 = this.p.getValueAtTime(time2);
          matrix.translate(position2[0] * this.p.mult, position2[1] * this.p.mult, -position2[2] * this.p.mult);
        }
        return matrix;
      }
      function getTransformStaticValueAtTime() {
        return this.v.clone(new Matrix());
      }
      var getTransformProperty = TransformPropertyFactory.getTransformProperty;
      TransformPropertyFactory.getTransformProperty = function(elem2, data2, container) {
        var prop = getTransformProperty(elem2, data2, container);
        if (prop.dynamicProperties.length) {
          prop.getValueAtTime = getTransformValueAtTime.bind(prop);
        } else {
          prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        return prop;
      };
      var propertyGetProp = PropertyFactory.getProp;
      PropertyFactory.getProp = function(elem2, data2, type, mult, container) {
        var prop = propertyGetProp(elem2, data2, type, mult, container);
        if (prop.kf) {
          prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);
        } else {
          prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);
        }
        prop.setGroupProperty = expressionHelpers.setGroupProperty;
        prop.loopOut = loopOut2;
        prop.loopIn = loopIn2;
        prop.smooth = smooth2;
        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);
        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);
        prop.numKeys = data2.a === 1 ? data2.k.length : 0;
        prop.propertyIndex = data2.ix;
        var value2 = 0;
        if (type !== 0) {
          value2 = createTypedArray("float32", data2.a === 1 ? data2.k[0].s.length : data2.k.length);
        }
        prop._cachingAtTime = {
          lastFrame: initialDefaultFrame,
          lastIndex: 0,
          value: value2
        };
        expressionHelpers.searchExpressions(elem2, data2, prop);
        if (prop.k) {
          container.addDynamicProperty(prop);
        }
        return prop;
      };
      function getShapeValueAtTime(frameNum) {
        if (!this._cachingAtTime) {
          this._cachingAtTime = {
            shapeValue: shapePool.clone(this.pv),
            lastIndex: 0,
            lastTime: initialDefaultFrame
          };
        }
        frameNum *= this.elem.globalData.frameRate;
        frameNum -= this.offsetTime;
        if (frameNum !== this._cachingAtTime.lastTime) {
          this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;
          this._cachingAtTime.lastTime = frameNum;
          this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);
        }
        return this._cachingAtTime.shapeValue;
      }
      var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
      var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();
      function ShapeExpressions() {
      }
      ShapeExpressions.prototype = {
        vertices: function vertices(prop, time2) {
          if (this.k) {
            this.getValue();
          }
          var shapePath = this.v;
          if (time2 !== void 0) {
            shapePath = this.getValueAtTime(time2, 0);
          }
          var i;
          var len = shapePath._length;
          var vertices2 = shapePath[prop];
          var points = shapePath.v;
          var arr = createSizedArray(len);
          for (i = 0; i < len; i += 1) {
            if (prop === "i" || prop === "o") {
              arr[i] = [vertices2[i][0] - points[i][0], vertices2[i][1] - points[i][1]];
            } else {
              arr[i] = [vertices2[i][0], vertices2[i][1]];
            }
          }
          return arr;
        },
        points: function points(time2) {
          return this.vertices("v", time2);
        },
        inTangents: function inTangents(time2) {
          return this.vertices("i", time2);
        },
        outTangents: function outTangents(time2) {
          return this.vertices("o", time2);
        },
        isClosed: function isClosed() {
          return this.v.c;
        },
        pointOnPath: function pointOnPath(perc, time2) {
          var shapePath = this.v;
          if (time2 !== void 0) {
            shapePath = this.getValueAtTime(time2, 0);
          }
          if (!this._segmentsLength) {
            this._segmentsLength = bez.getSegmentsLength(shapePath);
          }
          var segmentsLength = this._segmentsLength;
          var lengths = segmentsLength.lengths;
          var lengthPos = segmentsLength.totalLength * perc;
          var i = 0;
          var len = lengths.length;
          var accumulatedLength = 0;
          var pt;
          while (i < len) {
            if (accumulatedLength + lengths[i].addedLength > lengthPos) {
              var initIndex = i;
              var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;
              var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;
              pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);
              break;
            } else {
              accumulatedLength += lengths[i].addedLength;
            }
            i += 1;
          }
          if (!pt) {
            pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];
          }
          return pt;
        },
        vectorOnPath: function vectorOnPath(perc, time2, vectorType) {
          if (perc == 1) {
            perc = this.v.c;
          } else if (perc == 0) {
            perc = 0.999;
          }
          var pt1 = this.pointOnPath(perc, time2);
          var pt2 = this.pointOnPath(perc + 1e-3, time2);
          var xLength = pt2[0] - pt1[0];
          var yLength = pt2[1] - pt1[1];
          var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));
          if (magnitude === 0) {
            return [0, 0];
          }
          var unitVector = vectorType === "tangent" ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];
          return unitVector;
        },
        tangentOnPath: function tangentOnPath(perc, time2) {
          return this.vectorOnPath(perc, time2, "tangent");
        },
        normalOnPath: function normalOnPath(perc, time2) {
          return this.vectorOnPath(perc, time2, "normal");
        },
        setGroupProperty: expressionHelpers.setGroupProperty,
        getValueAtTime: expressionHelpers.getStaticValueAtTime
      };
      extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);
      extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);
      KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
      KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;
      var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;
      ShapePropertyFactory.getShapeProp = function(elem2, data2, type, arr, trims) {
        var prop = propertyGetShapeProp(elem2, data2, type, arr, trims);
        prop.propertyIndex = data2.ix;
        prop.lock = false;
        if (type === 3) {
          expressionHelpers.searchExpressions(elem2, data2.pt, prop);
        } else if (type === 4) {
          expressionHelpers.searchExpressions(elem2, data2.ks, prop);
        }
        if (prop.k) {
          elem2.addDynamicProperty(prop);
        }
        return prop;
      };
    }
    function initialize$1() {
      addPropertyDecorator();
    }
    function addDecorator() {
      function searchExpressions() {
        if (this.data.d.x) {
          this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);
          this.addEffect(this.getExpressionValue.bind(this));
          return true;
        }
        return null;
      }
      TextProperty.prototype.getExpressionValue = function(currentValue, text2) {
        var newValue = this.calculateExpression(text2);
        if (currentValue.t !== newValue) {
          var newData = {};
          this.copyData(newData, currentValue);
          newData.t = newValue.toString();
          newData.__complete = false;
          return newData;
        }
        return currentValue;
      };
      TextProperty.prototype.searchProperty = function() {
        var isKeyframed = this.searchKeyframes();
        var hasExpressions = this.searchExpressions();
        this.kf = isKeyframed || hasExpressions;
        return this.kf;
      };
      TextProperty.prototype.searchExpressions = searchExpressions;
    }
    function initialize() {
      addDecorator();
    }
    function SVGComposableEffect() {
    }
    SVGComposableEffect.prototype = {
      createMergeNode: function createMergeNode(resultId, ins) {
        var feMerge = createNS("feMerge");
        feMerge.setAttribute("result", resultId);
        var feMergeNode;
        var i;
        for (i = 0; i < ins.length; i += 1) {
          feMergeNode = createNS("feMergeNode");
          feMergeNode.setAttribute("in", ins[i]);
          feMerge.appendChild(feMergeNode);
          feMerge.appendChild(feMergeNode);
        }
        return feMerge;
      }
    };
    var linearFilterValue = "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
    function SVGTintFilter(filter, filterManager, elem2, id2, source) {
      this.filterManager = filterManager;
      var feColorMatrix = createNS("feColorMatrix");
      feColorMatrix.setAttribute("type", "matrix");
      feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
      feColorMatrix.setAttribute("values", linearFilterValue + " 1 0");
      this.linearFilter = feColorMatrix;
      feColorMatrix.setAttribute("result", id2 + "_tint_1");
      filter.appendChild(feColorMatrix);
      feColorMatrix = createNS("feColorMatrix");
      feColorMatrix.setAttribute("type", "matrix");
      feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
      feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
      feColorMatrix.setAttribute("result", id2 + "_tint_2");
      filter.appendChild(feColorMatrix);
      this.matrixFilter = feColorMatrix;
      var feMerge = this.createMergeNode(id2, [source, id2 + "_tint_1", id2 + "_tint_2"]);
      filter.appendChild(feMerge);
    }
    extendPrototype([SVGComposableEffect], SVGTintFilter);
    SVGTintFilter.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        var colorBlack = this.filterManager.effectElements[0].p.v;
        var colorWhite = this.filterManager.effectElements[1].p.v;
        var opacity = this.filterManager.effectElements[2].p.v / 100;
        this.linearFilter.setAttribute("values", linearFilterValue + " " + opacity + " 0");
        this.matrixFilter.setAttribute("values", colorWhite[0] - colorBlack[0] + " 0 0 0 " + colorBlack[0] + " " + (colorWhite[1] - colorBlack[1]) + " 0 0 0 " + colorBlack[1] + " " + (colorWhite[2] - colorBlack[2]) + " 0 0 0 " + colorBlack[2] + " 0 0 0 1 0");
      }
    };
    function SVGFillFilter(filter, filterManager, elem2, id2) {
      this.filterManager = filterManager;
      var feColorMatrix = createNS("feColorMatrix");
      feColorMatrix.setAttribute("type", "matrix");
      feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
      feColorMatrix.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0");
      feColorMatrix.setAttribute("result", id2);
      filter.appendChild(feColorMatrix);
      this.matrixFilter = feColorMatrix;
    }
    SVGFillFilter.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        var color = this.filterManager.effectElements[2].p.v;
        var opacity = this.filterManager.effectElements[6].p.v;
        this.matrixFilter.setAttribute("values", "0 0 0 0 " + color[0] + " 0 0 0 0 " + color[1] + " 0 0 0 0 " + color[2] + " 0 0 0 " + opacity + " 0");
      }
    };
    function SVGStrokeEffect(fil, filterManager, elem2) {
      this.initialized = false;
      this.filterManager = filterManager;
      this.elem = elem2;
      this.paths = [];
    }
    SVGStrokeEffect.prototype.initialize = function() {
      var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
      var path;
      var groupPath;
      var i;
      var len;
      if (this.filterManager.effectElements[1].p.v === 1) {
        len = this.elem.maskManager.masksProperties.length;
        i = 0;
      } else {
        i = this.filterManager.effectElements[0].p.v - 1;
        len = i + 1;
      }
      groupPath = createNS("g");
      groupPath.setAttribute("fill", "none");
      groupPath.setAttribute("stroke-linecap", "round");
      groupPath.setAttribute("stroke-dashoffset", 1);
      for (i; i < len; i += 1) {
        path = createNS("path");
        groupPath.appendChild(path);
        this.paths.push({
          p: path,
          m: i
        });
      }
      if (this.filterManager.effectElements[10].p.v === 3) {
        var mask2 = createNS("mask");
        var id2 = createElementID();
        mask2.setAttribute("id", id2);
        mask2.setAttribute("mask-type", "alpha");
        mask2.appendChild(groupPath);
        this.elem.globalData.defs.appendChild(mask2);
        var g = createNS("g");
        g.setAttribute("mask", "url(" + getLocationHref() + "#" + id2 + ")");
        while (elemChildren[0]) {
          g.appendChild(elemChildren[0]);
        }
        this.elem.layerElement.appendChild(g);
        this.masker = mask2;
        groupPath.setAttribute("stroke", "#fff");
      } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
        if (this.filterManager.effectElements[10].p.v === 2) {
          elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;
          while (elemChildren.length) {
            this.elem.layerElement.removeChild(elemChildren[0]);
          }
        }
        this.elem.layerElement.appendChild(groupPath);
        this.elem.layerElement.removeAttribute("mask");
        groupPath.setAttribute("stroke", "#fff");
      }
      this.initialized = true;
      this.pathMasker = groupPath;
    };
    SVGStrokeEffect.prototype.renderFrame = function(forceRender) {
      if (!this.initialized) {
        this.initialize();
      }
      var i;
      var len = this.paths.length;
      var mask2;
      var path;
      for (i = 0; i < len; i += 1) {
        if (this.paths[i].m !== -1) {
          mask2 = this.elem.maskManager.viewData[this.paths[i].m];
          path = this.paths[i].p;
          if (forceRender || this.filterManager._mdf || mask2.prop._mdf) {
            path.setAttribute("d", mask2.lastPath);
          }
          if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask2.prop._mdf) {
            var dasharrayValue;
            if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {
              var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
              var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;
              var l2 = path.getTotalLength();
              dasharrayValue = "0 0 0 " + l2 * s + " ";
              var lineLength = l2 * (e - s);
              var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
              var units = Math.floor(lineLength / segment);
              var j;
              for (j = 0; j < units; j += 1) {
                dasharrayValue += "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + " ";
              }
              dasharrayValue += "0 " + l2 * 10 + " 0 0";
            } else {
              dasharrayValue = "1 " + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;
            }
            path.setAttribute("stroke-dasharray", dasharrayValue);
          }
        }
      }
      if (forceRender || this.filterManager.effectElements[4].p._mdf) {
        this.pathMasker.setAttribute("stroke-width", this.filterManager.effectElements[4].p.v * 2);
      }
      if (forceRender || this.filterManager.effectElements[6].p._mdf) {
        this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v);
      }
      if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {
        if (forceRender || this.filterManager.effectElements[3].p._mdf) {
          var color = this.filterManager.effectElements[3].p.v;
          this.pathMasker.setAttribute("stroke", "rgb(" + bmFloor(color[0] * 255) + "," + bmFloor(color[1] * 255) + "," + bmFloor(color[2] * 255) + ")");
        }
      }
    };
    function SVGTritoneFilter(filter, filterManager, elem2, id2) {
      this.filterManager = filterManager;
      var feColorMatrix = createNS("feColorMatrix");
      feColorMatrix.setAttribute("type", "matrix");
      feColorMatrix.setAttribute("color-interpolation-filters", "linearRGB");
      feColorMatrix.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0");
      filter.appendChild(feColorMatrix);
      var feComponentTransfer = createNS("feComponentTransfer");
      feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
      feComponentTransfer.setAttribute("result", id2);
      this.matrixFilter = feComponentTransfer;
      var feFuncR = createNS("feFuncR");
      feFuncR.setAttribute("type", "table");
      feComponentTransfer.appendChild(feFuncR);
      this.feFuncR = feFuncR;
      var feFuncG = createNS("feFuncG");
      feFuncG.setAttribute("type", "table");
      feComponentTransfer.appendChild(feFuncG);
      this.feFuncG = feFuncG;
      var feFuncB = createNS("feFuncB");
      feFuncB.setAttribute("type", "table");
      feComponentTransfer.appendChild(feFuncB);
      this.feFuncB = feFuncB;
      filter.appendChild(feComponentTransfer);
    }
    SVGTritoneFilter.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        var color1 = this.filterManager.effectElements[0].p.v;
        var color2 = this.filterManager.effectElements[1].p.v;
        var color3 = this.filterManager.effectElements[2].p.v;
        var tableR = color3[0] + " " + color2[0] + " " + color1[0];
        var tableG = color3[1] + " " + color2[1] + " " + color1[1];
        var tableB = color3[2] + " " + color2[2] + " " + color1[2];
        this.feFuncR.setAttribute("tableValues", tableR);
        this.feFuncG.setAttribute("tableValues", tableG);
        this.feFuncB.setAttribute("tableValues", tableB);
      }
    };
    function SVGProLevelsFilter(filter, filterManager, elem2, id2) {
      this.filterManager = filterManager;
      var effectElements = this.filterManager.effectElements;
      var feComponentTransfer = createNS("feComponentTransfer");
      if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {
        this.feFuncR = this.createFeFunc("feFuncR", feComponentTransfer);
      }
      if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {
        this.feFuncG = this.createFeFunc("feFuncG", feComponentTransfer);
      }
      if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {
        this.feFuncB = this.createFeFunc("feFuncB", feComponentTransfer);
      }
      if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {
        this.feFuncA = this.createFeFunc("feFuncA", feComponentTransfer);
      }
      if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {
        feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
        filter.appendChild(feComponentTransfer);
      }
      if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {
        feComponentTransfer = createNS("feComponentTransfer");
        feComponentTransfer.setAttribute("color-interpolation-filters", "sRGB");
        feComponentTransfer.setAttribute("result", id2);
        filter.appendChild(feComponentTransfer);
        this.feFuncRComposed = this.createFeFunc("feFuncR", feComponentTransfer);
        this.feFuncGComposed = this.createFeFunc("feFuncG", feComponentTransfer);
        this.feFuncBComposed = this.createFeFunc("feFuncB", feComponentTransfer);
      }
    }
    SVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {
      var feFunc = createNS(type);
      feFunc.setAttribute("type", "table");
      feComponentTransfer.appendChild(feFunc);
      return feFunc;
    };
    SVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {
      var cnt = 0;
      var segments = 256;
      var perc;
      var min = Math.min(inputBlack, inputWhite);
      var max = Math.max(inputBlack, inputWhite);
      var table = Array.call(null, {
        length: segments
      });
      var colorValue;
      var pos = 0;
      var outputDelta = outputWhite - outputBlack;
      var inputDelta = inputWhite - inputBlack;
      while (cnt <= 256) {
        perc = cnt / 256;
        if (perc <= min) {
          colorValue = inputDelta < 0 ? outputWhite : outputBlack;
        } else if (perc >= max) {
          colorValue = inputDelta < 0 ? outputBlack : outputWhite;
        } else {
          colorValue = outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
        }
        table[pos] = colorValue;
        pos += 1;
        cnt += 256 / (segments - 1);
      }
      return table.join(" ");
    };
    SVGProLevelsFilter.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        var val2;
        var effectElements = this.filterManager.effectElements;
        if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {
          val2 = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);
          this.feFuncRComposed.setAttribute("tableValues", val2);
          this.feFuncGComposed.setAttribute("tableValues", val2);
          this.feFuncBComposed.setAttribute("tableValues", val2);
        }
        if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {
          val2 = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);
          this.feFuncR.setAttribute("tableValues", val2);
        }
        if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {
          val2 = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);
          this.feFuncG.setAttribute("tableValues", val2);
        }
        if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {
          val2 = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);
          this.feFuncB.setAttribute("tableValues", val2);
        }
        if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {
          val2 = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);
          this.feFuncA.setAttribute("tableValues", val2);
        }
      }
    };
    function SVGDropShadowEffect(filter, filterManager, elem2, id2, source) {
      var globalFilterSize = filterManager.container.globalData.renderConfig.filterSize;
      var filterSize = filterManager.data.fs || globalFilterSize;
      filter.setAttribute("x", filterSize.x || globalFilterSize.x);
      filter.setAttribute("y", filterSize.y || globalFilterSize.y);
      filter.setAttribute("width", filterSize.width || globalFilterSize.width);
      filter.setAttribute("height", filterSize.height || globalFilterSize.height);
      this.filterManager = filterManager;
      var feGaussianBlur = createNS("feGaussianBlur");
      feGaussianBlur.setAttribute("in", "SourceAlpha");
      feGaussianBlur.setAttribute("result", id2 + "_drop_shadow_1");
      feGaussianBlur.setAttribute("stdDeviation", "0");
      this.feGaussianBlur = feGaussianBlur;
      filter.appendChild(feGaussianBlur);
      var feOffset = createNS("feOffset");
      feOffset.setAttribute("dx", "25");
      feOffset.setAttribute("dy", "0");
      feOffset.setAttribute("in", id2 + "_drop_shadow_1");
      feOffset.setAttribute("result", id2 + "_drop_shadow_2");
      this.feOffset = feOffset;
      filter.appendChild(feOffset);
      var feFlood = createNS("feFlood");
      feFlood.setAttribute("flood-color", "#00ff00");
      feFlood.setAttribute("flood-opacity", "1");
      feFlood.setAttribute("result", id2 + "_drop_shadow_3");
      this.feFlood = feFlood;
      filter.appendChild(feFlood);
      var feComposite = createNS("feComposite");
      feComposite.setAttribute("in", id2 + "_drop_shadow_3");
      feComposite.setAttribute("in2", id2 + "_drop_shadow_2");
      feComposite.setAttribute("operator", "in");
      feComposite.setAttribute("result", id2 + "_drop_shadow_4");
      filter.appendChild(feComposite);
      var feMerge = this.createMergeNode(id2, [id2 + "_drop_shadow_4", source]);
      filter.appendChild(feMerge);
    }
    extendPrototype([SVGComposableEffect], SVGDropShadowEffect);
    SVGDropShadowEffect.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        if (forceRender || this.filterManager.effectElements[4].p._mdf) {
          this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4);
        }
        if (forceRender || this.filterManager.effectElements[0].p._mdf) {
          var col = this.filterManager.effectElements[0].p.v;
          this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));
        }
        if (forceRender || this.filterManager.effectElements[1].p._mdf) {
          this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255);
        }
        if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {
          var distance = this.filterManager.effectElements[3].p.v;
          var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;
          var x2 = distance * Math.cos(angle);
          var y2 = distance * Math.sin(angle);
          this.feOffset.setAttribute("dx", x2);
          this.feOffset.setAttribute("dy", y2);
        }
      }
    };
    var _svgMatteSymbols = [];
    function SVGMatte3Effect(filterElem, filterManager, elem2) {
      this.initialized = false;
      this.filterManager = filterManager;
      this.filterElem = filterElem;
      this.elem = elem2;
      elem2.matteElement = createNS("g");
      elem2.matteElement.appendChild(elem2.layerElement);
      elem2.matteElement.appendChild(elem2.transformedElement);
      elem2.baseElement = elem2.matteElement;
    }
    SVGMatte3Effect.prototype.findSymbol = function(mask2) {
      var i = 0;
      var len = _svgMatteSymbols.length;
      while (i < len) {
        if (_svgMatteSymbols[i] === mask2) {
          return _svgMatteSymbols[i];
        }
        i += 1;
      }
      return null;
    };
    SVGMatte3Effect.prototype.replaceInParent = function(mask2, symbolId) {
      var parentNode = mask2.layerElement.parentNode;
      if (!parentNode) {
        return;
      }
      var children = parentNode.children;
      var i = 0;
      var len = children.length;
      while (i < len) {
        if (children[i] === mask2.layerElement) {
          break;
        }
        i += 1;
      }
      var nextChild;
      if (i <= len - 2) {
        nextChild = children[i + 1];
      }
      var useElem = createNS("use");
      useElem.setAttribute("href", "#" + symbolId);
      if (nextChild) {
        parentNode.insertBefore(useElem, nextChild);
      } else {
        parentNode.appendChild(useElem);
      }
    };
    SVGMatte3Effect.prototype.setElementAsMask = function(elem2, mask2) {
      if (!this.findSymbol(mask2)) {
        var symbolId = createElementID();
        var masker = createNS("mask");
        masker.setAttribute("id", mask2.layerId);
        masker.setAttribute("mask-type", "alpha");
        _svgMatteSymbols.push(mask2);
        var defs = elem2.globalData.defs;
        defs.appendChild(masker);
        var symbol = createNS("symbol");
        symbol.setAttribute("id", symbolId);
        this.replaceInParent(mask2, symbolId);
        symbol.appendChild(mask2.layerElement);
        defs.appendChild(symbol);
        var useElem = createNS("use");
        useElem.setAttribute("href", "#" + symbolId);
        masker.appendChild(useElem);
        mask2.data.hd = false;
        mask2.show();
      }
      elem2.setMatte(mask2.layerId);
    };
    SVGMatte3Effect.prototype.initialize = function() {
      var ind = this.filterManager.effectElements[0].p.v;
      var elements = this.elem.comp.elements;
      var i = 0;
      var len = elements.length;
      while (i < len) {
        if (elements[i] && elements[i].data.ind === ind) {
          this.setElementAsMask(this.elem, elements[i]);
        }
        i += 1;
      }
      this.initialized = true;
    };
    SVGMatte3Effect.prototype.renderFrame = function() {
      if (!this.initialized) {
        this.initialize();
      }
    };
    function SVGGaussianBlurEffect(filter, filterManager, elem2, id2) {
      filter.setAttribute("x", "-100%");
      filter.setAttribute("y", "-100%");
      filter.setAttribute("width", "300%");
      filter.setAttribute("height", "300%");
      this.filterManager = filterManager;
      var feGaussianBlur = createNS("feGaussianBlur");
      feGaussianBlur.setAttribute("result", id2);
      filter.appendChild(feGaussianBlur);
      this.feGaussianBlur = feGaussianBlur;
    }
    SVGGaussianBlurEffect.prototype.renderFrame = function(forceRender) {
      if (forceRender || this.filterManager._mdf) {
        var kBlurrinessToSigma = 0.3;
        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;
        var dimensions = this.filterManager.effectElements[1].p.v;
        var sigmaX = dimensions == 3 ? 0 : sigma;
        var sigmaY = dimensions == 2 ? 0 : sigma;
        this.feGaussianBlur.setAttribute("stdDeviation", sigmaX + " " + sigmaY);
        var edgeMode = this.filterManager.effectElements[2].p.v == 1 ? "wrap" : "duplicate";
        this.feGaussianBlur.setAttribute("edgeMode", edgeMode);
      }
    };
    registerRenderer("canvas", CanvasRenderer);
    registerRenderer("html", HybridRenderer);
    registerRenderer("svg", SVGRenderer);
    ShapeModifiers.registerModifier("tm", TrimModifier);
    ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier);
    ShapeModifiers.registerModifier("rp", RepeaterModifier);
    ShapeModifiers.registerModifier("rd", RoundCornersModifier);
    ShapeModifiers.registerModifier("zz", ZigZagModifier);
    ShapeModifiers.registerModifier("op", OffsetPathModifier);
    setExpressionsPlugin(Expressions);
    setExpressionInterfaces(getInterface);
    initialize$1();
    initialize();
    registerEffect(20, SVGTintFilter, true);
    registerEffect(21, SVGFillFilter, true);
    registerEffect(22, SVGStrokeEffect, false);
    registerEffect(23, SVGTritoneFilter, true);
    registerEffect(24, SVGProLevelsFilter, true);
    registerEffect(25, SVGDropShadowEffect, true);
    registerEffect(28, SVGMatte3Effect, false);
    registerEffect(29, SVGGaussianBlurEffect, true);
    return lottie;
  });
})(lottie$1, lottieExports);
const lottie = lottieExports;
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i)
          return;
        _n = false;
      } else
        for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
          ;
    } catch (err) {
      _d = true, _e = err;
    } finally {
      try {
        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r))
          return;
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _defineProperty(obj, key2, value2) {
  key2 = _toPropertyKey(key2);
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value: value2,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value2;
  }
  return obj;
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
function _objectWithoutProperties$1(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose$1(source, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n2 = Object.prototype.toString.call(o).slice(8, -1);
  if (n2 === "Object" && o.constructor)
    n2 = o.constructor.name;
  if (n2 === "Map" || n2 === "Set")
    return Array.from(o);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key2 = _toPrimitive(arg, "string");
  return typeof key2 === "symbol" ? key2 : String(key2);
}
var _excluded$1 = ["animationData", "loop", "autoplay", "initialSegment", "onComplete", "onLoopComplete", "onEnterFrame", "onSegmentStart", "onConfigReady", "onDataReady", "onDataFailed", "onLoadedImages", "onDOMLoaded", "onDestroy", "lottieRef", "renderer", "name", "assetsPath", "rendererSettings"];
var useLottie = function useLottie2(props, style) {
  var animationData = props.animationData, loop = props.loop, autoplay = props.autoplay, initialSegment = props.initialSegment, onComplete = props.onComplete, onLoopComplete = props.onLoopComplete, onEnterFrame = props.onEnterFrame, onSegmentStart = props.onSegmentStart, onConfigReady = props.onConfigReady, onDataReady = props.onDataReady, onDataFailed = props.onDataFailed, onLoadedImages = props.onLoadedImages, onDOMLoaded = props.onDOMLoaded, onDestroy = props.onDestroy;
  props.lottieRef;
  props.renderer;
  props.name;
  props.assetsPath;
  props.rendererSettings;
  var rest = _objectWithoutProperties$1(props, _excluded$1);
  var _useState = reactExports.useState(false), _useState2 = _slicedToArray(_useState, 2), animationLoaded = _useState2[0], setAnimationLoaded = _useState2[1];
  var animationInstanceRef = reactExports.useRef();
  var animationContainer = reactExports.useRef(null);
  var play = function play2() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();
  };
  var stop = function stop2() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();
  };
  var pause = function pause2() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();
  };
  var setSpeed = function setSpeed2(speed) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);
  };
  var goToAndPlay = function goToAndPlay2(value2, isFrame) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value2, isFrame);
  };
  var goToAndStop = function goToAndStop2(value2, isFrame) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value2, isFrame);
  };
  var setDirection = function setDirection2(direction) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);
  };
  var playSegments = function playSegments2(segments, forceFlag) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);
  };
  var setSubframe = function setSubframe2(useSubFrames) {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);
  };
  var getDuration = function getDuration2(inFrames) {
    var _a;
    return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);
  };
  var destroy = function destroy2() {
    var _a;
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
    animationInstanceRef.current = void 0;
  };
  var loadAnimation2 = function loadAnimation3() {
    var forcedConfigs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var _a;
    if (!animationContainer.current) {
      return;
    }
    (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();
    var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {
      container: animationContainer.current
    });
    animationInstanceRef.current = lottie.loadAnimation(config);
    setAnimationLoaded(!!animationInstanceRef.current);
    return function() {
      var _a2;
      (_a2 = animationInstanceRef.current) === null || _a2 === void 0 ? void 0 : _a2.destroy();
      animationInstanceRef.current = void 0;
    };
  };
  reactExports.useEffect(function() {
    var onUnmount = loadAnimation2();
    return function() {
      return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();
    };
  }, [animationData, loop]);
  reactExports.useEffect(function() {
    if (!animationInstanceRef.current) {
      return;
    }
    animationInstanceRef.current.autoplay = !!autoplay;
  }, [autoplay]);
  reactExports.useEffect(function() {
    if (!animationInstanceRef.current) {
      return;
    }
    if (!initialSegment) {
      animationInstanceRef.current.resetSegments(true);
      return;
    }
    if (!Array.isArray(initialSegment) || !initialSegment.length) {
      return;
    }
    if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {
      animationInstanceRef.current.currentRawFrame = initialSegment[0];
    }
    animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);
  }, [initialSegment]);
  reactExports.useEffect(function() {
    var partialListeners = [{
      name: "complete",
      handler: onComplete
    }, {
      name: "loopComplete",
      handler: onLoopComplete
    }, {
      name: "enterFrame",
      handler: onEnterFrame
    }, {
      name: "segmentStart",
      handler: onSegmentStart
    }, {
      name: "config_ready",
      handler: onConfigReady
    }, {
      name: "data_ready",
      handler: onDataReady
    }, {
      name: "data_failed",
      handler: onDataFailed
    }, {
      name: "loaded_images",
      handler: onLoadedImages
    }, {
      name: "DOMLoaded",
      handler: onDOMLoaded
    }, {
      name: "destroy",
      handler: onDestroy
    }];
    var listeners = partialListeners.filter(function(listener) {
      return listener.handler != null;
    });
    if (!listeners.length) {
      return;
    }
    var deregisterList = listeners.map(
      /**
       * Handle the process of adding an event listener
       * @param {Listener} listener
       * @return {Function} Function that deregister the listener
       */
      function(listener) {
        var _a;
        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);
        return function() {
          var _a2;
          (_a2 = animationInstanceRef.current) === null || _a2 === void 0 ? void 0 : _a2.removeEventListener(listener.name, listener.handler);
        };
      }
    );
    return function() {
      deregisterList.forEach(function(deregister) {
        return deregister();
      });
    };
  }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);
  var View = /* @__PURE__ */ React.createElement("div", _objectSpread2({
    style,
    ref: animationContainer
  }, rest));
  return {
    View,
    play,
    stop,
    pause,
    setSpeed,
    goToAndStop,
    goToAndPlay,
    setDirection,
    playSegments,
    setSubframe,
    getDuration,
    destroy,
    animationContainerRef: animationContainer,
    animationLoaded,
    animationItem: animationInstanceRef.current
  };
};
function getContainerVisibility(container) {
  var _container$getBoundin = container.getBoundingClientRect(), top = _container$getBoundin.top, height2 = _container$getBoundin.height;
  var current = window.innerHeight - top;
  var max = window.innerHeight + height2;
  return current / max;
}
function getContainerCursorPosition(container, cursorX, cursorY) {
  var _container$getBoundin2 = container.getBoundingClientRect(), top = _container$getBoundin2.top, left = _container$getBoundin2.left, width2 = _container$getBoundin2.width, height2 = _container$getBoundin2.height;
  var x2 = (cursorX - left) / width2;
  var y2 = (cursorY - top) / height2;
  return {
    x: x2,
    y: y2
  };
}
var useInitInteractivity = function useInitInteractivity2(_ref) {
  var wrapperRef = _ref.wrapperRef, animationItem = _ref.animationItem, mode = _ref.mode, actions = _ref.actions;
  reactExports.useEffect(function() {
    var wrapper = wrapperRef.current;
    if (!wrapper || !animationItem || !actions.length) {
      return;
    }
    animationItem.stop();
    var scrollModeHandler = function scrollModeHandler2() {
      var assignedSegment = null;
      var scrollHandler = function scrollHandler2() {
        var currentPercent = getContainerVisibility(wrapper);
        var action = actions.find(function(_ref2) {
          var visibility = _ref2.visibility;
          return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];
        });
        if (!action) {
          return;
        }
        if (action.type === "seek" && action.visibility && action.frames.length === 2) {
          var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]);
          //! goToAndStop must be relative to the start of the current segment
          animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);
        }
        if (action.type === "loop") {
          if (assignedSegment === null) {
            animationItem.playSegments(action.frames, true);
            assignedSegment = action.frames;
          } else {
            if (assignedSegment !== action.frames) {
              animationItem.playSegments(action.frames, true);
              assignedSegment = action.frames;
            } else if (animationItem.isPaused) {
              animationItem.playSegments(action.frames, true);
              assignedSegment = action.frames;
            }
          }
        }
        if (action.type === "play" && animationItem.isPaused) {
          animationItem.resetSegments(true);
          animationItem.play();
        }
        if (action.type === "stop") {
          animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);
        }
      };
      document.addEventListener("scroll", scrollHandler);
      return function() {
        document.removeEventListener("scroll", scrollHandler);
      };
    };
    var cursorModeHandler = function cursorModeHandler2() {
      var handleCursor = function handleCursor2(_x, _y) {
        var x2 = _x;
        var y2 = _y;
        if (x2 !== -1 && y2 !== -1) {
          var pos = getContainerCursorPosition(wrapper, x2, y2);
          x2 = pos.x;
          y2 = pos.y;
        }
        var action = actions.find(function(_ref3) {
          var position2 = _ref3.position;
          if (position2 && Array.isArray(position2.x) && Array.isArray(position2.y)) {
            return x2 >= position2.x[0] && x2 <= position2.x[1] && y2 >= position2.y[0] && y2 <= position2.y[1];
          }
          if (position2 && !Number.isNaN(position2.x) && !Number.isNaN(position2.y)) {
            return x2 === position2.x && y2 === position2.y;
          }
          return false;
        });
        if (!action) {
          return;
        }
        if (action.type === "seek" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {
          var xPercent = (x2 - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);
          var yPercent = (y2 - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);
          animationItem.playSegments(action.frames, true);
          animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);
        }
        if (action.type === "loop") {
          animationItem.playSegments(action.frames, true);
        }
        if (action.type === "play") {
          if (animationItem.isPaused) {
            animationItem.resetSegments(false);
          }
          animationItem.playSegments(action.frames);
        }
        if (action.type === "stop") {
          animationItem.goToAndStop(action.frames[0], true);
        }
      };
      var mouseMoveHandler = function mouseMoveHandler2(ev) {
        handleCursor(ev.clientX, ev.clientY);
      };
      var mouseOutHandler = function mouseOutHandler2() {
        handleCursor(-1, -1);
      };
      wrapper.addEventListener("mousemove", mouseMoveHandler);
      wrapper.addEventListener("mouseout", mouseOutHandler);
      return function() {
        wrapper.removeEventListener("mousemove", mouseMoveHandler);
        wrapper.removeEventListener("mouseout", mouseOutHandler);
      };
    };
    switch (mode) {
      case "scroll":
        return scrollModeHandler();
      case "cursor":
        return cursorModeHandler();
    }
  }, [mode, animationItem]);
};
var useLottieInteractivity = function useLottieInteractivity2(_ref4) {
  var actions = _ref4.actions, mode = _ref4.mode, lottieObj = _ref4.lottieObj;
  var animationItem = lottieObj.animationItem, View = lottieObj.View, animationContainerRef = lottieObj.animationContainerRef;
  useInitInteractivity({
    actions,
    animationItem,
    mode,
    wrapperRef: animationContainerRef
  });
  return View;
};
var _excluded$2 = ["style", "interactivity"];
var Lottie = function Lottie2(props) {
  var _a, _b, _c;
  var style = props.style, interactivity = props.interactivity, lottieProps = _objectWithoutProperties$1(props, _excluded$2);
  var _useLottie = useLottie(lottieProps, style), View = _useLottie.View, play = _useLottie.play, stop = _useLottie.stop, pause = _useLottie.pause, setSpeed = _useLottie.setSpeed, goToAndStop = _useLottie.goToAndStop, goToAndPlay = _useLottie.goToAndPlay, setDirection = _useLottie.setDirection, playSegments = _useLottie.playSegments, setSubframe = _useLottie.setSubframe, getDuration = _useLottie.getDuration, destroy = _useLottie.destroy, animationContainerRef = _useLottie.animationContainerRef, animationLoaded = _useLottie.animationLoaded, animationItem = _useLottie.animationItem;
  reactExports.useEffect(function() {
    if (props.lottieRef) {
      props.lottieRef.current = {
        play,
        stop,
        pause,
        setSpeed,
        goToAndPlay,
        goToAndStop,
        setDirection,
        playSegments,
        setSubframe,
        getDuration,
        destroy,
        animationContainerRef,
        animationLoaded,
        animationItem
      };
    }
  }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);
  return useLottieInteractivity({
    lottieObj: {
      View,
      play,
      stop,
      pause,
      setSpeed,
      goToAndStop,
      goToAndPlay,
      setDirection,
      playSegments,
      setSubframe,
      getDuration,
      destroy,
      animationContainerRef,
      animationLoaded,
      animationItem
    },
    actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],
    mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : "scroll"
  });
};
const v$1 = "5.5.7";
const meta = {
  g: "LottieFiles AE 0.1.20",
  a: "",
  k: "",
  d: "",
  tc: ""
};
const fr$1 = 25;
const ip$1 = 0;
const op$1 = 62;
const w$1 = 600;
const h$1 = 600;
const nm$1 = "ecolier 3";
const ddd$1 = 0;
const assets$1 = [];
const layers$1 = [
  {
    ddd: 0,
    ind: 1,
    ty: 4,
    nm: "shoulder right ",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          870.938,
          224.175,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          -23,
          -52,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -34.426,
                    29.995
                  ],
                  [
                    -15.04,
                    -33.241
                  ],
                  [
                    -7.219,
                    -20.001
                  ],
                  [
                    18.045,
                    -0.261
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    11.363,
                    25.119
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -18.047,
                    0.261
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -22.506,
                    -79.802
                  ],
                  [
                    8.887,
                    -38.685
                  ],
                  [
                    44.194,
                    52.961
                  ],
                  [
                    4.979,
                    73.787
                  ],
                  [
                    -27.79,
                    79.802
                  ],
                  [
                    -40.06,
                    24.073
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.12156862745098039,
                0.2980392156862745,
                0.45098039215686275,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 2,
    ty: 4,
    nm: "forearm right ",
    parent: 1,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          14.399,
          56.547,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          27,
          -51,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    12.714,
                    -2.556
                  ],
                  [
                    -26.811,
                    -8.01
                  ],
                  [
                    -5.114,
                    6.437
                  ],
                  [
                    -1.76,
                    18.322
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    5.112,
                    -6.439
                  ],
                  [
                    1.763,
                    -18.322
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -56.794,
                    44.128
                  ],
                  [
                    -28.482,
                    77.173
                  ],
                  [
                    -9.491,
                    58.114
                  ],
                  [
                    56.678,
                    -28.977
                  ],
                  [
                    39.534,
                    -77.173
                  ],
                  [
                    -1.972,
                    -52.781
                  ],
                  [
                    8.465,
                    -33.243
                  ],
                  [
                    -32.35,
                    39.165
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.956862747669,
                0.65098041296,
                0.51372551918,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 3,
    ty: 4,
    nm: "head ",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 23,
            s: [
              -8
            ]
          },
          {
            t: 44,
            s: [
              0
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          764.392,
          145.664,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          764.392,
          145.664,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.471,
                    -0.387
                  ],
                  [
                    -0.574,
                    -1.834
                  ],
                  [
                    0.3,
                    -2.016
                  ],
                  [
                    0.166,
                    0.527
                  ],
                  [
                    0.359,
                    1.517
                  ],
                  [
                    1.105,
                    0.181
                  ],
                  [
                    -0.636,
                    0.401
                  ],
                  [
                    -0.997,
                    0.085
                  ],
                  [
                    0.388,
                    1.663
                  ]
                ],
                o: [
                  [
                    1.523,
                    1.251
                  ],
                  [
                    0.6,
                    1.916
                  ],
                  [
                    -0.094,
                    0.631
                  ],
                  [
                    -0.467,
                    -1.48
                  ],
                  [
                    -1.059,
                    0.339
                  ],
                  [
                    -0.849,
                    -0.139
                  ],
                  [
                    0.819,
                    -0.517
                  ],
                  [
                    -0.684,
                    -1.621
                  ],
                  [
                    -0.148,
                    -0.635
                  ]
                ],
                v: [
                  [
                    -0.867,
                    -6.1
                  ],
                  [
                    2.052,
                    -0.445
                  ],
                  [
                    3.002,
                    5.819
                  ],
                  [
                    1.839,
                    5.832
                  ],
                  [
                    0.844,
                    1.284
                  ],
                  [
                    -2.397,
                    1.783
                  ],
                  [
                    -2.637,
                    0.074
                  ],
                  [
                    0.213,
                    -0.649
                  ],
                  [
                    -1.904,
                    -5.495
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.874509811401,
                0.517647087574,
                0.35686275363,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                730.937,
                99.447
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.6,
                    -0.104
                  ],
                  [
                    1.404,
                    -1.312
                  ],
                  [
                    0.733,
                    -1.902
                  ],
                  [
                    -0.404,
                    0.377
                  ],
                  [
                    -1.061,
                    1.143
                  ],
                  [
                    -1.051,
                    -0.387
                  ],
                  [
                    0.355,
                    0.663
                  ],
                  [
                    0.825,
                    0.565
                  ],
                  [
                    -1.158,
                    1.255
                  ]
                ],
                o: [
                  [
                    -1.941,
                    0.337
                  ],
                  [
                    -1.466,
                    1.371
                  ],
                  [
                    -0.23,
                    0.596
                  ],
                  [
                    1.136,
                    -1.057
                  ],
                  [
                    0.754,
                    0.817
                  ],
                  [
                    0.807,
                    0.298
                  ],
                  [
                    -0.457,
                    -0.853
                  ],
                  [
                    1.394,
                    -1.073
                  ],
                  [
                    0.442,
                    -0.479
                  ]
                ],
                v: [
                  [
                    4.25,
                    -4.594
                  ],
                  [
                    -1.078,
                    -1.114
                  ],
                  [
                    -4.994,
                    3.867
                  ],
                  [
                    -3.988,
                    4.452
                  ],
                  [
                    -0.88,
                    0.986
                  ],
                  [
                    1.694,
                    3.018
                  ],
                  [
                    2.746,
                    1.65
                  ],
                  [
                    0.622,
                    -0.384
                  ],
                  [
                    4.854,
                    -3.556
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.874509811401,
                0.517647087574,
                0.35686275363,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                806.566,
                107.323
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 2",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -4.274,
                    5.038
                  ],
                  [
                    -8.771,
                    -7.805
                  ],
                  [
                    13.415,
                    1.649
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    8.771,
                    7.806
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -7.258,
                    -5.599
                  ],
                  [
                    7.071,
                    -12.52
                  ],
                  [
                    -9.638,
                    14.71
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.956862747669,
                0.65098041296,
                0.51372551918,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                807.843,
                108.551
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 3",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.463,
                    -0.361
                  ],
                  [
                    3.665,
                    0.1
                  ],
                  [
                    1.476,
                    1.332
                  ],
                  [
                    1.384,
                    0.639
                  ],
                  [
                    0.021,
                    -0.312
                  ],
                  [
                    -3.061,
                    -0.219
                  ],
                  [
                    -2.193,
                    4.003
                  ]
                ],
                o: [
                  [
                    -2.76,
                    2.154
                  ],
                  [
                    -1.967,
                    -0.054
                  ],
                  [
                    -1.34,
                    -1.21
                  ],
                  [
                    -0.276,
                    -0.128
                  ],
                  [
                    -0.246,
                    3.669
                  ],
                  [
                    4.661,
                    0.331
                  ],
                  [
                    0.312,
                    -0.569
                  ]
                ],
                v: [
                  [
                    8.508,
                    -3.373
                  ],
                  [
                    -1.149,
                    1.069
                  ],
                  [
                    -6.581,
                    -0.976
                  ],
                  [
                    -8.833,
                    -2.962
                  ],
                  [
                    -9.422,
                    -2.625
                  ],
                  [
                    -1.64,
                    3.474
                  ],
                  [
                    9.353,
                    -2.721
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.874509811401,
                0.517647087574,
                0.35686275363,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                762.021,
                122.96
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 4",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -6.055,
                    -4.154
                  ],
                  [
                    -3.998,
                    -1.178
                  ],
                  [
                    -3.665,
                    -0.196
                  ],
                  [
                    -4.822,
                    0.119
                  ],
                  [
                    -3.887,
                    -0.801
                  ],
                  [
                    -1.923,
                    -7.629
                  ],
                  [
                    0.261,
                    -3.707
                  ],
                  [
                    -1.787,
                    -2.416
                  ],
                  [
                    -1.151,
                    2e-3
                  ],
                  [
                    -1.426,
                    0.95
                  ],
                  [
                    -0.95,
                    2.451
                  ],
                  [
                    -0.799,
                    5.416
                  ],
                  [
                    13.249,
                    5.656
                  ],
                  [
                    5.95,
                    5.51
                  ],
                  [
                    1.852,
                    1.456
                  ],
                  [
                    2.793,
                    -0.263
                  ],
                  [
                    2.683,
                    0.137
                  ],
                  [
                    3.812,
                    2.595
                  ],
                  [
                    5.806,
                    -5.933
                  ],
                  [
                    -0.692,
                    -5.384
                  ]
                ],
                o: [
                  [
                    3.619,
                    2.483
                  ],
                  [
                    3.521,
                    1.037
                  ],
                  [
                    4.816,
                    0.258
                  ],
                  [
                    3.967,
                    -0.099
                  ],
                  [
                    7.706,
                    1.587
                  ],
                  [
                    0.909,
                    3.606
                  ],
                  [
                    -0.189,
                    2.697
                  ],
                  [
                    0.685,
                    0.926
                  ],
                  [
                    1.663,
                    -2e-3
                  ],
                  [
                    2.223,
                    -1.481
                  ],
                  [
                    1.979,
                    -5.104
                  ],
                  [
                    1.902,
                    -12.891
                  ],
                  [
                    -7.458,
                    -3.184
                  ],
                  [
                    -1.728,
                    -1.601
                  ],
                  [
                    -2.206,
                    -1.733
                  ],
                  [
                    -2.675,
                    0.252
                  ],
                  [
                    -4.605,
                    -0.235
                  ],
                  [
                    -6.862,
                    -4.672
                  ],
                  [
                    -3.797,
                    3.879
                  ],
                  [
                    0.936,
                    7.284
                  ]
                ],
                v: [
                  [
                    -36.973,
                    -3.812
                  ],
                  [
                    -25.278,
                    1.713
                  ],
                  [
                    -14.402,
                    3.258
                  ],
                  [
                    0.062,
                    3.465
                  ],
                  [
                    11.929,
                    3.944
                  ],
                  [
                    28.336,
                    19.177
                  ],
                  [
                    29.195,
                    30.71
                  ],
                  [
                    29.606,
                    39.39
                  ],
                  [
                    32.58,
                    40.887
                  ],
                  [
                    38.979,
                    37.785
                  ],
                  [
                    43.669,
                    31.433
                  ],
                  [
                    48.389,
                    15.742
                  ],
                  [
                    33.842,
                    -16.272
                  ],
                  [
                    11.277,
                    -24.729
                  ],
                  [
                    6.357,
                    -29.791
                  ],
                  [
                    -1.524,
                    -32.109
                  ],
                  [
                    -9.448,
                    -30.772
                  ],
                  [
                    -21.218,
                    -37.599
                  ],
                  [
                    -44.108,
                    -36.176
                  ],
                  [
                    -48.73,
                    -21.132
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                775.539,
                60.202
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 5",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.244,
                    0.608
                  ],
                  [
                    2.328,
                    -1.937
                  ],
                  [
                    -0.577,
                    -0.18
                  ],
                  [
                    -1.408,
                    -0.129
                  ],
                  [
                    -1.149,
                    -0.403
                  ]
                ],
                o: [
                  [
                    -1.254,
                    -3.125
                  ],
                  [
                    -0.531,
                    0.442
                  ],
                  [
                    1.356,
                    0.422
                  ],
                  [
                    1.239,
                    0.114
                  ],
                  [
                    0.589,
                    0.207
                  ]
                ],
                v: [
                  [
                    4.628,
                    0.794
                  ],
                  [
                    -4.412,
                    -0.691
                  ],
                  [
                    -4.026,
                    0.768
                  ],
                  [
                    0.181,
                    0.807
                  ],
                  [
                    3.554,
                    1.868
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.23137255013,
                0.149019613862,
                0.270588248968,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                781.119,
                81.613
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 6",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 6,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.971,
                    0.495
                  ],
                  [
                    1.602,
                    -2.292
                  ],
                  [
                    -0.491,
                    0.025
                  ],
                  [
                    -1.096,
                    0.09
                  ],
                  [
                    -1.124,
                    -0.356
                  ]
                ],
                o: [
                  [
                    -2.202,
                    -1.121
                  ],
                  [
                    -0.292,
                    0.417
                  ],
                  [
                    1.094,
                    -0.056
                  ],
                  [
                    1.189,
                    -0.099
                  ],
                  [
                    1.02,
                    0.324
                  ]
                ],
                v: [
                  [
                    3.776,
                    -0.52
                  ],
                  [
                    -4.143,
                    0.351
                  ],
                  [
                    -3.557,
                    1.373
                  ],
                  [
                    -0.4,
                    0.695
                  ],
                  [
                    3.041,
                    1.224
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                750.391,
                77.789
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 7",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 7,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.798,
                    0.119
                  ],
                  [
                    0.733,
                    1.683
                  ],
                  [
                    -0.354,
                    1.417
                  ],
                  [
                    -0.961,
                    6.129
                  ],
                  [
                    0.121,
                    -0.273
                  ],
                  [
                    2.183,
                    -8.646
                  ],
                  [
                    -0.506,
                    8e-3
                  ],
                  [
                    -2.277,
                    -0.013
                  ]
                ],
                o: [
                  [
                    -1.557,
                    -0.233
                  ],
                  [
                    -0.61,
                    -1.401
                  ],
                  [
                    1.275,
                    -5.109
                  ],
                  [
                    0.042,
                    -0.268
                  ],
                  [
                    -3.605,
                    8.14
                  ],
                  [
                    -0.12,
                    0.475
                  ],
                  [
                    2.284,
                    -0.036
                  ],
                  [
                    0.761,
                    4e-3
                  ]
                ],
                v: [
                  [
                    3.612,
                    12.842
                  ],
                  [
                    -2.249,
                    11.857
                  ],
                  [
                    0,
                    0.774
                  ],
                  [
                    3.583,
                    -13.924
                  ],
                  [
                    3.041,
                    -14.07
                  ],
                  [
                    -4.09,
                    12.786
                  ],
                  [
                    -3.352,
                    13.756
                  ],
                  [
                    3.426,
                    14.215
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.874509811401,
                0.517647087574,
                0.35686275363,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                760.336,
                97.902
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 8",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 8,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -0.3,
                    3.499
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.207,
                    -2.752
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0.27,
                    -3.146
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.207,
                    2.752
                  ]
                ],
                v: [
                  [
                    0.26,
                    2.72
                  ],
                  [
                    -1.416,
                    -0.044
                  ],
                  [
                    0.26,
                    -2.765
                  ],
                  [
                    1.426,
                    -0.023
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                749.557,
                91.596
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 9",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 9,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -0.3,
                    3.499
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.207,
                    -2.752
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0.27,
                    -3.146
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.207,
                    2.752
                  ]
                ],
                v: [
                  [
                    0.26,
                    2.72
                  ],
                  [
                    -1.416,
                    -0.044
                  ],
                  [
                    0.26,
                    -2.765
                  ],
                  [
                    1.426,
                    -0.023
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                780.734,
                92.017
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 10",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 10,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    13.97,
                    -14.53
                  ],
                  [
                    0.379,
                    -11.746
                  ],
                  [
                    -18.162,
                    -1.956
                  ],
                  [
                    -3.912,
                    32.971
                  ],
                  [
                    5.997,
                    7.122
                  ]
                ],
                o: [
                  [
                    -4.552,
                    4.734
                  ],
                  [
                    -1.15,
                    35.556
                  ],
                  [
                    18.162,
                    1.956
                  ],
                  [
                    1.956,
                    -16.485
                  ],
                  [
                    -8.941,
                    -10.617
                  ]
                ],
                v: [
                  [
                    -27.784,
                    -41.722
                  ],
                  [
                    -35.328,
                    -1.388
                  ],
                  [
                    -7.666,
                    47.23
                  ],
                  [
                    33.408,
                    9.23
                  ],
                  [
                    31.452,
                    -29.608
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.956862747669,
                0.65098041296,
                0.51372551918,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                769.704,
                98.481
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 11",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 11,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    1.028,
                    3.539
                  ],
                  [
                    6.85,
                    -8.221
                  ],
                  [
                    -8.906,
                    -0.696
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -6.85,
                    8.22
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    7.655,
                    -10.499
                  ],
                  [
                    -6.046,
                    -10.499
                  ],
                  [
                    7.655,
                    14.153
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.956862747669,
                0.65098041296,
                0.51372551918,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                730.465,
                99.398
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 12",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 12,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    2.236,
                    3.842
                  ],
                  [
                    0.396,
                    17.038
                  ],
                  [
                    -12.411,
                    1.052
                  ],
                  [
                    6.086,
                    -26.048
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -0.289,
                    -12.452
                  ],
                  [
                    46.154,
                    -3.912
                  ],
                  [
                    -6.985,
                    29.897
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -41.107,
                    24.668
                  ],
                  [
                    -39.429,
                    1.143
                  ],
                  [
                    -17.282,
                    -32.857
                  ],
                  [
                    39.923,
                    10.723
                  ],
                  [
                    30.423,
                    32.238
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.874509811401,
                0.517647087574,
                0.35686275363,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                778.005,
                75.473
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 13",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 13,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0.106,
                    -4.895
                  ],
                  [
                    -3.653,
                    -4.844
                  ],
                  [
                    -1.921,
                    -0.162
                  ],
                  [
                    -1.237,
                    1.333
                  ],
                  [
                    -0.964,
                    1.542
                  ],
                  [
                    -6.745,
                    2.395
                  ],
                  [
                    -1.37,
                    0.932
                  ],
                  [
                    -0.816,
                    2.312
                  ],
                  [
                    0.598,
                    2.566
                  ],
                  [
                    5.336,
                    1.648
                  ],
                  [
                    4.746,
                    0.158
                  ],
                  [
                    2.23,
                    -2.011
                  ],
                  [
                    0.838,
                    -3.372
                  ]
                ],
                o: [
                  [
                    -0.132,
                    6.066
                  ],
                  [
                    1.16,
                    1.539
                  ],
                  [
                    1.811,
                    0.154
                  ],
                  [
                    1.237,
                    -1.333
                  ],
                  [
                    3.796,
                    -6.068
                  ],
                  [
                    1.562,
                    -0.555
                  ],
                  [
                    2.028,
                    -1.378
                  ],
                  [
                    0.878,
                    -2.484
                  ],
                  [
                    -1.268,
                    -5.438
                  ],
                  [
                    -4.537,
                    -1.401
                  ],
                  [
                    -2.693,
                    -0.089
                  ],
                  [
                    -2.71,
                    2.444
                  ],
                  [
                    -1.181,
                    4.752
                  ]
                ],
                v: [
                  [
                    -21.47,
                    3.732
                  ],
                  [
                    -17.116,
                    21.05
                  ],
                  [
                    -12.452,
                    24.169
                  ],
                  [
                    -7.664,
                    21.974
                  ],
                  [
                    -4.619,
                    17.46
                  ],
                  [
                    11.812,
                    4.268
                  ],
                  [
                    16.376,
                    2.335
                  ],
                  [
                    20.443,
                    -3.643
                  ],
                  [
                    21.221,
                    -11.401
                  ],
                  [
                    8.965,
                    -21.659
                  ],
                  [
                    -5.044,
                    -24.005
                  ],
                  [
                    -14.94,
                    -22.756
                  ],
                  [
                    -19.524,
                    -10.796
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                750.327,
                74.143
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 14",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 14,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 4,
    ty: 4,
    nm: "body ",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 16,
            s: [
              3
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 33,
            s: [
              3
            ]
          },
          {
            t: 49,
            s: [
              0
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          302.793,
          411.532,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          764.79,
          437.677,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          84.047,
          84.047,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        2.459,
                        -45.97
                      ],
                      [
                        -0.138,
                        0
                      ],
                      [
                        -0.545,
                        -0.06
                      ],
                      [
                        2.891,
                        12.798
                      ],
                      [
                        3.525,
                        7.152
                      ],
                      [
                        0.621,
                        -0.281
                      ],
                      [
                        -2.323,
                        -10.281
                      ]
                    ],
                    o: [
                      [
                        0.138,
                        -4e-3
                      ],
                      [
                        0.562,
                        0
                      ],
                      [
                        2.471,
                        -46.045
                      ],
                      [
                        -2.357,
                        -10.429
                      ],
                      [
                        -0.617,
                        0.288
                      ],
                      [
                        3.471,
                        7.037
                      ],
                      [
                        2.811,
                        12.439
                      ]
                    ],
                    v: [
                      [
                        1.331,
                        70.218
                      ],
                      [
                        1.742,
                        70.196
                      ],
                      [
                        3.403,
                        70.29
                      ],
                      [
                        5.125,
                        -43.273
                      ],
                      [
                        -4.656,
                        -70.29
                      ],
                      [
                        -6.513,
                        -69.439
                      ],
                      [
                        3.13,
                        -42.822
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    675.405,
                    283.862
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -0.604,
                        -18.853
                      ],
                      [
                        -0.679,
                        -0.187
                      ],
                      [
                        -3e-3,
                        -1e-3
                      ],
                      [
                        0.268,
                        12.122
                      ],
                      [
                        0.05,
                        1.343
                      ],
                      [
                        -2.696,
                        7.485
                      ],
                      [
                        0.663,
                        0.187
                      ],
                      [
                        -0.127,
                        -3.417
                      ],
                      [
                        -0.124,
                        -5.614
                      ]
                    ],
                    o: [
                      [
                        0.685,
                        0.088
                      ],
                      [
                        3e-3,
                        1e-3
                      ],
                      [
                        -0.737,
                        -22.718
                      ],
                      [
                        -0.122,
                        -5.623
                      ],
                      [
                        -0.118,
                        -3.199
                      ],
                      [
                        -0.682,
                        -0.091
                      ],
                      [
                        -2.719,
                        7.611
                      ],
                      [
                        0.049,
                        1.327
                      ],
                      [
                        0.387,
                        17.641
                      ]
                    ],
                    v: [
                      [
                        -1.619,
                        42.229
                      ],
                      [
                        0.429,
                        42.622
                      ],
                      [
                        0.438,
                        42.626
                      ],
                      [
                        -1.044,
                        -13.965
                      ],
                      [
                        -1.298,
                        -24.646
                      ],
                      [
                        3.346,
                        -42.196
                      ],
                      [
                        1.33,
                        -42.626
                      ],
                      [
                        -3.341,
                        -24.57
                      ],
                      [
                        -3.087,
                        -13.92
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.78823530674,
                    0.78823530674,
                    0.843137264252,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    857.39,
                    267.677
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                857.39,
                267.677
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                857.39,
                267.677
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0.526,
                        0
                      ],
                      [
                        0.444,
                        0.673
                      ],
                      [
                        -0.47,
                        0.312
                      ],
                      [
                        -0.313,
                        -0.47
                      ],
                      [
                        -24.639,
                        0.652
                      ],
                      [
                        -0.11,
                        0.146
                      ],
                      [
                        -0.45,
                        -0.339
                      ],
                      [
                        0.339,
                        -0.451
                      ],
                      [
                        25.76,
                        -0.687
                      ]
                    ],
                    o: [
                      [
                        -24.689,
                        0
                      ],
                      [
                        -0.311,
                        -0.47
                      ],
                      [
                        0.47,
                        -0.312
                      ],
                      [
                        0.105,
                        0.159
                      ],
                      [
                        24.724,
                        -0.659
                      ],
                      [
                        0.341,
                        -0.45
                      ],
                      [
                        0.45,
                        0.341
                      ],
                      [
                        -0.473,
                        0.629
                      ],
                      [
                        -0.539,
                        0.014
                      ]
                    ],
                    v: [
                      [
                        -1.816,
                        8.873
                      ],
                      [
                        -37.458,
                        -7.287
                      ],
                      [
                        -37.168,
                        -8.702
                      ],
                      [
                        -35.751,
                        -8.415
                      ],
                      [
                        -0.271,
                        6.807
                      ],
                      [
                        35.787,
                        -8.466
                      ],
                      [
                        37.219,
                        -8.667
                      ],
                      [
                        37.421,
                        -7.236
                      ],
                      [
                        -0.216,
                        8.851
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.78823530674,
                    0.78823530674,
                    0.843137264252,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                767.034,
                182.75
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 2",
        np: 1,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -0.521,
                    9.559
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    17.663,
                    0
                  ],
                  [
                    9.719,
                    0.436
                  ],
                  [
                    -3.655,
                    -16.596
                  ],
                  [
                    -24.367,
                    2.013
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0.523,
                    -9.56
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -17.665,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    26.604,
                    -2.199
                  ]
                ],
                v: [
                  [
                    72.205,
                    37.198
                  ],
                  [
                    70.116,
                    -2.429
                  ],
                  [
                    71.127,
                    -35.974
                  ],
                  [
                    0.595,
                    -38.092
                  ],
                  [
                    -72.131,
                    -33.551
                  ],
                  [
                    -69.277,
                    37.198
                  ],
                  [
                    -10.088,
                    37.198
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.698039233685,
                0.741176486015,
                0.803921580315,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                772.889,
                291.048
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 3",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -45.902,
                    11.81
                  ],
                  [
                    -24.805,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -7.499,
                    -4.431
                  ],
                  [
                    -0.341,
                    -9.203
                  ],
                  [
                    -5.113,
                    -13.293
                  ],
                  [
                    16.28,
                    -17.685
                  ],
                  [
                    32.165,
                    -7.549
                  ],
                  [
                    20.451,
                    -23.248
                  ],
                  [
                    24.855,
                    4.09
                  ],
                  [
                    -3.129,
                    8.253
                  ],
                  [
                    -11.269,
                    25.053
                  ],
                  [
                    5.113,
                    22.627
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    24.806,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.341,
                    9.203
                  ],
                  [
                    5.113,
                    13.293
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -3.665,
                    4.166
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    7.669,
                    -20.232
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -5.113,
                    -22.627
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -30.676,
                    -167.92
                  ],
                  [
                    1.781,
                    -152.923
                  ],
                  [
                    29.654,
                    -167.92
                  ],
                  [
                    104.641,
                    -139.63
                  ],
                  [
                    88.28,
                    -92.933
                  ],
                  [
                    95.677,
                    55.357
                  ],
                  [
                    87.884,
                    88.821
                  ],
                  [
                    34.471,
                    96.37
                  ],
                  [
                    -37.658,
                    141.949
                  ],
                  [
                    -89.105,
                    167.477
                  ],
                  [
                    -98.825,
                    143.115
                  ],
                  [
                    -93.137,
                    85.8
                  ],
                  [
                    -87.258,
                    -95.188
                  ],
                  [
                    -104.641,
                    -135.493
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.12156862745098039,
                0.2980392156862745,
                0.45098039215686275,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                766.79,
                336.003
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 4",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -11.416,
                        0
                      ],
                      [
                        -4.34,
                        5.994
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.174,
                        -9.669
                      ]
                    ],
                    o: [
                      [
                        11.127,
                        0
                      ],
                      [
                        0.065,
                        -10.128
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        3.725,
                        6.053
                      ]
                    ],
                    v: [
                      [
                        -0.322,
                        16.32
                      ],
                      [
                        22.881,
                        2.814
                      ],
                      [
                        23.146,
                        -16.32
                      ],
                      [
                        -23.146,
                        -16.32
                      ],
                      [
                        -22.584,
                        2.348
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.843137264252,
                    0.494117647409,
                    0.40000000596,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    769.386,
                    143.751
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        1.456,
                        -5.584
                      ],
                      [
                        13.99,
                        -6.558
                      ],
                      [
                        -35.174,
                        0.729
                      ],
                      [
                        -5.585,
                        8.013
                      ],
                      [
                        0.644,
                        11.413
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -1.458,
                        5.585
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        35.172,
                        -0.727
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.644,
                        -11.412
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        -22.331,
                        -37.732
                      ],
                      [
                        -22.331,
                        -2.056
                      ],
                      [
                        -51.435,
                        13.841
                      ],
                      [
                        1.74,
                        37.717
                      ],
                      [
                        51.435,
                        14.412
                      ],
                      [
                        23.96,
                        -1.065
                      ],
                      [
                        23.96,
                        -37.732
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    768.571,
                    165.163
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                768.571,
                165.163
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                768.571,
                165.163
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 5",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 5,
    ty: 4,
    nm: "forearm left ",
    parent: 6,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 16,
            s: [
              -35
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 30,
            s: [
              -11
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 41,
            s: [
              -35
            ]
          },
          {
            t: 57,
            s: [
              0
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          625.15,
          385.499,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          625.15,
          385.499,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        37.983,
                        19.869
                      ],
                      [
                        0.496,
                        -43.201
                      ],
                      [
                        -37.983,
                        -18.208
                      ],
                      [
                        -6.932,
                        43.201
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    609.906,
                    356.439
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -7.693,
                        -11.753
                      ],
                      [
                        11.753,
                        -7.693
                      ],
                      [
                        7.693,
                        11.753
                      ],
                      [
                        -11.753,
                        7.693
                      ]
                    ],
                    o: [
                      [
                        7.693,
                        11.753
                      ],
                      [
                        -11.753,
                        7.693
                      ],
                      [
                        -7.693,
                        -11.753
                      ],
                      [
                        11.753,
                        -7.693
                      ]
                    ],
                    v: [
                      [
                        21.28,
                        -13.929
                      ],
                      [
                        13.929,
                        21.28
                      ],
                      [
                        -21.28,
                        13.929
                      ],
                      [
                        -13.929,
                        -21.28
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    626.609,
                    390.237
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -13.875,
                        13.167
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -18.747,
                        -46.428
                      ]
                    ],
                    o: [
                      [
                        -31.884,
                        -43.33
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        11.06,
                        -3.899
                      ]
                    ],
                    v: [
                      [
                        34.848,
                        21.24
                      ],
                      [
                        -19.062,
                        -44.777
                      ],
                      [
                        -34.848,
                        -37.245
                      ],
                      [
                        -4.522,
                        44.777
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    576.445,
                    293.64
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 3",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 3,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                576.445,
                293.64
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                576.445,
                293.64
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 3,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        2.47,
                        -3.236
                      ],
                      [
                        0.165,
                        -4.728
                      ],
                      [
                        10.463,
                        1.635
                      ],
                      [
                        0.061,
                        9.085
                      ],
                      [
                        -7.721,
                        1.723
                      ],
                      [
                        -0.587,
                        2.294
                      ],
                      [
                        -4.41,
                        -1.28
                      ]
                    ],
                    o: [
                      [
                        -2.26,
                        2.962
                      ],
                      [
                        -0.228,
                        6.528
                      ],
                      [
                        -2.326,
                        -0.364
                      ],
                      [
                        -0.061,
                        -8.961
                      ],
                      [
                        1.952,
                        -0.435
                      ],
                      [
                        1.244,
                        -4.874
                      ],
                      [
                        3.529,
                        1.024
                      ]
                    ],
                    v: [
                      [
                        10.352,
                        -15.501
                      ],
                      [
                        5.851,
                        1.16
                      ],
                      [
                        -9.406,
                        23.849
                      ],
                      [
                        -14.135,
                        9.527
                      ],
                      [
                        -2.594,
                        -9.025
                      ],
                      [
                        2.055,
                        -13.525
                      ],
                      [
                        12.594,
                        -23.794
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.960784316063,
                    0.643137276173,
                    0.54509806633,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    559.59,
                    244.331
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [
                            -5.916,
                            -3.658
                          ],
                          [
                            0.093,
                            4.929
                          ],
                          [
                            3.977,
                            2.085
                          ],
                          [
                            1.861,
                            6.653
                          ],
                          [
                            0.194,
                            0.775
                          ],
                          [
                            4.293,
                            -0.667
                          ],
                          [
                            0.447,
                            -3.65
                          ]
                        ],
                        o: [
                          [
                            9.517,
                            4.261
                          ],
                          [
                            -0.901,
                            -3.859
                          ],
                          [
                            -2.835,
                            -1.487
                          ],
                          [
                            -0.199,
                            -0.712
                          ],
                          [
                            0.653,
                            4.716
                          ],
                          [
                            -7.451,
                            1.162
                          ],
                          [
                            -1.243,
                            10.115
                          ]
                        ],
                        v: [
                          [
                            1.037,
                            13.669
                          ],
                          [
                            17.812,
                            8.962
                          ],
                          [
                            10.632,
                            -0.302
                          ],
                          [
                            5.143,
                            -13.233
                          ],
                          [
                            4.554,
                            -15.464
                          ],
                          [
                            -1.484,
                            -9.03
                          ],
                          [
                            -17.735,
                            1.475
                          ]
                        ],
                        c: true
                      },
                      ix: 2
                    },
                    nm: "Tracé 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                  },
                  {
                    ty: "fl",
                    c: {
                      a: 0,
                      k: [
                        0.854901969433,
                        0.533333361149,
                        0.43137255311,
                        1
                      ],
                      ix: 4
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fond 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                  },
                  {
                    ty: "tr",
                    p: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 2
                    },
                    a: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 1
                    },
                    s: {
                      a: 0,
                      k: [
                        100,
                        100
                      ],
                      ix: 3
                    },
                    r: {
                      a: 0,
                      k: 0,
                      ix: 6
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 7
                    },
                    sk: {
                      a: 0,
                      k: 0,
                      ix: 4
                    },
                    sa: {
                      a: 0,
                      k: 0,
                      ix: 5
                    },
                    nm: "Transformer "
                  }
                ],
                nm: "Groupe 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    545.964,
                    235.558
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 1,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        1.175,
                        -6.901
                      ],
                      [
                        0.196,
                        -1.31
                      ],
                      [
                        6.496,
                        1.015
                      ],
                      [
                        4.051,
                        6.756
                      ],
                      [
                        4.145,
                        8.363
                      ],
                      [
                        1.044,
                        2.338
                      ],
                      [
                        -3.432,
                        -5.888
                      ],
                      [
                        -2.244,
                        -3.605
                      ],
                      [
                        -0.518,
                        0.491
                      ],
                      [
                        1.283,
                        3.128
                      ],
                      [
                        1.706,
                        4.722
                      ],
                      [
                        -3.502,
                        -8.091
                      ],
                      [
                        -1.689,
                        -3.708
                      ],
                      [
                        -0.729,
                        1.736
                      ],
                      [
                        1.11,
                        3.599
                      ],
                      [
                        1.888,
                        5.135
                      ],
                      [
                        -2.674,
                        -7.59
                      ],
                      [
                        -1.498,
                        -4.524
                      ],
                      [
                        -0.969,
                        0.889
                      ],
                      [
                        0.528,
                        3.801
                      ],
                      [
                        0.5,
                        5.178
                      ],
                      [
                        -1.476,
                        -8.131
                      ],
                      [
                        -1.86,
                        -6.654
                      ],
                      [
                        -2.833,
                        -1.486
                      ]
                    ],
                    o: [
                      [
                        -0.271,
                        1.342
                      ],
                      [
                        -2.323,
                        6.619
                      ],
                      [
                        -4.178,
                        -0.653
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -4.144,
                        -8.363
                      ],
                      [
                        -1.942,
                        -4.35
                      ],
                      [
                        2.598,
                        4.457
                      ],
                      [
                        1.68,
                        2.698
                      ],
                      [
                        0.351,
                        -0.333
                      ],
                      [
                        -3.423,
                        -8.342
                      ],
                      [
                        -1.706,
                        -4.721
                      ],
                      [
                        3.643,
                        8.417
                      ],
                      [
                        0.788,
                        1.732
                      ],
                      [
                        0.25,
                        -0.595
                      ],
                      [
                        -3.549,
                        -11.519
                      ],
                      [
                        -2.981,
                        -8.11
                      ],
                      [
                        3.534,
                        10.028
                      ],
                      [
                        1.021,
                        3.084
                      ],
                      [
                        0.525,
                        -0.483
                      ],
                      [
                        -1.659,
                        -11.938
                      ],
                      [
                        -0.547,
                        -5.66
                      ],
                      [
                        2.106,
                        11.6
                      ],
                      [
                        1.859,
                        6.653
                      ],
                      [
                        6.442,
                        3.378
                      ]
                    ],
                    v: [
                      [
                        27.667,
                        23.332
                      ],
                      [
                        26.981,
                        27.308
                      ],
                      [
                        13.939,
                        39.386
                      ],
                      [
                        -11.967,
                        18.844
                      ],
                      [
                        -20.549,
                        2.533
                      ],
                      [
                        -27.404,
                        -12.707
                      ],
                      [
                        -22.618,
                        -14.616
                      ],
                      [
                        -14.748,
                        -0.807
                      ],
                      [
                        -11.248,
                        3.212
                      ],
                      [
                        -12.629,
                        -1.823
                      ],
                      [
                        -21.901,
                        -24.763
                      ],
                      [
                        -15.383,
                        -25.131
                      ],
                      [
                        -6.294,
                        -5.707
                      ],
                      [
                        -3.428,
                        -2.518
                      ],
                      [
                        -4.7,
                        -8.501
                      ],
                      [
                        -12.325,
                        -31.911
                      ],
                      [
                        -5.978,
                        -34.633
                      ],
                      [
                        2.35,
                        -12.528
                      ],
                      [
                        5.615,
                        -6.168
                      ],
                      [
                        5.266,
                        -12.364
                      ],
                      [
                        2.259,
                        -34.433
                      ],
                      [
                        9.267,
                        -34.158
                      ],
                      [
                        14.872,
                        -6.494
                      ],
                      [
                        20.36,
                        6.438
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.960784316063,
                    0.643137276173,
                    0.54509806633,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    536.236,
                    228.817
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 3",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 3,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                536.236,
                228.817
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                536.236,
                228.817
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Hand_8",
        np: 3,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 6,
    ty: 4,
    nm: "shoulder left ",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                0.833
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 16,
            s: [
              11
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0.167
              ]
            },
            t: 40,
            s: [
              11
            ]
          },
          {
            t: 56,
            s: [
              0
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          663.436,
          203.47,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          663.436,
          203.47,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        26.619,
                        -18.352
                      ],
                      [
                        13.183,
                        -28.196
                      ],
                      [
                        7.336,
                        -20.326
                      ],
                      [
                        -18.339,
                        -0.266
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.103,
                        6.103
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -11.867,
                        25.381
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        18.34,
                        0.265
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        6.725,
                        -29.074
                      ]
                    ],
                    v: [
                      [
                        16.821,
                        -80.259
                      ],
                      [
                        -2.753,
                        -48.445
                      ],
                      [
                        -43.249,
                        59.617
                      ],
                      [
                        1.987,
                        75.399
                      ],
                      [
                        33.719,
                        80.259
                      ],
                      [
                        67.607,
                        15.942
                      ],
                      [
                        82.169,
                        -36.038
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                645.328,
                280.769
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 1,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        11.73,
                        80.695
                      ],
                      [
                        37.08,
                        -73.965
                      ],
                      [
                        6.71,
                        -80.695
                      ],
                      [
                        -37.08,
                        66.934
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    641.455,
                    315.005
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -13.425,
                        4.133
                      ],
                      [
                        -4.133,
                        -13.425
                      ],
                      [
                        13.425,
                        -4.133
                      ],
                      [
                        4.133,
                        13.425
                      ]
                    ],
                    o: [
                      [
                        13.425,
                        -4.133
                      ],
                      [
                        4.133,
                        13.425
                      ],
                      [
                        -13.425,
                        4.133
                      ],
                      [
                        -4.133,
                        -13.425
                      ]
                    ],
                    v: [
                      [
                        -7.484,
                        -24.307
                      ],
                      [
                        24.307,
                        -7.484
                      ],
                      [
                        7.484,
                        24.307
                      ],
                      [
                        -24.307,
                        7.484
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.956862747669,
                    0.65098041296,
                    0.51372551918,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    628.234,
                    390.747
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                628.234,
                390.747
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                628.234,
                390.747
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 2",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 7,
    ty: 4,
    nm: "mask ",
    td: 1,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          466.86,
          497.531,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          0,
          0,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          84.047,
          84.047,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.342406179391,
                0.864052207797,
                0.150220788694,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "rc",
            d: 1,
            s: {
              a: 0,
              k: [
                546,
                513
              ],
              ix: 2
            },
            p: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 4
            },
            nm: "Tracé rectangulaire 1",
            mn: "ADBE Vector Shape - Rect",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                -110,
                195.5
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Rectangle 1",
        np: 3,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 8,
    ty: 4,
    nm: "foot",
    tt: 2,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          308.101,
          620.232,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          771.107,
          685.991,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          84.047,
          84.047,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0.485,
                        0
                      ],
                      [
                        0.061,
                        0.011
                      ],
                      [
                        0.013,
                        0.321
                      ],
                      [
                        -0.564,
                        0.024
                      ],
                      [
                        -0.023,
                        -0.563
                      ],
                      [
                        -34.742,
                        -6.249
                      ],
                      [
                        0.1,
                        -0.556
                      ]
                    ],
                    o: [
                      [
                        -0.06,
                        0
                      ],
                      [
                        -36.39,
                        -6.545
                      ],
                      [
                        -0.023,
                        -0.564
                      ],
                      [
                        0.572,
                        -0.022
                      ],
                      [
                        0.054,
                        1.248
                      ],
                      [
                        0.556,
                        0.1
                      ],
                      [
                        -0.089,
                        0.494
                      ]
                    ],
                    v: [
                      [
                        18.64,
                        19.94
                      ],
                      [
                        18.459,
                        19.923
                      ],
                      [
                        -19.661,
                        -18.876
                      ],
                      [
                        -18.682,
                        -19.939
                      ],
                      [
                        -17.619,
                        -18.96
                      ],
                      [
                        18.82,
                        17.911
                      ],
                      [
                        19.646,
                        19.098
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.349019616842,
                    0.345098048449,
                    0.447058826685,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                831.104,
                450.818
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 1",
        np: 1,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0.254,
                        0
                      ],
                      [
                        4e-3,
                        0
                      ],
                      [
                        -0.033,
                        0.725
                      ],
                      [
                        -0.616,
                        -0.014
                      ],
                      [
                        0.715,
                        46.114
                      ],
                      [
                        -0.627,
                        -4e-3
                      ],
                      [
                        0.011,
                        -0.726
                      ],
                      [
                        5.983,
                        -4.723
                      ]
                    ],
                    o: [
                      [
                        -3e-3,
                        0
                      ],
                      [
                        -0.626,
                        0
                      ],
                      [
                        0.034,
                        -0.715
                      ],
                      [
                        0.21,
                        -9e-3
                      ],
                      [
                        -0.011,
                        -0.725
                      ],
                      [
                        0.627,
                        -1e-3
                      ],
                      [
                        -0.375,
                        24.039
                      ],
                      [
                        -2.603,
                        2.054
                      ]
                    ],
                    v: [
                      [
                        -4.66,
                        26.426
                      ],
                      [
                        -4.67,
                        26.426
                      ],
                      [
                        -5.733,
                        24.243
                      ],
                      [
                        -4.557,
                        22.576
                      ],
                      [
                        3.461,
                        -25.019
                      ],
                      [
                        4.618,
                        -26.426
                      ],
                      [
                        5.735,
                        -25.154
                      ],
                      [
                        -0.249,
                        23.189
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                773.692,
                481.393
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 2",
        np: 1,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0.025,
                        0
                      ],
                      [
                        0.011,
                        0.696
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.627,
                        0.022
                      ],
                      [
                        -0.011,
                        -0.725
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0.627,
                        0
                      ]
                    ],
                    o: [
                      [
                        -0.593,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.011,
                        -0.725
                      ],
                      [
                        0.626,
                        -0.012
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0.012,
                        0.725
                      ],
                      [
                        -0.024,
                        0
                      ]
                    ],
                    v: [
                      [
                        1.397,
                        33.416
                      ],
                      [
                        0.316,
                        31.67
                      ],
                      [
                        -2.588,
                        -31.944
                      ],
                      [
                        -1.472,
                        -33.415
                      ],
                      [
                        -0.315,
                        -32.201
                      ],
                      [
                        2.588,
                        31.62
                      ],
                      [
                        1.471,
                        33.416
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                765.519,
                485.652
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 3",
        np: 1,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -18.98,
                    -245.412
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    4.183,
                    -125.553
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -12.495,
                    96.12
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    71.239,
                    -216.066
                  ],
                  [
                    101.768,
                    215.45
                  ],
                  [
                    38.344,
                    215.45
                  ],
                  [
                    -15.384,
                    -114.712
                  ],
                  [
                    -25.384,
                    216.066
                  ],
                  [
                    -88.071,
                    209.99
                  ],
                  [
                    -97.978,
                    -216.066
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                783.109,
                635.946
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 4",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -15.755,
                    -22.559
                  ],
                  [
                    -13.895,
                    22.559
                  ],
                  [
                    12.849,
                    22.559
                  ],
                  [
                    15.755,
                    -21.474
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.913725495338,
                0.596078455448,
                0.490196079016,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                726.153,
                862.581
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 7",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 7,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -16.491,
                    -22.815
                  ],
                  [
                    -8.675,
                    22.815
                  ],
                  [
                    16.491,
                    21.443
                  ],
                  [
                    15.468,
                    -22.815
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Tracé 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.913725495338,
                0.596078455448,
                0.490196079016,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                852.214,
                861.94
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 8",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 8,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -14.953,
                        4.788
                      ],
                      [
                        1.768,
                        0
                      ],
                      [
                        9.989,
                        1.766
                      ],
                      [
                        0.991,
                        -3.318
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -1.768,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        14.343,
                        1.104
                      ],
                      [
                        9.661,
                        -3.232
                      ],
                      [
                        -10.38,
                        -3.232
                      ],
                      [
                        -14.343,
                        1.104
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    861.983,
                    941.793
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -3.261,
                        1.562
                      ],
                      [
                        9.786,
                        0
                      ],
                      [
                        2.357,
                        10.645
                      ],
                      [
                        -10.821,
                        0.022
                      ]
                    ],
                    o: [
                      [
                        -2.68,
                        10.289
                      ],
                      [
                        -12.259,
                        0
                      ],
                      [
                        3.947,
                        2.455
                      ],
                      [
                        10.214,
                        -0.02
                      ]
                    ],
                    v: [
                      [
                        20.454,
                        -4.387
                      ],
                      [
                        1.625,
                        6.334
                      ],
                      [
                        -20.454,
                        -6.334
                      ],
                      [
                        1.135,
                        -1.173
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    860.04,
                    945.768
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -0.992,
                        -3.791
                      ],
                      [
                        -0.905,
                        8.732
                      ],
                      [
                        -2.089,
                        0.525
                      ],
                      [
                        0.526,
                        -4.004
                      ],
                      [
                        11.062,
                        0
                      ],
                      [
                        1.61,
                        13.199
                      ],
                      [
                        0.321,
                        6.736
                      ]
                    ],
                    o: [
                      [
                        2.618,
                        10.009
                      ],
                      [
                        0.537,
                        -5.2
                      ],
                      [
                        0.435,
                        7.252
                      ],
                      [
                        -1.938,
                        14.719
                      ],
                      [
                        -13.301,
                        0
                      ],
                      [
                        -0.636,
                        -5.211
                      ],
                      [
                        3.863,
                        0.79
                      ]
                    ],
                    v: [
                      [
                        -15.984,
                        -9.121
                      ],
                      [
                        16.47,
                        -8.619
                      ],
                      [
                        21.644,
                        -16.068
                      ],
                      [
                        21.666,
                        1.794
                      ],
                      [
                        1.974,
                        17.054
                      ],
                      [
                        -20.609,
                        1.5
                      ],
                      [
                        -22.018,
                        -17.054
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.776470601559,
                    0.776470601559,
                    0.86274510622,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    859.69,
                    935.048
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 3",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 3,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [
                            -0.471,
                            0
                          ],
                          [
                            -0.138,
                            0.057
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.062,
                            0.506
                          ],
                          [
                            0.499,
                            0.132
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.073,
                            0.514
                          ],
                          [
                            0.512,
                            0.112
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.102,
                            -0.633
                          ],
                          [
                            -0.644,
                            -0.142
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.061,
                            -0.506
                          ],
                          [
                            -0.499,
                            -0.133
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.278,
                            -0.606
                          ]
                        ],
                        o: [
                          [
                            0.144,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.46,
                            -0.186
                          ],
                          [
                            -0.061,
                            -0.508
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.468,
                            -0.191
                          ],
                          [
                            -0.075,
                            -0.514
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.645,
                            -0.145
                          ],
                          [
                            -0.101,
                            0.635
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.459,
                            0.187
                          ],
                          [
                            0.062,
                            0.506
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.591,
                            0.238
                          ],
                          [
                            0.213,
                            0.463
                          ]
                        ],
                        v: [
                          [
                            -9.018,
                            17.622
                          ],
                          [
                            -8.592,
                            17.538
                          ],
                          [
                            14.994,
                            8.026
                          ],
                          [
                            15.664,
                            6.866
                          ],
                          [
                            14.724,
                            5.796
                          ],
                          [
                            -8.072,
                            -0.244
                          ],
                          [
                            13.959,
                            -9.184
                          ],
                          [
                            14.623,
                            -10.372
                          ],
                          [
                            13.636,
                            -11.428
                          ],
                          [
                            -14.308,
                            -17.592
                          ],
                          [
                            -15.659,
                            -16.703
                          ],
                          [
                            -14.674,
                            -15.296
                          ],
                          [
                            9.48,
                            -9.966
                          ],
                          [
                            -12.303,
                            -1.125
                          ],
                          [
                            -12.97,
                            0.037
                          ],
                          [
                            -12.031,
                            1.106
                          ],
                          [
                            10.753,
                            7.141
                          ],
                          [
                            -9.598,
                            15.347
                          ],
                          [
                            -10.164,
                            16.875
                          ]
                        ],
                        c: true
                      },
                      ix: 2
                    },
                    nm: "Tracé 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                  },
                  {
                    ty: "fl",
                    c: {
                      a: 0,
                      k: [
                        0.760784327984,
                        0.75686275959,
                        0.803921580315,
                        1
                      ],
                      ix: 4
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fond 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                  },
                  {
                    ty: "tr",
                    p: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 2
                    },
                    a: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 1
                    },
                    s: {
                      a: 0,
                      k: [
                        100,
                        100
                      ],
                      ix: 3
                    },
                    r: {
                      a: 0,
                      k: 0,
                      ix: 6
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 7
                    },
                    sk: {
                      a: 0,
                      k: 0,
                      ix: 4
                    },
                    sa: {
                      a: 0,
                      k: 0,
                      ix: 5
                    },
                    nm: "Transformer "
                  }
                ],
                nm: "Groupe 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    856.774,
                    902.08
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 4",
            np: 1,
            cix: 2,
            bm: 0,
            ix: 4,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [
                            -0.118,
                            0
                          ],
                          [
                            -0.127,
                            0.502
                          ],
                          [
                            0.634,
                            0.196
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.065,
                            0.507
                          ],
                          [
                            0.5,
                            0.129
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.238,
                            0.62
                          ],
                          [
                            0.606,
                            -0.199
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.048,
                            -0.523
                          ],
                          [
                            -0.515,
                            -0.134
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.05,
                            -0.498
                          ],
                          [
                            -0.483,
                            -0.151
                          ],
                          [
                            0,
                            0
                          ]
                        ],
                        o: [
                          [
                            0.501,
                            0
                          ],
                          [
                            0.156,
                            -0.621
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.461,
                            -0.187
                          ],
                          [
                            -0.063,
                            -0.506
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.607,
                            -0.2
                          ],
                          [
                            -0.24,
                            -0.621
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.489,
                            0.161
                          ],
                          [
                            0.048,
                            0.523
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            -0.45,
                            0.186
                          ],
                          [
                            0.052,
                            0.497
                          ],
                          [
                            0,
                            0
                          ],
                          [
                            0.121,
                            0.037
                          ]
                        ],
                        v: [
                          [
                            13.988,
                            18.032
                          ],
                          [
                            15.058,
                            17.209
                          ],
                          [
                            14.193,
                            15.731
                          ],
                          [
                            -7.62,
                            8.975
                          ],
                          [
                            13.813,
                            0.201
                          ],
                          [
                            14.476,
                            -0.964
                          ],
                          [
                            13.532,
                            -2.031
                          ],
                          [
                            -9.71,
                            -8.059
                          ],
                          [
                            13.827,
                            -15.731
                          ],
                          [
                            14.494,
                            -17.212
                          ],
                          [
                            12.963,
                            -17.975
                          ],
                          [
                            -14.343,
                            -9.074
                          ],
                          [
                            -15.088,
                            -7.92
                          ],
                          [
                            -14.139,
                            -6.812
                          ],
                          [
                            9.567,
                            -0.665
                          ],
                          [
                            -11.623,
                            8.009
                          ],
                          [
                            -12.29,
                            9.146
                          ],
                          [
                            -11.397,
                            10.226
                          ],
                          [
                            13.628,
                            17.977
                          ]
                        ],
                        c: true
                      },
                      ix: 2
                    },
                    nm: "Tracé 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                  },
                  {
                    ty: "fl",
                    c: {
                      a: 0,
                      k: [
                        0.760784327984,
                        0.75686275959,
                        0.803921580315,
                        1
                      ],
                      ix: 4
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fond 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                  },
                  {
                    ty: "tr",
                    p: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 2
                    },
                    a: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 1
                    },
                    s: {
                      a: 0,
                      k: [
                        100,
                        100
                      ],
                      ix: 3
                    },
                    r: {
                      a: 0,
                      k: 0,
                      ix: 6
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 7
                    },
                    sk: {
                      a: 0,
                      k: 0,
                      ix: 4
                    },
                    sa: {
                      a: 0,
                      k: 0,
                      ix: 5
                    },
                    nm: "Transformer "
                  }
                ],
                nm: "Groupe 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    857.497,
                    901.526
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 5",
            np: 1,
            cix: 2,
            bm: 0,
            ix: 5,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        8.463,
                        -3.579
                      ],
                      [
                        -8.93,
                        -3.579
                      ],
                      [
                        -8.463,
                        3.579
                      ],
                      [
                        8.93,
                        3.579
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    857.99,
                    880.539
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 6",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 6,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        9.126,
                        1.347
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -14.38,
                        0.847
                      ],
                      [
                        -3.329,
                        -8.88
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0.543,
                        -0.287
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        -8.622,
                        23.71
                      ],
                      [
                        -15.108,
                        -15.819
                      ],
                      [
                        -0.662,
                        -24.27
                      ],
                      [
                        14.503,
                        -15.819
                      ],
                      [
                        15.108,
                        23.565
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    856.301,
                    894.814
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 7",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 7,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        12.825,
                        2.65
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -0.939,
                        0.495
                      ],
                      [
                        -14.38,
                        0.847
                      ],
                      [
                        -3.329,
                        -8.88
                      ],
                      [
                        -1.369,
                        -0.465
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0.576,
                        -0.551
                      ],
                      [
                        0.543,
                        -0.287
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        -10.033,
                        24.712
                      ],
                      [
                        -17.299,
                        -15.844
                      ],
                      [
                        -15.061,
                        -17.435
                      ],
                      [
                        -0.615,
                        -25.886
                      ],
                      [
                        14.55,
                        -17.435
                      ],
                      [
                        17.116,
                        -16.838
                      ],
                      [
                        17.299,
                        24.712
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    856.254,
                    896.43
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 8",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 8,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0.118,
                        7.911
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -0.644,
                        -10.386
                      ],
                      [
                        3.565,
                        8.893
                      ]
                    ],
                    v: [
                      [
                        1.937,
                        10.661
                      ],
                      [
                        -0.901,
                        14.978
                      ],
                      [
                        -1.937,
                        -14.978
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    838.901,
                    909.012
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 9",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 9,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -7e-3,
                        0.122
                      ],
                      [
                        -0.163,
                        -11.463
                      ],
                      [
                        0.375,
                        2.606
                      ]
                    ],
                    o: [
                      [
                        1.331,
                        9.708
                      ],
                      [
                        -1.66,
                        -2.095
                      ],
                      [
                        -1.067,
                        -7.433
                      ]
                    ],
                    v: [
                      [
                        -1.256,
                        -18.801
                      ],
                      [
                        1.928,
                        18.801
                      ],
                      [
                        -1.51,
                        11.652
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    879.765,
                    909.2
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 10",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 10,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -14.38,
                        0.847
                      ],
                      [
                        -3.329,
                        -8.88
                      ],
                      [
                        -1.163,
                        -2.985
                      ],
                      [
                        1.667,
                        -12.663
                      ],
                      [
                        11.062,
                        0
                      ],
                      [
                        1.61,
                        13.199
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -4.367,
                        2.307
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        1.165,
                        2.986
                      ],
                      [
                        -1.938,
                        14.719
                      ],
                      [
                        -13.301,
                        0
                      ],
                      [
                        -2.172,
                        -17.802
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0.543,
                        -0.287
                      ]
                    ],
                    v: [
                      [
                        -3.653,
                        -40.778
                      ],
                      [
                        11.512,
                        -32.327
                      ],
                      [
                        17.846,
                        -28.786
                      ],
                      [
                        22.064,
                        25.521
                      ],
                      [
                        2.372,
                        40.781
                      ],
                      [
                        -20.211,
                        25.227
                      ],
                      [
                        -22.417,
                        -26.65
                      ],
                      [
                        -18.099,
                        -32.327
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    859.292,
                    911.321
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 11",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 11,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                859.292,
                911.321
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                859.292,
                911.321
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 5",
        np: 11,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -0.162,
                        -18.514
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0.733,
                        4.404
                      ]
                    ],
                    o: [
                      [
                        10.9,
                        -4.968
                      ],
                      [
                        0.139,
                        -9.561
                      ],
                      [
                        -0.011,
                        7e-3
                      ]
                    ],
                    v: [
                      [
                        -6.262,
                        13.719
                      ],
                      [
                        6.242,
                        6.77
                      ],
                      [
                        5.085,
                        -13.719
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.776470601559,
                    0.776470601559,
                    0.86274510622,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    740.067,
                    892.934
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 1",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 1,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "gr",
                it: [
                  {
                    ty: "fl",
                    c: {
                      a: 0,
                      k: [
                        0.760784327984,
                        0.75686275959,
                        0.803921580315,
                        1
                      ],
                      ix: 4
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fond 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                  },
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [
                            0.356,
                            0
                          ],
                          [
                            0.032,
                            0
                          ],
                          [
                            0.103,
                            0
                          ],
                          [
                            -6e-3,
                            0.635
                          ],
                          [
                            -0.636,
                            -0.021
                          ],
                          [
                            -10.325,
                            -0.357
                          ],
                          [
                            1.975,
                            2.211
                          ],
                          [
                            -0.137,
                            0.394
                          ],
                          [
                            -0.409,
                            0.073
                          ],
                          [
                            -12.533,
                            -1.295
                          ],
                          [
                            3.322,
                            3.22
                          ],
                          [
                            -0.443,
                            0.456
                          ],
                          [
                            -0.455,
                            -0.442
                          ],
                          [
                            -0.243,
                            -0.364
                          ],
                          [
                            0.236,
                            -0.383
                          ],
                          [
                            0.449,
                            0.055
                          ],
                          [
                            3.06,
                            -0.285
                          ],
                          [
                            -0.141,
                            -0.334
                          ],
                          [
                            0.223,
                            -0.323
                          ]
                        ],
                        o: [
                          [
                            -0.033,
                            0
                          ],
                          [
                            -11.011,
                            -1.023
                          ],
                          [
                            -0.635,
                            -7e-3
                          ],
                          [
                            7e-3,
                            -0.634
                          ],
                          [
                            0.097,
                            2e-3
                          ],
                          [
                            -1.249,
                            -2.78
                          ],
                          [
                            -0.278,
                            -0.313
                          ],
                          [
                            0.135,
                            -0.395
                          ],
                          [
                            0.298,
                            -0.054
                          ],
                          [
                            -2.044,
                            -2.871
                          ],
                          [
                            -0.457,
                            -0.44
                          ],
                          [
                            0.442,
                            -0.457
                          ],
                          [
                            4.932,
                            4.777
                          ],
                          [
                            0.252,
                            0.372
                          ],
                          [
                            -0.236,
                            0.384
                          ],
                          [
                            -9.782,
                            -1.2
                          ],
                          [
                            2.672,
                            3.984
                          ],
                          [
                            0.152,
                            0.362
                          ],
                          [
                            -0.205,
                            0.298
                          ]
                        ],
                        v: [
                          [
                            3.271,
                            14.071
                          ],
                          [
                            3.173,
                            14.071
                          ],
                          [
                            -18.226,
                            13.455
                          ],
                          [
                            -19.366,
                            12.241
                          ],
                          [
                            -18.203,
                            11.078
                          ],
                          [
                            1.426,
                            11.52
                          ],
                          [
                            -4.401,
                            1.021
                          ],
                          [
                            -4.63,
                            -0.124
                          ],
                          [
                            -3.746,
                            -0.884
                          ],
                          [
                            15.818,
                            -0.808
                          ],
                          [
                            6.598,
                            -12.094
                          ],
                          [
                            6.573,
                            -13.72
                          ],
                          [
                            8.198,
                            -13.746
                          ],
                          [
                            19.17,
                            -0.022
                          ],
                          [
                            19.196,
                            1.221
                          ],
                          [
                            18.075,
                            1.761
                          ],
                          [
                            -1.42,
                            1.149
                          ],
                          [
                            4.276,
                            12.276
                          ],
                          [
                            4.162,
                            13.476
                          ]
                        ],
                        c: true
                      },
                      ix: 2
                    },
                    nm: "Tracé 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                  },
                  {
                    ty: "tr",
                    p: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 2
                    },
                    a: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 1
                    },
                    s: {
                      a: 0,
                      k: [
                        100,
                        100
                      ],
                      ix: 3
                    },
                    r: {
                      a: 0,
                      k: 0,
                      ix: 6
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 7
                    },
                    sk: {
                      a: 0,
                      k: 0,
                      ix: 4
                    },
                    sa: {
                      a: 0,
                      k: 0,
                      ix: 5
                    },
                    nm: "Transformer "
                  }
                ],
                nm: "Groupe 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    692.054,
                    889.475
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 2",
            np: 1,
            cix: 2,
            bm: 0,
            ix: 2,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "gr",
                it: [
                  {
                    ind: 0,
                    ty: "sh",
                    ix: 1,
                    ks: {
                      a: 0,
                      k: {
                        i: [
                          [
                            0.117,
                            -8e-3
                          ],
                          [
                            0.181,
                            0.481
                          ],
                          [
                            4.391,
                            7.113
                          ],
                          [
                            -0.186,
                            0.36
                          ],
                          [
                            -0.403,
                            0.027
                          ],
                          [
                            -7.998,
                            -0.597
                          ],
                          [
                            2.756,
                            4.463
                          ],
                          [
                            -0.168,
                            0.352
                          ],
                          [
                            -0.389,
                            0.048
                          ],
                          [
                            -13.207,
                            -2.425
                          ],
                          [
                            0.116,
                            -0.624
                          ],
                          [
                            0.625,
                            0.116
                          ],
                          [
                            3.188,
                            -0.179
                          ],
                          [
                            -0.115,
                            -0.296
                          ],
                          [
                            0.246,
                            -0.317
                          ],
                          [
                            0.399,
                            0.044
                          ],
                          [
                            3.945,
                            -0.198
                          ],
                          [
                            -0.077,
                            -0.205
                          ],
                          [
                            0.595,
                            -0.221
                          ]
                        ],
                        o: [
                          [
                            -0.485,
                            0.023
                          ],
                          [
                            -0.02,
                            -0.052
                          ],
                          [
                            -0.213,
                            -0.344
                          ],
                          [
                            0.184,
                            -0.359
                          ],
                          [
                            0.506,
                            -0.03
                          ],
                          [
                            -1.101,
                            -2.637
                          ],
                          [
                            -0.205,
                            -0.334
                          ],
                          [
                            0.171,
                            -0.355
                          ],
                          [
                            0.368,
                            -0.047
                          ],
                          [
                            0.625,
                            0.114
                          ],
                          [
                            -0.114,
                            0.623
                          ],
                          [
                            -9.467,
                            -1.739
                          ],
                          [
                            3.485,
                            6.045
                          ],
                          [
                            0.143,
                            0.376
                          ],
                          [
                            -0.246,
                            0.32
                          ],
                          [
                            -6.024,
                            -0.673
                          ],
                          [
                            3.821,
                            6.457
                          ],
                          [
                            0.224,
                            0.594
                          ],
                          [
                            -0.114,
                            0.045
                          ]
                        ],
                        v: [
                          [
                            -11.627,
                            14.688
                          ],
                          [
                            -12.759,
                            13.942
                          ],
                          [
                            -19.17,
                            1.504
                          ],
                          [
                            -19.213,
                            0.372
                          ],
                          [
                            -18.265,
                            -0.249
                          ],
                          [
                            1.335,
                            -0.39
                          ],
                          [
                            -4.817,
                            -12.682
                          ],
                          [
                            -4.875,
                            -13.783
                          ],
                          [
                            -3.979,
                            -14.428
                          ],
                          [
                            18.4,
                            -13.089
                          ],
                          [
                            19.322,
                            -11.75
                          ],
                          [
                            17.984,
                            -10.826
                          ],
                          [
                            -1.902,
                            -12.285
                          ],
                          [
                            4.185,
                            0.518
                          ],
                          [
                            4.019,
                            1.632
                          ],
                          [
                            2.982,
                            2.074
                          ],
                          [
                            -16.217,
                            1.943
                          ],
                          [
                            -10.605,
                            13.134
                          ],
                          [
                            -11.278,
                            14.614
                          ]
                        ],
                        c: true
                      },
                      ix: 2
                    },
                    nm: "Tracé 1",
                    mn: "ADBE Vector Shape - Group",
                    hd: false
                  },
                  {
                    ty: "fl",
                    c: {
                      a: 0,
                      k: [
                        0.760784327984,
                        0.75686275959,
                        0.803921580315,
                        1
                      ],
                      ix: 4
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 5
                    },
                    r: 1,
                    bm: 0,
                    nm: "Fond 1",
                    mn: "ADBE Vector Graphic - Fill",
                    hd: false
                  },
                  {
                    ty: "tr",
                    p: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 2
                    },
                    a: {
                      a: 0,
                      k: [
                        0,
                        0
                      ],
                      ix: 1
                    },
                    s: {
                      a: 0,
                      k: [
                        100,
                        100
                      ],
                      ix: 3
                    },
                    r: {
                      a: 0,
                      k: 0,
                      ix: 6
                    },
                    o: {
                      a: 0,
                      k: 100,
                      ix: 7
                    },
                    sk: {
                      a: 0,
                      k: 0,
                      ix: 4
                    },
                    sa: {
                      a: 0,
                      k: 0,
                      ix: 5
                    },
                    nm: "Transformer "
                  }
                ],
                nm: "Groupe 1",
                np: 2,
                cix: 2,
                bm: 0,
                ix: 1,
                mn: "ADBE Vector Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    698.917,
                    895.816
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 3",
            np: 1,
            cix: 2,
            bm: 0,
            ix: 3,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        -8.281,
                        0.763
                      ],
                      [
                        -3.928,
                        -5.084
                      ],
                      [
                        8.281,
                        -1.411
                      ],
                      [
                        3.783,
                        5.084
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    711.874,
                    876.044
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 4",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 4,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -18.675,
                        -0.598
                      ],
                      [
                        1.277,
                        1.089
                      ],
                      [
                        1.62,
                        7.192
                      ],
                      [
                        2.41,
                        -4.497
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -1.276,
                        -1.089
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        8.54,
                        7.238
                      ],
                      [
                        7.237,
                        1.939
                      ],
                      [
                        -4.783,
                        -7.145
                      ],
                      [
                        -8.504,
                        -3.641
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    666.369,
                    918.551
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 5",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 5,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        6.663,
                        0.826
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        11.33,
                        -8.333
                      ],
                      [
                        1.704,
                        -1.214
                      ]
                    ],
                    o: [
                      [
                        9.778,
                        -6.092
                      ],
                      [
                        0.909,
                        -4.94
                      ],
                      [
                        -6.664,
                        -0.826
                      ],
                      [
                        -3.356,
                        5.156
                      ],
                      [
                        -1.928,
                        1.416
                      ],
                      [
                        1.768,
                        5.243
                      ]
                    ],
                    v: [
                      [
                        -12.601,
                        20.796
                      ],
                      [
                        25.404,
                        -11.976
                      ],
                      [
                        14.324,
                        -20.648
                      ],
                      [
                        5.249,
                        -18.573
                      ],
                      [
                        -19.566,
                        8.619
                      ],
                      [
                        -25.505,
                        12.831
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    698.787,
                    889.244
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 6",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 6,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.776470601559,
                    0.776470601559,
                    0.86274510622,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        5.702,
                        -0.953
                      ],
                      [
                        10.872,
                        4.745
                      ],
                      [
                        0.875,
                        2.252
                      ],
                      [
                        -3.474,
                        -5.296
                      ],
                      [
                        -5.971,
                        0.204
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -1.891,
                        0.687
                      ]
                    ],
                    o: [
                      [
                        -7.998,
                        1.337
                      ],
                      [
                        -3.925,
                        -1.713
                      ],
                      [
                        -7.721,
                        5.702
                      ],
                      [
                        3.47,
                        5.29
                      ],
                      [
                        8.309,
                        -0.287
                      ],
                      [
                        2.07,
                        -0.735
                      ],
                      [
                        -1.31,
                        -2.74
                      ]
                    ],
                    v: [
                      [
                        14.078,
                        -3.479
                      ],
                      [
                        -8.774,
                        -2.997
                      ],
                      [
                        -14.813,
                        -10.519
                      ],
                      [
                        -22.549,
                        4.201
                      ],
                      [
                        -3.812,
                        10.498
                      ],
                      [
                        17.983,
                        4.715
                      ],
                      [
                        23.894,
                        2.589
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    681.709,
                    915.315
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 7",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 7,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -8.637,
                        0.018
                      ],
                      [
                        -17.791,
                        17.121
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        6.663,
                        0.826
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        11.33,
                        -8.331
                      ],
                      [
                        2.278,
                        -1.63
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        -1.367,
                        -0.728
                      ],
                      [
                        -4.94,
                        0.909
                      ],
                      [
                        -6.664,
                        -0.826
                      ],
                      [
                        -3.356,
                        5.156
                      ],
                      [
                        -2.748,
                        2.02
                      ],
                      [
                        2.464,
                        3.028
                      ]
                    ],
                    v: [
                      [
                        -10.987,
                        21.648
                      ],
                      [
                        28.3,
                        -11.732
                      ],
                      [
                        25.626,
                        -12.828
                      ],
                      [
                        14.546,
                        -21.5
                      ],
                      [
                        5.471,
                        -19.425
                      ],
                      [
                        -20.736,
                        6.815
                      ],
                      [
                        -28.3,
                        12.259
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    698.565,
                    890.096
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 8",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 8,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        4e-3,
                        1.175
                      ],
                      [
                        4.109,
                        -1.757
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -1.017,
                        0.395
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -3.896,
                        0.799
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    o: [
                      [
                        -1.283,
                        0.019
                      ],
                      [
                        -7.294,
                        -2.133
                      ],
                      [
                        -5.831,
                        2.492
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        2.371,
                        -0.798
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        3.897,
                        -0.799
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        10.898,
                        -4.968
                      ]
                    ],
                    v: [
                      [
                        26.349,
                        -7.333
                      ],
                      [
                        26.366,
                        -11.007
                      ],
                      [
                        2.013,
                        -14.734
                      ],
                      [
                        -24.133,
                        5.598
                      ],
                      [
                        -26.367,
                        15.226
                      ],
                      [
                        -21.065,
                        13.308
                      ],
                      [
                        -20.247,
                        6.834
                      ],
                      [
                        -0.62,
                        -5.185
                      ],
                      [
                        13.836,
                        -0.39
                      ],
                      [
                        13.847,
                        -0.384
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    719.96,
                    907.037
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 9",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 9,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        -1.302,
                        -2.814
                      ],
                      [
                        0.353,
                        -24.207
                      ],
                      [
                        42.366,
                        -15.031
                      ],
                      [
                        8.309,
                        -0.287
                      ],
                      [
                        3.47,
                        5.29
                      ],
                      [
                        -14.825,
                        10.899
                      ],
                      [
                        -3.356,
                        5.156
                      ],
                      [
                        -6.664,
                        -0.826
                      ],
                      [
                        0.909,
                        -4.94
                      ],
                      [
                        -1.534,
                        -1.94
                      ],
                      [
                        -0.267,
                        5.173
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -5.971,
                        0.204
                      ],
                      [
                        -4.843,
                        -7.383
                      ],
                      [
                        11.33,
                        -8.331
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        6.663,
                        0.826
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        1.536,
                        1.939
                      ],
                      [
                        0.17,
                        -3.291
                      ]
                    ],
                    v: [
                      [
                        40.44,
                        -26.432
                      ],
                      [
                        44.237,
                        2.563
                      ],
                      [
                        -2.38,
                        22.889
                      ],
                      [
                        -24.175,
                        28.672
                      ],
                      [
                        -42.912,
                        22.376
                      ],
                      [
                        -24.243,
                        -0.23
                      ],
                      [
                        1.964,
                        -26.47
                      ],
                      [
                        11.039,
                        -28.545
                      ],
                      [
                        22.118,
                        -19.873
                      ],
                      [
                        27.156,
                        -16.95
                      ],
                      [
                        36.428,
                        -23.645
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.12156862745098039,
                    0.2980392156862745,
                    0.45098039215686275,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    702.072,
                    897.141
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 10",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 10,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "gr",
            it: [
              {
                ind: 0,
                ty: "sh",
                ix: 1,
                ks: {
                  a: 0,
                  k: {
                    i: [
                      [
                        0,
                        0
                      ],
                      [
                        -0.031,
                        -0.646
                      ],
                      [
                        0.2,
                        -1.738
                      ],
                      [
                        6.207,
                        -2.607
                      ],
                      [
                        0.764,
                        -1.789
                      ],
                      [
                        3.63,
                        -1.768
                      ],
                      [
                        14.446,
                        -0.243
                      ],
                      [
                        1.926,
                        3.442
                      ],
                      [
                        -1.345,
                        3.173
                      ]
                    ],
                    o: [
                      [
                        0,
                        0
                      ],
                      [
                        0.032,
                        0.647
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        0,
                        0
                      ],
                      [
                        -13.976,
                        0.232
                      ],
                      [
                        -0.955,
                        -1.701
                      ],
                      [
                        0,
                        0
                      ]
                    ],
                    v: [
                      [
                        43.664,
                        -18.472
                      ],
                      [
                        45.308,
                        -17.233
                      ],
                      [
                        44.703,
                        -1.228
                      ],
                      [
                        25.178,
                        7.237
                      ],
                      [
                        20.128,
                        6.044
                      ],
                      [
                        15.039,
                        11.315
                      ],
                      [
                        -22.431,
                        18.466
                      ],
                      [
                        -43.637,
                        8.526
                      ],
                      [
                        -44.781,
                        -3.266
                      ]
                    ],
                    c: true
                  },
                  ix: 2
                },
                nm: "Tracé 1",
                mn: "ADBE Vector Shape - Group",
                hd: false
              },
              {
                ty: "fl",
                c: {
                  a: 0,
                  k: [
                    0.831372559071,
                    0.835294127464,
                    0.874509811401,
                    1
                  ],
                  ix: 4
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 5
                },
                r: 1,
                bm: 0,
                nm: "Fond 1",
                mn: "ADBE Vector Graphic - Fill",
                hd: false
              },
              {
                ty: "tr",
                p: {
                  a: 0,
                  k: [
                    702.645,
                    918.176
                  ],
                  ix: 2
                },
                a: {
                  a: 0,
                  k: [
                    0,
                    0
                  ],
                  ix: 1
                },
                s: {
                  a: 0,
                  k: [
                    100,
                    100
                  ],
                  ix: 3
                },
                r: {
                  a: 0,
                  k: 0,
                  ix: 6
                },
                o: {
                  a: 0,
                  k: 100,
                  ix: 7
                },
                sk: {
                  a: 0,
                  k: 0,
                  ix: 4
                },
                sa: {
                  a: 0,
                  k: 0,
                  ix: 5
                },
                nm: "Transformer "
              }
            ],
            nm: "Groupe 11",
            np: 2,
            cix: 2,
            bm: 0,
            ix: 11,
            mn: "ADBE Vector Group",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                702.645,
                918.176
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                702.645,
                918.176
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Groupe 6",
        np: 11,
        cix: 2,
        bm: 0,
        ix: 6,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 9,
    ty: 4,
    nm: "Calque de forme 1",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          294.564,
          300.862,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          -167,
          -252,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          63.035,
          74.854,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ty: "rc",
            d: 1,
            s: {
              a: 0,
              k: [
                432,
                384
              ],
              ix: 2
            },
            p: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 4
            },
            nm: "Tracé rectangulaire 1",
            mn: "ADBE Vector Shape - Rect",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.1294117647058824,
                0.5882352941176471,
                0.9529411764705882,
                0.2
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fond 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                -167,
                -249.474
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transformer "
          }
        ],
        nm: "Rectangle 1",
        np: 3,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 62,
    st: 0,
    bm: 0
  }
];
const markers$1 = [];
const SvgMan = {
  v: v$1,
  meta,
  fr: fr$1,
  ip: ip$1,
  op: op$1,
  w: w$1,
  h: h$1,
  nm: nm$1,
  ddd: ddd$1,
  assets: assets$1,
  layers: layers$1,
  markers: markers$1
};
const v = "5.6.3";
const fr = 60;
const ip = 0;
const op = 150;
const w = 1011;
const h = 1028;
const nm = "Comp 1";
const ddd = 0;
const assets = [];
const layers = [
  {
    ddd: 0,
    ind: 1,
    ty: 4,
    nm: "sepatuKanan Outlines",
    parent: 13,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          185.408,
          601.973,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          70.663,
          29.057,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.301
                  ],
                  [
                    -0.249,
                    0.342
                  ],
                  [
                    -0.051,
                    0.036
                  ],
                  [
                    0.696,
                    1.022
                  ],
                  [
                    1.018,
                    -0.67
                  ],
                  [
                    5.758,
                    -7.788
                  ],
                  [
                    -1.006,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.358,
                    -0.15
                  ],
                  [
                    5.238,
                    -7.092
                  ],
                  [
                    1.038,
                    -0.681
                  ],
                  [
                    -0.685,
                    -1.028
                  ],
                  [
                    -0.244,
                    0.16
                  ],
                  [
                    -0.732,
                    1.002
                  ],
                  [
                    0.67,
                    0.477
                  ]
                ],
                v: [
                  [
                    -4.67,
                    7.725
                  ],
                  [
                    -3.735,
                    6.988
                  ],
                  [
                    6.814,
                    -3.65
                  ],
                  [
                    7.437,
                    -6.734
                  ],
                  [
                    4.312,
                    -7.356
                  ],
                  [
                    -7.401,
                    4.367
                  ],
                  [
                    -6.898,
                    7.482
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                86.314,
                23.899
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.301
                  ],
                  [
                    -0.254,
                    0.337
                  ],
                  [
                    -0.051,
                    0.037
                  ],
                  [
                    0.697,
                    1.023
                  ],
                  [
                    1.017,
                    -0.664
                  ],
                  [
                    5.751,
                    -7.793
                  ],
                  [
                    -1.006,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.354,
                    -0.15
                  ],
                  [
                    5.233,
                    -7.103
                  ],
                  [
                    1.034,
                    -0.685
                  ],
                  [
                    -0.695,
                    -1.027
                  ],
                  [
                    -0.245,
                    0.161
                  ],
                  [
                    -0.733,
                    0.997
                  ],
                  [
                    0.67,
                    0.477
                  ]
                ],
                v: [
                  [
                    -4.67,
                    7.725
                  ],
                  [
                    -3.735,
                    6.988
                  ],
                  [
                    6.813,
                    -3.65
                  ],
                  [
                    7.437,
                    -6.734
                  ],
                  [
                    4.307,
                    -7.363
                  ],
                  [
                    -7.4,
                    4.367
                  ],
                  [
                    -6.899,
                    7.482
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                75.884,
                13.479
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.307
                  ],
                  [
                    -0.249,
                    0.337
                  ],
                  [
                    -0.051,
                    0.037
                  ],
                  [
                    0.691,
                    1.018
                  ],
                  [
                    1.018,
                    -0.654
                  ],
                  [
                    5.753,
                    -7.793
                  ],
                  [
                    -1.006,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.358,
                    -0.15
                  ],
                  [
                    5.244,
                    -7.103
                  ],
                  [
                    1.038,
                    -0.68
                  ],
                  [
                    -0.69,
                    -1.033
                  ],
                  [
                    -0.239,
                    0.161
                  ],
                  [
                    -0.732,
                    1.002
                  ],
                  [
                    0.67,
                    0.483
                  ]
                ],
                v: [
                  [
                    -4.672,
                    7.717
                  ],
                  [
                    -3.737,
                    6.986
                  ],
                  [
                    6.811,
                    -3.663
                  ],
                  [
                    7.44,
                    -6.742
                  ],
                  [
                    4.31,
                    -7.37
                  ],
                  [
                    -7.398,
                    4.359
                  ],
                  [
                    -6.901,
                    7.473
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                65.45,
                8.274
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    70.319,
                    7.819
                  ],
                  [
                    -70.413,
                    6.714
                  ],
                  [
                    -70.324,
                    -7.819
                  ],
                  [
                    70.413,
                    -6.707
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                70.663,
                50.045
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 4",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -2.979,
                    -0.769
                  ],
                  [
                    -11.806,
                    16.5
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    11.116,
                    2.861
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.446,
                    -2.933
                  ]
                ],
                v: [
                  [
                    -57.438,
                    -16.562
                  ],
                  [
                    -9.361,
                    -20.846
                  ],
                  [
                    70.413,
                    20.846
                  ],
                  [
                    -70.413,
                    19.947
                  ],
                  [
                    -63.855,
                    -12.486
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                70.663,
                21.386
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 5",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 2,
    ty: 4,
    nm: "sepatuKiri Outlines",
    parent: 12,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          93.735,
          601.973,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          70.663,
          29.057,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.301
                  ],
                  [
                    -0.249,
                    0.342
                  ],
                  [
                    -0.057,
                    0.036
                  ],
                  [
                    0.691,
                    1.022
                  ],
                  [
                    1.018,
                    -0.67
                  ],
                  [
                    5.753,
                    -7.788
                  ],
                  [
                    -1.007,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.358,
                    -0.15
                  ],
                  [
                    5.244,
                    -7.092
                  ],
                  [
                    1.033,
                    -0.681
                  ],
                  [
                    -0.69,
                    -1.028
                  ],
                  [
                    -0.244,
                    0.16
                  ],
                  [
                    -0.732,
                    1.002
                  ],
                  [
                    0.67,
                    0.477
                  ]
                ],
                v: [
                  [
                    -4.673,
                    7.725
                  ],
                  [
                    -3.739,
                    6.988
                  ],
                  [
                    6.817,
                    -3.65
                  ],
                  [
                    7.44,
                    -6.734
                  ],
                  [
                    4.31,
                    -7.356
                  ],
                  [
                    -7.399,
                    4.367
                  ],
                  [
                    -6.901,
                    7.482
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                86.316,
                23.899
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.301
                  ],
                  [
                    -0.25,
                    0.337
                  ],
                  [
                    -0.051,
                    0.037
                  ],
                  [
                    0.696,
                    1.023
                  ],
                  [
                    1.017,
                    -0.664
                  ],
                  [
                    5.752,
                    -7.793
                  ],
                  [
                    -1.006,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.358,
                    -0.15
                  ],
                  [
                    5.233,
                    -7.103
                  ],
                  [
                    1.039,
                    -0.685
                  ],
                  [
                    -0.685,
                    -1.027
                  ],
                  [
                    -0.244,
                    0.161
                  ],
                  [
                    -0.727,
                    0.997
                  ],
                  [
                    0.67,
                    0.477
                  ]
                ],
                v: [
                  [
                    -4.673,
                    7.725
                  ],
                  [
                    -3.738,
                    6.988
                  ],
                  [
                    6.812,
                    -3.65
                  ],
                  [
                    7.435,
                    -6.734
                  ],
                  [
                    4.305,
                    -7.363
                  ],
                  [
                    -7.404,
                    4.367
                  ],
                  [
                    -6.901,
                    7.482
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                75.885,
                13.479
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.711,
                    0.307
                  ],
                  [
                    -0.249,
                    0.337
                  ],
                  [
                    -0.052,
                    0.037
                  ],
                  [
                    0.696,
                    1.018
                  ],
                  [
                    1.023,
                    -0.654
                  ],
                  [
                    5.758,
                    -7.793
                  ],
                  [
                    -1.007,
                    -0.727
                  ]
                ],
                o: [
                  [
                    0.353,
                    -0.15
                  ],
                  [
                    5.238,
                    -7.103
                  ],
                  [
                    1.033,
                    -0.68
                  ],
                  [
                    -0.685,
                    -1.033
                  ],
                  [
                    -0.244,
                    0.161
                  ],
                  [
                    -0.727,
                    1.002
                  ],
                  [
                    0.669,
                    0.483
                  ]
                ],
                v: [
                  [
                    -4.673,
                    7.717
                  ],
                  [
                    -3.738,
                    6.986
                  ],
                  [
                    6.818,
                    -3.663
                  ],
                  [
                    7.435,
                    -6.742
                  ],
                  [
                    4.31,
                    -7.37
                  ],
                  [
                    -7.404,
                    4.359
                  ],
                  [
                    -6.9,
                    7.473
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                65.454,
                8.274
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    70.324,
                    7.819
                  ],
                  [
                    -70.412,
                    6.714
                  ],
                  [
                    -70.324,
                    -7.819
                  ],
                  [
                    70.412,
                    -6.707
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                70.662,
                50.045
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 4",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -2.97,
                    -0.763
                  ],
                  [
                    -11.801,
                    16.5
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    11.116,
                    2.861
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.457,
                    -2.938
                  ]
                ],
                v: [
                  [
                    -57.438,
                    -16.562
                  ],
                  [
                    -9.362,
                    -20.846
                  ],
                  [
                    70.413,
                    20.846
                  ],
                  [
                    -70.413,
                    19.947
                  ],
                  [
                    -63.855,
                    -12.482
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                70.663,
                21.386
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 5",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 3,
    ty: 4,
    nm: "lenganKiri Outlines",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            t: 40,
            s: [
              -6
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          16.028,
          26.59,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          87.997,
          24.405,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -7.824,
                    13.027
                  ],
                  [
                    7.824,
                    -13.027
                  ]
                ],
                c: false
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0.885999971278,
                0.885999971278,
                0.885999971278,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 4.851,
              ix: 5
            },
            lc: 1,
            lj: 1,
            ml: 4,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                101.106,
                89.255
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -16.801,
                    -4.531
                  ],
                  [
                    5.441,
                    -17.922
                  ],
                  [
                    10.56,
                    -22.111
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    11.184,
                    -17.627
                  ],
                  [
                    18.135,
                    4.898
                  ],
                  [
                    -3.899,
                    12.83
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -20.02,
                    -27.836
                  ],
                  [
                    24.89,
                    -46.486
                  ],
                  [
                    37.122,
                    18.361
                  ],
                  [
                    23.909,
                    51.017
                  ],
                  [
                    -43.025,
                    17.111
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.215,
                0.525,
                0.65,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                73.719,
                51.268
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    5.395,
                    -17.666
                  ],
                  [
                    19.35,
                    7.654
                  ],
                  [
                    -6.435,
                    18.117
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -13.883,
                    29.213
                  ],
                  [
                    -6.074,
                    19.924
                  ],
                  [
                    -17.863,
                    -7.073
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -10.753,
                    -65.376
                  ],
                  [
                    49.125,
                    -32.778
                  ],
                  [
                    18.586,
                    29.63
                  ],
                  [
                    -22.211,
                    57.722
                  ],
                  [
                    -42.69,
                    12.566
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                49.375,
                131.185
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 4,
    ty: 4,
    nm: "badan Outlines",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          457.0559999999999,
          275.225,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          81.752,
          84.146,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    36.935,
                    -1.282
                  ],
                  [
                    7.102,
                    18.475
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -44.546,
                    1.551
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    14.475,
                    -19.523
                  ],
                  [
                    17.475,
                    -18.523
                  ],
                  [
                    27.369,
                    -12.359
                  ],
                  [
                    9.176,
                    22.643
                  ],
                  [
                    -46.111,
                    -21.861
                  ],
                  [
                    -23.351,
                    -24.194
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                98.721,
                24.444
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.213,
                    -4.328
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    22.683,
                    -14.551
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -7.85,
                    0.602
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    4.024,
                    1.705
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.207,
                    -7.791
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -9.325,
                    -83.896
                  ],
                  [
                    31.842,
                    -79.039
                  ],
                  [
                    56.856,
                    -68.578
                  ],
                  [
                    63.195,
                    -58.547
                  ],
                  [
                    62.51,
                    -44.141
                  ],
                  [
                    58.819,
                    33.569
                  ],
                  [
                    56.856,
                    83.896
                  ],
                  [
                    -58.44,
                    82.855
                  ],
                  [
                    -81.295,
                    -37.719
                  ],
                  [
                    -67.526,
                    -80.558
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.215,
                0.525,
                0.65,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                81.752,
                84.146
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 5,
    ty: 4,
    nm: "rambutDepan Outlines",
    parent: 7,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          44.731,
          108.708,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          23.719,
          65.095,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -11.573,
                    -55.786
                  ],
                  [
                    20.123,
                    9.742
                  ],
                  [
                    -10.213,
                    22.878
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    10.207,
                    -22.872
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    23.47,
                    -39.774
                  ],
                  [
                    18.252,
                    64.845
                  ],
                  [
                    -23.47,
                    49.252
                  ],
                  [
                    -7.313,
                    -41.973
                  ],
                  [
                    17.006,
                    -50.66
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.211999990426,
                0.20800000359,
                0.20800000359,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                23.719,
                65.095
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 6,
    ty: 4,
    nm: "wajah Outlines",
    parent: 7,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          104.744,
          106.051,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          32.219,
          26.847,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 1,
              k: [
                {
                  i: {
                    x: 0.667,
                    y: 1
                  },
                  o: {
                    x: 0.333,
                    y: 0
                  },
                  t: 156,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          6.07,
                          -5.962
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      v: [
                        [
                          5.215,
                          3.189
                        ],
                        [
                          -5.215,
                          2.772
                        ]
                      ],
                      c: false
                    }
                  ]
                },
                {
                  t: 186,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          5.483,
                          0.197
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      v: [
                        [
                          5.215,
                          3.189
                        ],
                        [
                          -5.215,
                          2.772
                        ]
                      ],
                      c: false
                    }
                  ]
                }
              ],
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0.105999995213,
                0.090000002992,
                0.172999991623,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 3.977,
              ix: 5
            },
            lc: 2,
            lj: 2,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                53.048,
                17.083
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 1,
              k: [
                {
                  i: {
                    x: 0.667,
                    y: 1
                  },
                  o: {
                    x: 0.333,
                    y: 0
                  },
                  t: 156,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          6.771,
                          -5.811
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      v: [
                        [
                          5.215,
                          3.004
                        ],
                        [
                          -5.215,
                          2.806
                        ]
                      ],
                      c: false
                    }
                  ]
                },
                {
                  t: 186,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          6.62,
                          -0.109
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ]
                      ],
                      v: [
                        [
                          5.215,
                          3.004
                        ],
                        [
                          -5.215,
                          2.806
                        ]
                      ],
                      c: false
                    }
                  ]
                }
              ],
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0.105999995213,
                0.090000002992,
                0.172999991623,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 4.162,
              ix: 5
            },
            lc: 2,
            lj: 2,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                16.539,
                17.151
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 1,
              k: [
                {
                  i: {
                    x: 0.667,
                    y: 1
                  },
                  o: {
                    x: 0.333,
                    y: 0
                  },
                  t: 156,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -12.232,
                          -0.854
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          11.962,
                          0.828
                        ]
                      ],
                      v: [
                        [
                          13.04,
                          -4.986
                        ],
                        [
                          -13.04,
                          -5.602
                        ],
                        [
                          -0.594,
                          4.774
                        ]
                      ],
                      c: true
                    }
                  ]
                },
                {
                  t: 186,
                  s: [
                    {
                      i: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          -14.524,
                          -0.089
                        ]
                      ],
                      o: [
                        [
                          0,
                          0
                        ],
                        [
                          0,
                          0
                        ],
                        [
                          15.974,
                          0.098
                        ]
                      ],
                      v: [
                        [
                          10.405,
                          -4.868
                        ],
                        [
                          -7.738,
                          -4.706
                        ],
                        [
                          0.429,
                          -2.312
                        ]
                      ],
                      c: true
                    }
                  ]
                }
              ],
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                1,
                1,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                29.576,
                47.842
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    3.572,
                    0.178
                  ],
                  [
                    0.774,
                    -3.006
                  ],
                  [
                    -6.563,
                    -0.7
                  ],
                  [
                    -0.706,
                    1.635
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    6.557,
                    0.7
                  ],
                  [
                    0.8,
                    -1.847
                  ]
                ],
                v: [
                  [
                    0.314,
                    -2.273
                  ],
                  [
                    -7.947,
                    -0.215
                  ],
                  [
                    -1.841,
                    2.521
                  ],
                  [
                    7.603,
                    0.94
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.513999968884,
                0.136999990426,
                0.067000003889,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 1,
              k: [
                {
                  i: {
                    x: 0.667,
                    y: 1
                  },
                  o: {
                    x: 0.333,
                    y: 0
                  },
                  t: 156,
                  s: [
                    55.785,
                    8.175
                  ],
                  to: [
                    0,
                    0.667
                  ],
                  ti: [
                    0,
                    -0.667
                  ]
                },
                {
                  t: 186,
                  s: [
                    55.785,
                    12.175
                  ]
                }
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 4",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -4.751,
                    -0.135
                  ],
                  [
                    0.077,
                    -3.188
                  ],
                  [
                    8.852,
                    -0.143
                  ],
                  [
                    0.696,
                    2.053
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -8.862,
                    0.144
                  ],
                  [
                    -0.69,
                    -2.057
                  ]
                ],
                v: [
                  [
                    0.631,
                    -2.505
                  ],
                  [
                    10.714,
                    0.368
                  ],
                  [
                    1.721,
                    2.676
                  ],
                  [
                    -10.101,
                    0.189
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.513999968884,
                0.136999990426,
                0.067000003889,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 1,
              k: [
                {
                  i: {
                    x: 0.667,
                    y: 1
                  },
                  o: {
                    x: 0.333,
                    y: 0
                  },
                  t: 156,
                  s: [
                    11.041,
                    3.07
                  ],
                  to: [
                    0,
                    1.167
                  ],
                  ti: [
                    0,
                    -1.167
                  ]
                },
                {
                  t: 186,
                  s: [
                    11.041,
                    10.07
                  ]
                }
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 5",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    2.36,
                    -2.459
                  ],
                  [
                    2.61,
                    2.459
                  ],
                  [
                    -2.61,
                    2.428
                  ]
                ],
                c: false
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0.105999995213,
                0.078000005086,
                0.180000005984,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 3.402,
              ix: 5
            },
            lc: 2,
            lj: 2,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                34.794,
                34.426
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 6",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 6,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 7,
    ty: 4,
    nm: "kepala Outlines",
    parent: 8,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          27.466,
          -44.04,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          79.717,
          77.153,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    8.987,
                    -41.567
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    1.184,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    22.316,
                    -27.304
                  ],
                  [
                    52.152,
                    27.304
                  ],
                  [
                    -61.139,
                    20.193
                  ],
                  [
                    -49.566,
                    -23.964
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.211999990426,
                0.20800000359,
                0.20800000359,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                98.043,
                52.452
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    1.298,
                    -9.987
                  ],
                  [
                    -9.995,
                    -1.295
                  ],
                  [
                    -1.299,
                    9.987
                  ],
                  [
                    9.994,
                    1.3
                  ]
                ],
                o: [
                  [
                    -1.303,
                    9.987
                  ],
                  [
                    9.994,
                    1.305
                  ],
                  [
                    1.303,
                    -9.987
                  ],
                  [
                    -9.995,
                    -1.3
                  ]
                ],
                v: [
                  [
                    -18.099,
                    -2.352
                  ],
                  [
                    -2.352,
                    18.081
                  ],
                  [
                    18.099,
                    2.352
                  ],
                  [
                    2.357,
                    -18.086
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                34.298,
                97.995
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -27.278,
                    -3.519
                  ],
                  [
                    -1.796,
                    18.515
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    23.291,
                    3.016
                  ],
                  [
                    3.099,
                    -23.67
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    22.881,
                    1.434
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    2.264,
                    -23.214
                  ],
                  [
                    -23.841,
                    -3.079
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -2.18,
                    27.221
                  ]
                ],
                v: [
                  [
                    -1.956,
                    63.123
                  ],
                  [
                    42.715,
                    29.268
                  ],
                  [
                    46.714,
                    -14.446
                  ],
                  [
                    8.999,
                    -61.479
                  ],
                  [
                    -43.963,
                    -24.734
                  ],
                  [
                    -46.798,
                    10.466
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                89.086,
                89.499
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    1.298,
                    -9.987
                  ],
                  [
                    -9.994,
                    -1.3
                  ],
                  [
                    -1.303,
                    9.987
                  ],
                  [
                    9.994,
                    1.294
                  ]
                ],
                o: [
                  [
                    -1.298,
                    9.987
                  ],
                  [
                    9.994,
                    1.301
                  ],
                  [
                    1.293,
                    -9.987
                  ],
                  [
                    -9.994,
                    -1.3
                  ]
                ],
                v: [
                  [
                    -18.099,
                    -2.355
                  ],
                  [
                    -2.352,
                    18.083
                  ],
                  [
                    18.104,
                    2.349
                  ],
                  [
                    2.357,
                    -18.084
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.944999964097,
                0.6,
                0.541000007181,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                122.965,
                103.202
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 4",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    24.225,
                    -38.468
                  ],
                  [
                    -36.478,
                    -16.284
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -17.574,
                    27.907
                  ],
                  [
                    34.754,
                    15.512
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    60.055,
                    -50.551
                  ],
                  [
                    -42.48,
                    -36.981
                  ],
                  [
                    -6.723,
                    59.937
                  ],
                  [
                    23.217,
                    -39.501
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.211999990426,
                0.20800000359,
                0.20800000359,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                60.304,
                75.699
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 5",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 8,
    ty: 4,
    nm: "leher Outlines",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 30,
            s: [
              9
            ]
          },
          {
            t: 55,
            s: [
              8
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          95.387,
          10.924,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          22.218,
          62.032,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    7.133,
                    31.226
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    -4.475,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    17.59,
                    20.844
                  ],
                  [
                    -21.333,
                    -20.844
                  ],
                  [
                    21.333,
                    -8.124
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.944999964097,
                0.6,
                0.541000007181,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                26.853,
                26.304
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    12.451,
                    1.674
                  ],
                  [
                    -0.052,
                    11.092
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -1.542,
                    13.103
                  ],
                  [
                    -10.627,
                    -1.437
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    23.499,
                    -16.642
                  ],
                  [
                    19.022,
                    20.66
                  ],
                  [
                    -3.604,
                    38.108
                  ],
                  [
                    -23.447,
                    18.564
                  ],
                  [
                    -13.68,
                    -39.783
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                23.748,
                40.033
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 9,
    ty: 4,
    nm: "rambutBelakang Outlines",
    parent: 7,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          82.92,
          93.668,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          84.629,
          80.149,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -0.13,
                    -45.372
                  ],
                  [
                    -11.848,
                    -20.03
                  ],
                  [
                    41.4,
                    20.099
                  ],
                  [
                    -2.118,
                    33.127
                  ],
                  [
                    -17.584,
                    11.22
                  ],
                  [
                    -15.498,
                    -14.848
                  ]
                ],
                o: [
                  [
                    0.108,
                    33.864
                  ],
                  [
                    -23.234,
                    1.616
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    2.118,
                    -33.122
                  ],
                  [
                    17.596,
                    -11.21
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    63.705,
                    -22.548
                  ],
                  [
                    84.378,
                    70.831
                  ],
                  [
                    -73.061,
                    59.799
                  ],
                  [
                    -82.26,
                    0.504
                  ],
                  [
                    -47.735,
                    -68.689
                  ],
                  [
                    24.937,
                    -64.496
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.122000002394,
                0.122000002394,
                0.122000002394,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                84.629,
                80.149
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 10,
    ty: 4,
    nm: "telapakKiri Outlines",
    parent: 11,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 29,
            s: [
              0
            ]
          },
          {
            t: 69,
            s: [
              13
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          91.723,
          158.511,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          23.339,
          18.312,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    3.805,
                    14.825
                  ],
                  [
                    30.357,
                    -6.799
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -3.801,
                    -14.824
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    12.886,
                    19.894
                  ],
                  [
                    21.199,
                    6.684
                  ],
                  [
                    -25.004,
                    -14.71
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                49.905,
                21.759
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    5.311,
                    16.425
                  ],
                  [
                    -16.443,
                    5.309
                  ],
                  [
                    -5.311,
                    -16.419
                  ],
                  [
                    16.437,
                    -5.309
                  ]
                ],
                o: [
                  [
                    -5.316,
                    -16.426
                  ],
                  [
                    16.437,
                    -5.31
                  ],
                  [
                    5.317,
                    16.43
                  ],
                  [
                    -16.443,
                    5.308
                  ]
                ],
                v: [
                  [
                    -29.768,
                    9.613
                  ],
                  [
                    -9.623,
                    -29.742
                  ],
                  [
                    29.767,
                    -9.617
                  ],
                  [
                    9.623,
                    29.743
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                35.334,
                36.493
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 11,
    ty: 4,
    nm: "tanganKiri Outlines",
    parent: 3,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            t: 55,
            s: [
              9
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          32.492,
          157.06,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          32.493,
          33.451,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    14.169,
                    -8.788
                  ],
                  [
                    -9.576,
                    -14.073
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -7.918,
                    -14.896
                  ],
                  [
                    -14.336,
                    8.888
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    54.341,
                    71.097
                  ],
                  [
                    4.577,
                    -70.82
                  ],
                  [
                    -35.977,
                    -82.039
                  ],
                  [
                    -44.765,
                    -39.652
                  ],
                  [
                    28.61,
                    90.827
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                54.591,
                91.077
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 12,
    ty: 4,
    nm: "kakiKiri Outlines",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          67.814,
          461.421,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          95.902,
          294.67,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -20.861,
                    99.009
                  ],
                  [
                    -3.676,
                    -70.481
                  ],
                  [
                    20.861,
                    -99.01
                  ]
                ],
                c: false
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 6.364,
              ix: 5
            },
            lc: 1,
            lj: 1,
            ml: 4,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                143.286,
                224.324
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    2.388,
                    -91.003
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    5.104,
                    19.21
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -2.751,
                    104.99
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -5.103,
                    -19.21
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -44.502,
                    -273.577
                  ],
                  [
                    -92.901,
                    -137.287
                  ],
                  [
                    -87.039,
                    273.577
                  ],
                  [
                    5.091,
                    271.143
                  ],
                  [
                    43.879,
                    -119.853
                  ],
                  [
                    95.652,
                    -176.919
                  ],
                  [
                    81.863,
                    -235.03
                  ],
                  [
                    70.191,
                    -272.759
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.2,
                0.2,
                0.2,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                95.902,
                273.827
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    23.203,
                    31.265
                  ],
                  [
                    -23.473,
                    31.073
                  ],
                  [
                    -23.202,
                    -31.266
                  ],
                  [
                    23.473,
                    -31.062
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                57.225,
                557.824
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 13,
    ty: 4,
    nm: "kakiKanan Outlines",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          133.456,
          461.421,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          91.526,
          294.67,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -31.703,
                    -188.649
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    31.701,
                    188.652
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    4.55,
                    -272.759
                  ],
                  [
                    55.317,
                    -41.844
                  ],
                  [
                    91.276,
                    273.577
                  ],
                  [
                    -6.243,
                    273.577
                  ],
                  [
                    -91.276,
                    -253.048
                  ],
                  [
                    -69.543,
                    -273.577
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.152999997606,
                0.152999997606,
                0.152999997606,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                91.526,
                273.827
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    28.686,
                    31.266
                  ],
                  [
                    -18.888,
                    31.073
                  ],
                  [
                    -28.686,
                    -31.266
                  ],
                  [
                    18.882,
                    -31.062
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                143.681,
                557.825
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 14,
    ty: 4,
    nm: "jempolKanan Outlines",
    parent: 15,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 72,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 102,
            s: [
              -10
            ]
          },
          {
            t: 123,
            s: [
              20
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          15.925,
          86.958,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          -0.169,
          24.501,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    8.531,
                    -17.116
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -4.296,
                    -18.239
                  ],
                  [
                    -0.559,
                    18.239
                  ],
                  [
                    -7.973,
                    3.172
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                13.44,
                29.513
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    1.749,
                    1.232
                  ],
                  [
                    2.109,
                    -2.103
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0.634,
                    -1.807
                  ],
                  [
                    -2.528,
                    -1.772
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -1.433,
                    15.933
                  ],
                  [
                    7.393,
                    -9.18
                  ],
                  [
                    5.566,
                    -14.161
                  ],
                  [
                    -2.903,
                    -13.56
                  ],
                  [
                    -8.027,
                    -7.823
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                8.277,
                16.184
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 15,
    ty: 4,
    nm: "hp Outlines",
    parent: 16,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 15,
            s: [
              0
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0
              ]
            },
            t: 52,
            s: [
              58
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0
              ]
            },
            t: 72,
            s: [
              55
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0
              ]
            },
            t: 102,
            s: [
              51
            ]
          },
          {
            i: {
              x: [
                0.833
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.167
              ],
              y: [
                0
              ]
            },
            t: 123,
            s: [
              62
            ]
          },
          {
            t: 143,
            s: [
              58
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          146.916,
          22.969,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          22.924,
          106.876,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    11.586,
                    -39.083
                  ],
                  [
                    13.039,
                    39.083
                  ],
                  [
                    -13.039,
                    -25.248
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 1,
              k: [
                {
                  i: {
                    x: [
                      0.667
                    ],
                    y: [
                      1
                    ]
                  },
                  o: {
                    x: [
                      0.333
                    ],
                    y: [
                      0
                    ]
                  },
                  t: 149,
                  s: [
                    1,
                    1,
                    1,
                    1
                  ]
                },
                {
                  t: 159,
                  s: [
                    0.984237134457,
                    0.461180239916,
                    0.461180239916,
                    1
                  ]
                }
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                18.953,
                50.282
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -26.079,
                    -25.249
                  ],
                  [
                    -0.748,
                    -39.083
                  ],
                  [
                    26.079,
                    25.243
                  ],
                  [
                    0.748,
                    39.083
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 1,
              k: [
                {
                  i: {
                    x: [
                      0.667
                    ],
                    y: [
                      1
                    ]
                  },
                  o: {
                    x: [
                      0.333
                    ],
                    y: [
                      0
                    ]
                  },
                  t: 149,
                  s: [
                    0.905999995213,
                    0.905999995213,
                    0.905999995213,
                    1
                  ]
                },
                {
                  t: 159,
                  s: [
                    0.870000004768,
                    0.409003973007,
                    0.409003973007,
                    1
                  ]
                }
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                31.993,
                50.282
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -1.6,
                    0.894
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.758,
                    -1.878
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    1.594,
                    -0.893
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.758,
                    1.877
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    1.599,
                    -0.899
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.763,
                    1.872
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -1.599,
                    0.893
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.763,
                    -1.878
                  ]
                ],
                v: [
                  [
                    -32.078,
                    -35.66
                  ],
                  [
                    -3.419,
                    -51.739
                  ],
                  [
                    0.849,
                    -49.962
                  ],
                  [
                    33.589,
                    30.645
                  ],
                  [
                    32.083,
                    35.66
                  ],
                  [
                    3.418,
                    51.745
                  ],
                  [
                    -0.849,
                    49.963
                  ],
                  [
                    -33.589,
                    -30.644
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.85,
                0.4,
                0.85,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                34.602,
                52.888
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -1.594,
                    0.894
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.758,
                    -1.883
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    1.594,
                    -0.894
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.758,
                    1.873
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    1.599,
                    -0.894
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0.758,
                    1.872
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -1.599,
                    0.899
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -0.764,
                    -1.873
                  ]
                ],
                v: [
                  [
                    -32.081,
                    -35.666
                  ],
                  [
                    -3.416,
                    -51.745
                  ],
                  [
                    0.852,
                    -49.963
                  ],
                  [
                    33.592,
                    30.64
                  ],
                  [
                    32.081,
                    35.656
                  ],
                  [
                    3.416,
                    51.74
                  ],
                  [
                    -0.852,
                    49.963
                  ],
                  [
                    -33.586,
                    -30.649
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.216000007181,
                0.172999991623,
                0.372999991623,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                39.817,
                52.891
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 4",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 4,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    14.906,
                    -3.982
                  ],
                  [
                    -7.233,
                    -29.993
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -14.916,
                    3.977
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    20.098,
                    -13.006
                  ],
                  [
                    6.671,
                    -21.054
                  ],
                  [
                    -14.344,
                    25.036
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                27.502,
                74.749
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 5",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 5,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    16.369,
                    -5.528
                  ],
                  [
                    5.534,
                    16.355
                  ],
                  [
                    -16.37,
                    5.524
                  ],
                  [
                    -5.535,
                    -16.351
                  ]
                ],
                o: [
                  [
                    -16.37,
                    5.523
                  ],
                  [
                    -5.525,
                    -16.355
                  ],
                  [
                    16.364,
                    -5.522
                  ],
                  [
                    5.534,
                    16.354
                  ]
                ],
                v: [
                  [
                    10.016,
                    29.613
                  ],
                  [
                    -29.645,
                    10.009
                  ],
                  [
                    -10.014,
                    -29.614
                  ],
                  [
                    29.636,
                    -10.008
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                42.428,
                89.365
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 6",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 6,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 16,
    ty: 4,
    nm: "tanganKanan Outlines",
    parent: 19,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            t: 30,
            s: [
              -16
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          45.441,
          166.991,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          28.55,
          93.367,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -9.012,
                    -14.235
                  ],
                  [
                    -13.997,
                    9.88
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -14.854,
                    8.211
                  ],
                  [
                    9.118,
                    14.406
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    77.268,
                    -62.117
                  ],
                  [
                    -68.572,
                    2.669
                  ],
                  [
                    -79.288,
                    43.891
                  ],
                  [
                    -36.617,
                    52.237
                  ],
                  [
                    88.3,
                    -37.566
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                88.551,
                62.367
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 17,
    ty: 4,
    nm: "shadow1 Outlines",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 21,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          445.9239999999999,
          988.611,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          101.813,
          4.237,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -56.228,
                    0
                  ],
                  [
                    0,
                    2.341
                  ],
                  [
                    56.228,
                    0
                  ],
                  [
                    0,
                    -2.341
                  ]
                ],
                o: [
                  [
                    56.228,
                    0
                  ],
                  [
                    0,
                    -2.341
                  ],
                  [
                    -56.228,
                    0
                  ],
                  [
                    0,
                    2.341
                  ]
                ],
                v: [
                  [
                    0,
                    4.237
                  ],
                  [
                    101.813,
                    0
                  ],
                  [
                    0,
                    -4.237
                  ],
                  [
                    -101.813,
                    0
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.258999992819,
                0.258999992819,
                0.258999992819,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                101.813,
                4.237
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 18,
    ty: 4,
    nm: "shadow2 Outlines",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 21,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          505.31499999999994,
          990.7270000000001,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          224.834,
          6.357,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -124.174,
                    0
                  ],
                  [
                    0,
                    3.509
                  ],
                  [
                    124.174,
                    0
                  ],
                  [
                    0,
                    -3.51
                  ]
                ],
                o: [
                  [
                    124.174,
                    0
                  ],
                  [
                    0,
                    -3.51
                  ],
                  [
                    -124.174,
                    0
                  ],
                  [
                    0,
                    3.509
                  ]
                ],
                v: [
                  [
                    -1e-3,
                    6.357
                  ],
                  [
                    224.833,
                    3e-3
                  ],
                  [
                    -1e-3,
                    -6.358
                  ],
                  [
                    -224.834,
                    3e-3
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0,
                0,
                0,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                224.834,
                6.357
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 19,
    ty: 4,
    nm: "lenganKanan Outlines",
    parent: 4,
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 100,
        ix: 11
      },
      r: {
        a: 1,
        k: [
          {
            i: {
              x: [
                0.667
              ],
              y: [
                1
              ]
            },
            o: {
              x: [
                0.333
              ],
              y: [
                0
              ]
            },
            t: 0,
            s: [
              0
            ]
          },
          {
            t: 30,
            s: [
              -7
            ]
          }
        ],
        ix: 10
      },
      p: {
        a: 0,
        k: [
          127.328,
          25.753,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          43.677,
          17.219,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          100,
          100,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    8.017,
                    16.436
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -0.28,
                    20.844
                  ],
                  [
                    -4.008,
                    -20.844
                  ]
                ],
                c: false
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "st",
            c: {
              a: 0,
              k: [
                0.885999971278,
                0.885999971278,
                0.885999971278,
                1
              ],
              ix: 3
            },
            o: {
              a: 0,
              k: 100,
              ix: 4
            },
            w: {
              a: 0,
              k: 4.851,
              ix: 5
            },
            lc: 1,
            lj: 1,
            ml: 4,
            bm: 0,
            nm: "Stroke 1",
            mn: "ADBE Vector Graphic - Stroke",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                72.235,
                69.88
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 2,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    -1.553,
                    -18.525
                  ],
                  [
                    21.323,
                    -0.037
                  ],
                  [
                    0.717,
                    19.342
                  ]
                ],
                o: [
                  [
                    0,
                    0
                  ],
                  [
                    -2.19,
                    32.492
                  ],
                  [
                    1.735,
                    20.902
                  ],
                  [
                    -19.682,
                    0.032
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -33.558,
                    -48.636
                  ],
                  [
                    35.706,
                    -54.731
                  ],
                  [
                    35.582,
                    15.853
                  ],
                  [
                    -0.761,
                    54.699
                  ],
                  [
                    -37.317,
                    20.077
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                1,
                0.757000014361,
                0.698000021542,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                37.567,
                145.457
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 2",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 2,
        mn: "ADBE Vector Group",
        hd: false
      },
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    0,
                    0
                  ],
                  [
                    -17.565,
                    1.972
                  ],
                  [
                    -4.886,
                    -23.914
                  ],
                  [
                    0.192,
                    1.646
                  ],
                  [
                    0,
                    0
                  ]
                ],
                o: [
                  [
                    -0.639,
                    -17.358
                  ],
                  [
                    18.965,
                    -2.124
                  ],
                  [
                    4.143,
                    20.345
                  ],
                  [
                    0,
                    0
                  ],
                  [
                    0,
                    0
                  ]
                ],
                v: [
                  [
                    -41.488,
                    -11.469
                  ],
                  [
                    -11.494,
                    -45.719
                  ],
                  [
                    35.108,
                    -11.774
                  ],
                  [
                    41.935,
                    42.874
                  ],
                  [
                    -40.979,
                    47.842
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.215,
                0.525,
                0.65,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                46.976,
                48.093
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 3",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 3,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  },
  {
    ddd: 0,
    ind: 20,
    ty: 4,
    nm: "Layer 20 Outlines",
    sr: 1,
    ks: {
      o: {
        a: 0,
        k: 20,
        ix: 11
      },
      r: {
        a: 0,
        k: 0,
        ix: 10
      },
      p: {
        a: 0,
        k: [
          451.98,
          531.814,
          0
        ],
        ix: 2
      },
      a: {
        a: 0,
        k: [
          149.95,
          228.55,
          0
        ],
        ix: 1
      },
      s: {
        a: 0,
        k: [
          184,
          184,
          100
        ],
        ix: 6
      }
    },
    ao: 0,
    shapes: [
      {
        ty: "gr",
        it: [
          {
            ind: 0,
            ty: "sh",
            ix: 1,
            ks: {
              a: 0,
              k: {
                i: [
                  [
                    -44.6,
                    41.4
                  ],
                  [
                    -43.901,
                    -23.6
                  ],
                  [
                    -0.101,
                    -82.9
                  ],
                  [
                    52.5,
                    -38.7
                  ],
                  [
                    44.7,
                    41.6
                  ],
                  [
                    -8.6,
                    62.4
                  ]
                ],
                o: [
                  [
                    44.6,
                    -41.4
                  ],
                  [
                    43.799,
                    23.7
                  ],
                  [
                    0.1,
                    83
                  ],
                  [
                    -52.5,
                    38.6
                  ],
                  [
                    -44.7,
                    -41.6
                  ],
                  [
                    8.7,
                    -62.3
                  ]
                ],
                v: [
                  [
                    -70.4,
                    -151.4
                  ],
                  [
                    93.2,
                    -204.7
                  ],
                  [
                    149.6,
                    -15.2
                  ],
                  [
                    84.799,
                    189.7
                  ],
                  [
                    -105,
                    181
                  ],
                  [
                    -137.7,
                    -0.3
                  ]
                ],
                c: true
              },
              ix: 2
            },
            nm: "Path 1",
            mn: "ADBE Vector Shape - Group",
            hd: false
          },
          {
            ty: "fl",
            c: {
              a: 0,
              k: [
                0.9607843137254902,
                0.9607843137254902,
                0.9607843137254902,
                1
              ],
              ix: 4
            },
            o: {
              a: 0,
              k: 100,
              ix: 5
            },
            r: 1,
            bm: 0,
            nm: "Fill 1",
            mn: "ADBE Vector Graphic - Fill",
            hd: false
          },
          {
            ty: "tr",
            p: {
              a: 0,
              k: [
                149.95,
                228.55
              ],
              ix: 2
            },
            a: {
              a: 0,
              k: [
                0,
                0
              ],
              ix: 1
            },
            s: {
              a: 0,
              k: [
                100,
                100
              ],
              ix: 3
            },
            r: {
              a: 0,
              k: 0,
              ix: 6
            },
            o: {
              a: 0,
              k: 100,
              ix: 7
            },
            sk: {
              a: 0,
              k: 0,
              ix: 4
            },
            sa: {
              a: 0,
              k: 0,
              ix: 5
            },
            nm: "Transform"
          }
        ],
        nm: "Group 1",
        np: 4,
        cix: 2,
        bm: 0,
        ix: 1,
        mn: "ADBE Vector Group",
        hd: false
      }
    ],
    ip: 0,
    op: 300,
    st: 0,
    bm: 0
  }
];
const markers = [];
const SvgGirl = {
  v,
  fr,
  ip,
  op,
  w,
  h,
  nm,
  ddd,
  assets,
  layers,
  markers
};
var propTypesExports = {};
var propTypes$1 = {
  get exports() {
    return propTypesExports;
  },
  set exports(v2) {
    propTypesExports = v2;
  }
};
var ReactPropTypesSecret$1 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;
var ReactPropTypesSecret = ReactPropTypesSecret_1;
function emptyFunction() {
}
function emptyFunctionWithReset() {
}
emptyFunctionWithReset.resetWarningCache = emptyFunction;
var factoryWithThrowingShims = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      return;
    }
    var err = new Error(
      "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
    );
    err.name = "Invariant Violation";
    throw err;
  }
  shim.isRequired = shim;
  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bigint: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};
{
  propTypes$1.exports = factoryWithThrowingShims();
}
var classnamesExports = {};
var classnames = {
  get exports() {
    return classnamesExports;
  },
  set exports(v2) {
    classnamesExports = v2;
  }
};
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(module2) {
  (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames2() {
      var classes = [];
      for (var i = 0; i < arguments.length; i++) {
        var arg = arguments[i];
        if (!arg)
          continue;
        var argType = typeof arg;
        if (argType === "string" || argType === "number") {
          classes.push(arg);
        } else if (Array.isArray(arg)) {
          if (arg.length) {
            var inner = classNames2.apply(null, arg);
            if (inner) {
              classes.push(inner);
            }
          }
        } else if (argType === "object") {
          if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
            classes.push(arg.toString());
            continue;
          }
          for (var key2 in arg) {
            if (hasOwn.call(arg, key2) && arg[key2]) {
              classes.push(key2);
            }
          }
        }
      }
      return classes.join(" ");
    }
    if (module2.exports) {
      classNames2.default = classNames2;
      module2.exports = classNames2;
    } else {
      window.classNames = classNames2;
    }
  })();
})(classnames);
const classNames = classnamesExports;
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var globalCssModule;
function mapToCssModules() {
  var className = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var cssModule = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : globalCssModule;
  if (!cssModule)
    return className;
  return className.split(" ").map(function(c) {
    return cssModule[c] || c;
  }).join(" ");
}
var Element = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && window.Element || function() {
};
function DOMElement(props, propName, componentName) {
  if (!(props[propName] instanceof Element)) {
    return new Error("Invalid prop `" + propName + "` supplied to `" + componentName + "`. Expected prop to be an instance of Element. Validation failed.");
  }
}
propTypesExports.oneOfType([propTypesExports.string, propTypesExports.func, DOMElement, propTypesExports.shape({
  current: propTypesExports.any
})]);
var tagPropType = propTypesExports.oneOfType([propTypesExports.func, propTypesExports.string, propTypesExports.shape({
  $$typeof: propTypesExports.symbol,
  render: propTypesExports.func
}), propTypesExports.arrayOf(propTypesExports.oneOfType([propTypesExports.func, propTypesExports.string, propTypesExports.shape({
  $$typeof: propTypesExports.symbol,
  render: propTypesExports.func
})]))]);
var _excluded = ["className", "cssModule", "type", "size", "color", "children", "tag"];
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key2, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key2 = sourceSymbolKeys[i];
      if (excluded.indexOf(key2) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2))
        continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key2 = sourceKeys[i];
    if (excluded.indexOf(key2) >= 0)
      continue;
    target[key2] = source[key2];
  }
  return target;
}
var propTypes = {
  /** Set a custom element for this component */
  tag: tagPropType,
  /** Change animation of spinner */
  type: propTypesExports.oneOf(["border", "grow"]),
  /** Change size of spinner */
  size: propTypesExports.oneOf(["sm"]),
  /** Change color of spinner */
  color: propTypesExports.oneOf(["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"]),
  /** Add custom class */
  className: propTypesExports.string,
  /** Change existing className with a new className */
  cssModule: propTypesExports.object,
  /** Pass children so this component can wrap the child elements */
  children: propTypesExports.string
};
var defaultProps = {
  tag: "div",
  type: "border",
  children: "Loading..."
};
function Spinner(props) {
  var className = props.className, cssModule = props.cssModule, type = props.type, size = props.size, color = props.color, children = props.children, Tag = props.tag, attributes = _objectWithoutProperties(props, _excluded);
  var classes = mapToCssModules(classNames(className, size ? "spinner-".concat(type, "-").concat(size) : false, "spinner-".concat(type), color ? "text-".concat(color) : false), cssModule);
  return /* @__PURE__ */ React.createElement(Tag, _extends({
    role: "status"
  }, attributes, {
    className: classes
  }), children && /* @__PURE__ */ React.createElement("span", {
    className: mapToCssModules("visually-hidden", cssModule)
  }, children));
}
Spinner.propTypes = propTypes;
Spinner.defaultProps = defaultProps;
const bootstrap_min = "";
function Loading() {
  return /* @__PURE__ */ jsx(Spinner, { type: "border", className: "m-5", color: "light" });
}
function Marcador() {
  const url = "/h-points/";
  const [todos, setTodos] = reactExports.useState(0);
  const [loading, setLoading] = reactExports.useState(true);
  reactExports.useEffect(() => {
    let mas = 0;
    fetch(url).then((res) => res.json()).then((data2) => {
      for (let x2 = 0; x2 < data2.data.length; x2++) {
        let xl = data2.data[x2].number;
        mas = mas + xl;
      }
      let variable = Math.floor(mas);
      setTodos(variable);
      setLoading(false);
    });
  }, []);
  if (loading) {
    return /* @__PURE__ */ jsx(Loading, {});
  }
  return /* @__PURE__ */ jsx("span", { children: todos });
}
function Marcadorm() {
  const url = "/m-points/";
  const [todos, setTodos] = reactExports.useState(0);
  const [loading, setLoading] = reactExports.useState(true);
  reactExports.useEffect(() => {
    let mas = 0;
    fetch(url).then((res) => res.json()).then((data2) => {
      for (let x2 = 0; x2 < data2.data.length; x2++) {
        let xl = data2.data[x2].number;
        mas = mas + xl;
      }
      let variable = Math.floor(mas);
      setTodos(variable);
      setLoading(false);
    });
  }, []);
  if (loading) {
    return /* @__PURE__ */ jsx(Loading, {});
  }
  return /* @__PURE__ */ jsx("span", { className: "colorGirl", children: todos });
}
function TablaH() {
  const url = "/h-points/";
  const [desc, setDesc] = reactExports.useState(null);
  const [isLoading, setIsLoading] = reactExports.useState(true);
  reactExports.useEffect(() => {
    fetch(url).then((res) => res.json()).then((data2) => {
      setDesc(data2.data.reverse());
      setIsLoading(false);
    });
  }, []);
  return /* @__PURE__ */ jsx(Fragment, { children: isLoading ? /* @__PURE__ */ jsx(Loading, {}) : /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx("div", { className: "tableTeam", children: desc == null ? void 0 : desc.map((tabla) => /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx("table", { width: "100%", children: /* @__PURE__ */ jsx("tbody", { children: /* @__PURE__ */ jsxs("tr", { children: [
    /* @__PURE__ */ jsx("td", { style: { textAlign: "center" }, width: "18%", children: tabla.number }),
    /* @__PURE__ */ jsx("td", { children: tabla.description })
  ] }) }) }) })) }) }) });
}
function TablaM() {
  const url = "/m-points/";
  const [desc, setDesc] = reactExports.useState(null);
  const [loading, setLoading] = reactExports.useState(true);
  reactExports.useEffect(() => {
    fetch(url).then((res) => res.json()).then((data2) => {
      setDesc(data2.data.reverse());
      setLoading(false);
    });
  }, []);
  if (loading) {
    return /* @__PURE__ */ jsx(Loading, {});
  }
  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx("div", { className: "tableTeam tableTeamPadd", children: desc == null ? void 0 : desc.map((tabla) => /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx("table", { cellPadding: "2", width: "100%", children: /* @__PURE__ */ jsx("tbody", { children: /* @__PURE__ */ jsxs("tr", { children: [
    /* @__PURE__ */ jsx("td", { style: { textAlign: "center" }, width: "18%", children: tabla.number }),
    /* @__PURE__ */ jsx("td", { rowSpan: "2", colSpan: "2", cellPadding: "2", children: tabla.description })
  ] }) }) }) })) }) });
}
const image = "/assets/gender-12bb4434.png";
function Container() {
  const [showTable, setShowTable] = reactExports.useState(false);
  function toggleTable() {
    setShowTable(!showTable);
  }
  const [showTableH, setShowTableH] = reactExports.useState(false);
  function toggleTableH() {
    setShowTableH(!showTableH);
  }
  return /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsxs("div", { className: "container", children: [
    /* @__PURE__ */ jsx("img", { src: image, draggable: "false", onMouseDown: (e) => e.preventDefault(), alt: "Logo Genero" }),
    /* @__PURE__ */ jsx("h2", { children: "A Cual Equipo Perteneces?👀" }),
    /* @__PURE__ */ jsxs("div", { className: "cont-num", children: [
      /* @__PURE__ */ jsxs("div", { className: "cont-man-table num", children: [
        /* @__PURE__ */ jsxs("div", { className: "cont-title animation-man", children: [
          /* @__PURE__ */ jsx("span", { style: { "--I": 1 }, children: "H" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 2 }, children: "O" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 3 }, children: "M" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 4 }, children: "B" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 5 }, children: "R" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 6 }, children: "E" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 7 }, children: "S" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 8 }, children: " 🤵" })
        ] }),
        /* @__PURE__ */ jsx(Marcador, {})
      ] }),
      /* @__PURE__ */ jsxs("div", { className: "cont-girl-table num", children: [
        /* @__PURE__ */ jsxs("div", { className: "cont-title animation-girl", children: [
          /* @__PURE__ */ jsx("span", { style: { "--I": 1 }, children: "M" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 2 }, children: "U" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 3 }, children: "J" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 4 }, children: "E" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 5 }, children: "R" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 6 }, children: "E" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 7 }, children: "S" }),
          /* @__PURE__ */ jsx("span", { style: { "--I": 8 }, children: " 👩‍💼" })
        ] }),
        /* @__PURE__ */ jsx(Marcadorm, {})
      ] })
    ] }),
    /* @__PURE__ */ jsxs("div", { className: "cont-svg", children: [
      /* @__PURE__ */ jsxs("div", { className: "cont-man", children: [
        /* @__PURE__ */ jsx(Lottie, { animationData: SvgMan }),
        /* @__PURE__ */ jsx("div", { className: "cont-Button", children: /* @__PURE__ */ jsx("button", { onClick: toggleTableH, className: "button-man", children: "Ver Detalles" }) }),
        showTableH && /* @__PURE__ */ jsx(TablaH, {}),
        /* @__PURE__ */ jsx("div", {})
      ] }),
      /* @__PURE__ */ jsxs("div", { className: "cont-girl", children: [
        /* @__PURE__ */ jsx("div", { style: { width: "580px", height: "auto", position: "relative" }, children: /* @__PURE__ */ jsx(Lottie, { animationData: SvgGirl }) }),
        /* @__PURE__ */ jsx("div", { className: "cont-Button", children: /* @__PURE__ */ jsx("button", { onClick: toggleTable, className: "button-girl", children: "Ver Detalles" }) }),
        showTable && /* @__PURE__ */ jsx(TablaM, {}),
        /* @__PURE__ */ jsx("div", {})
      ] })
    ] })
  ] }) });
}
const App$1 = "";
function App() {
  return /* @__PURE__ */ jsxs("div", { className: "App", children: [
    /* @__PURE__ */ jsx(Header, {}),
    /* @__PURE__ */ jsx(Container, {})
  ] });
}
client.createRoot(document.getElementById("root")).render(
  /* @__PURE__ */ jsx(React.StrictMode, { children: /* @__PURE__ */ jsx(App, {}) })
);
